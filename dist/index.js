/*
  NudeNet
  author: <https://github.com/vladmandic>'
*/

var AL=Object.create;var Ub=Object.defineProperty;var DL=Object.getOwnPropertyDescriptor;var RL=Object.getOwnPropertyNames;var FL=Object.getPrototypeOf,_L=Object.prototype.hasOwnProperty;var co=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports),Kt=(r,t)=>{for(var e in t)Ub(r,e,{get:t[e],enumerable:!0})},OL=(r,t,e,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of RL(t))!_L.call(r,n)&&n!==e&&Ub(r,n,{get:()=>t[n],enumerable:!(o=DL(t,n))||o.enumerable});return r};var tm=(r,t,e)=>(e=r!=null?AL(FL(r)):{},OL(t||!r||!r.__esModule?Ub(e,"default",{value:r,enumerable:!0}):e,r));var aI=co((GY,iI)=>{iI.exports=Ce;var To=null;try{To=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ce(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}Ce.prototype.__isLong__;Object.defineProperty(Ce.prototype,"__isLong__",{value:!0});function to(r){return(r&&r.__isLong__)===!0}Ce.isLong=to;var ZT={},JT={};function sl(r,t){var e,o,n;return t?(r>>>=0,(n=0<=r&&r<256)&&(o=JT[r],o)?o:(e=Te(r,(r|0)<0?-1:0,!0),n&&(JT[r]=e),e)):(r|=0,(n=-128<=r&&r<128)&&(o=ZT[r],o)?o:(e=Te(r,r<0?-1:0,!1),n&&(ZT[r]=e),e))}Ce.fromInt=sl;function Io(r,t){if(isNaN(r))return t?nl:So;if(t){if(r<0)return nl;if(r>=rI)return sI}else{if(r<=-tI)return Qr;if(r+1>=tI)return nI}return r<0?Io(-r,t).neg():Te(r%mc|0,r/mc|0,t)}Ce.fromNumber=Io;function Te(r,t,e){return new Ce(r,t,e)}Ce.fromBits=Te;var Dh=Math.pow;function nw(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return So;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var o;if((o=r.indexOf("-"))>0)throw Error("interior hyphen");if(o===0)return nw(r.substring(1),t,e).neg();for(var n=Io(Dh(e,8)),s=So,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),l=parseInt(r.substring(i,i+a),e);if(a<8){var u=Io(Dh(e,a));s=s.mul(u).add(Io(l))}else s=s.mul(n),s=s.add(Io(l))}return s.unsigned=t,s}Ce.fromString=nw;function jo(r,t){return typeof r=="number"?Io(r,t):typeof r=="string"?nw(r,t):Te(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}Ce.fromValue=jo;var QT=1<<16,nP=1<<24,mc=QT*QT,rI=mc*mc,tI=rI/2,eI=sl(nP),So=sl(0);Ce.ZERO=So;var nl=sl(0,!0);Ce.UZERO=nl;var pc=sl(1);Ce.ONE=pc;var oI=sl(1,!0);Ce.UONE=oI;var ow=sl(-1);Ce.NEG_ONE=ow;var nI=Te(-1,2147483647,!1);Ce.MAX_VALUE=nI;var sI=Te(-1,-1,!0);Ce.MAX_UNSIGNED_VALUE=sI;var Qr=Te(0,-2147483648,!1);Ce.MIN_VALUE=Qr;var ut=Ce.prototype;ut.toInt=function(){return this.unsigned?this.low>>>0:this.low};ut.toNumber=function(){return this.unsigned?(this.high>>>0)*mc+(this.low>>>0):this.high*mc+(this.low>>>0)};ut.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Qr)){var e=Io(t),o=this.div(e),n=o.mul(e).sub(this);return o.toString(t)+n.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=Io(Dh(t,6),this.unsigned),i=this,a="";;){var l=i.div(s),u=i.sub(l.mul(s)).toInt()>>>0,c=u.toString(t);if(i=l,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};ut.getHighBits=function(){return this.high};ut.getHighBitsUnsigned=function(){return this.high>>>0};ut.getLowBits=function(){return this.low};ut.getLowBitsUnsigned=function(){return this.low>>>0};ut.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Qr)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&!(t&1<<e);e--);return this.high!=0?e+33:e+1};ut.isZero=function(){return this.high===0&&this.low===0};ut.eqz=ut.isZero;ut.isNegative=function(){return!this.unsigned&&this.high<0};ut.isPositive=function(){return this.unsigned||this.high>=0};ut.isOdd=function(){return(this.low&1)===1};ut.isEven=function(){return(this.low&1)===0};ut.equals=function(t){return to(t)||(t=jo(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};ut.eq=ut.equals;ut.notEquals=function(t){return!this.eq(t)};ut.neq=ut.notEquals;ut.ne=ut.notEquals;ut.lessThan=function(t){return this.comp(t)<0};ut.lt=ut.lessThan;ut.lessThanOrEqual=function(t){return this.comp(t)<=0};ut.lte=ut.lessThanOrEqual;ut.le=ut.lessThanOrEqual;ut.greaterThan=function(t){return this.comp(t)>0};ut.gt=ut.greaterThan;ut.greaterThanOrEqual=function(t){return this.comp(t)>=0};ut.gte=ut.greaterThanOrEqual;ut.ge=ut.greaterThanOrEqual;ut.compare=function(t){if(to(t)||(t=jo(t)),this.eq(t))return 0;var e=this.isNegative(),o=t.isNegative();return e&&!o?-1:!e&&o?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};ut.comp=ut.compare;ut.negate=function(){return!this.unsigned&&this.eq(Qr)?Qr:this.not().add(pc)};ut.neg=ut.negate;ut.add=function(t){to(t)||(t=jo(t));var e=this.high>>>16,o=this.high&65535,n=this.low>>>16,s=this.low&65535,i=t.high>>>16,a=t.high&65535,l=t.low>>>16,u=t.low&65535,c=0,p=0,m=0,f=0;return f+=s+u,m+=f>>>16,f&=65535,m+=n+l,p+=m>>>16,m&=65535,p+=o+a,c+=p>>>16,p&=65535,c+=e+i,c&=65535,Te(m<<16|f,c<<16|p,this.unsigned)};ut.subtract=function(t){return to(t)||(t=jo(t)),this.add(t.neg())};ut.sub=ut.subtract;ut.multiply=function(t){if(this.isZero())return So;if(to(t)||(t=jo(t)),To){var e=To.mul(this.low,this.high,t.low,t.high);return Te(e,To.get_high(),this.unsigned)}if(t.isZero())return So;if(this.eq(Qr))return t.isOdd()?Qr:So;if(t.eq(Qr))return this.isOdd()?Qr:So;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(eI)&&t.lt(eI))return Io(this.toNumber()*t.toNumber(),this.unsigned);var o=this.high>>>16,n=this.high&65535,s=this.low>>>16,i=this.low&65535,a=t.high>>>16,l=t.high&65535,u=t.low>>>16,c=t.low&65535,p=0,m=0,f=0,h=0;return h+=i*c,f+=h>>>16,h&=65535,f+=s*c,m+=f>>>16,f&=65535,f+=i*u,m+=f>>>16,f&=65535,m+=n*c,p+=m>>>16,m&=65535,m+=s*u,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,p+=o*c+n*u+s*l+i*a,p&=65535,Te(f<<16|h,p<<16|m,this.unsigned)};ut.mul=ut.multiply;ut.divide=function(t){if(to(t)||(t=jo(t)),t.isZero())throw Error("division by zero");if(To){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?To.div_u:To.div_s)(this.low,this.high,t.low,t.high);return Te(e,To.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?nl:So;var o,n,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return nl;if(t.gt(this.shru(1)))return oI;s=nl}else{if(this.eq(Qr)){if(t.eq(pc)||t.eq(ow))return Qr;if(t.eq(Qr))return pc;var i=this.shr(1);return o=i.div(t).shl(1),o.eq(So)?t.isNegative()?pc:ow:(n=this.sub(t.mul(o)),s=o.add(n.div(t)),s)}else if(t.eq(Qr))return this.unsigned?nl:So;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=So}for(n=this;n.gte(t);){o=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(o)/Math.LN2),l=a<=48?1:Dh(2,a-48),u=Io(o),c=u.mul(t);c.isNegative()||c.gt(n);)o-=l,u=Io(o,this.unsigned),c=u.mul(t);u.isZero()&&(u=pc),s=s.add(u),n=n.sub(c)}return s};ut.div=ut.divide;ut.modulo=function(t){if(to(t)||(t=jo(t)),To){var e=(this.unsigned?To.rem_u:To.rem_s)(this.low,this.high,t.low,t.high);return Te(e,To.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};ut.mod=ut.modulo;ut.rem=ut.modulo;ut.not=function(){return Te(~this.low,~this.high,this.unsigned)};ut.and=function(t){return to(t)||(t=jo(t)),Te(this.low&t.low,this.high&t.high,this.unsigned)};ut.or=function(t){return to(t)||(t=jo(t)),Te(this.low|t.low,this.high|t.high,this.unsigned)};ut.xor=function(t){return to(t)||(t=jo(t)),Te(this.low^t.low,this.high^t.high,this.unsigned)};ut.shiftLeft=function(t){return to(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Te(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Te(0,this.low<<t-32,this.unsigned)};ut.shl=ut.shiftLeft;ut.shiftRight=function(t){return to(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Te(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Te(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};ut.shr=ut.shiftRight;ut.shiftRightUnsigned=function(t){if(to(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var o=this.low;return Te(o>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?Te(e,0,this.unsigned):Te(e>>>t-32,0,this.unsigned)};ut.shru=ut.shiftRightUnsigned;ut.shr_u=ut.shiftRightUnsigned;ut.toSigned=function(){return this.unsigned?Te(this.low,this.high,!1):this};ut.toUnsigned=function(){return this.unsigned?this:Te(this.low,this.high,!0)};ut.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};ut.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};ut.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};Ce.fromBytes=function(t,e,o){return o?Ce.fromBytesLE(t,e):Ce.fromBytesBE(t,e)};Ce.fromBytesLE=function(t,e){return new Ce(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};Ce.fromBytesBE=function(t,e){return new Ce(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var VI=co(()=>{});var GI=co(()=>{});var bS=co((yS,Pw)=>{(function(r,t,e){function o(a){var l=this,u=i();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(a),l.s0<0&&(l.s0+=1),l.s1-=u(a),l.s1<0&&(l.s1+=1),l.s2-=u(a),l.s2<0&&(l.s2+=1),u=null}function n(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function s(a,l){var u=new o(a),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&n(c,u),p.state=function(){return n(u,{})}),p}function i(){var a=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){a+=u.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(yS,typeof Pw=="object"&&Pw,typeof define=="function"&&define)});var CS=co((wS,zw)=>{(function(r,t,e){function o(i){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},i===(i|0)?a.x=i:l+=i;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(wS,typeof zw=="object"&&zw,typeof define=="function"&&define)});var IS=co((TS,Mw)=>{(function(r,t,e){function o(i){var a=this,l="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:l+=i;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,u==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function n(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(TS,typeof Mw=="object"&&Mw,typeof define=="function"&&define)});var vS=co((SS,Bw)=>{(function(r,t,e){function o(i){var a=this;a.next=function(){var u=a.x,c=a.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,a.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(a,i)}function n(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(SS,typeof Bw=="object"&&Bw,typeof define=="function"&&define)});var kS=co((NS,Vw)=>{(function(r,t,e){function o(i){var a=this;a.next=function(){var u=a.w,c=a.X,p=a.i,m,f;return a.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,a.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,h,d,g=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,h=-32;h<x;++h)c&&(m^=c.charCodeAt((h+32)%c.length)),h===0&&(d=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,h>=0&&(d=d+1640531527|0,p=g[h&127]^=m+d,f=p==0?f+1:0);for(f>=128&&(g[(c&&c.length||0)&127]=-1),f=127,h=4*128;h>0;--h)m=g[f+34&127],p=g[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,g[f]=m^p;u.w=d,u.X=g,u.i=f}l(a,i)}function n(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(NS,typeof Vw=="object"&&Vw,typeof define=="function"&&define)});var $S=co((ES,Gw)=>{(function(r,t,e){function o(i){var a=this,l="";a.next=function(){var c=a.b,p=a.c,m=a.d,f=a.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-m|0,a.d=m<<16^p>>>16^f,a.a=f-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):l+=i;for(var u=0;u<l.length+20;u++)a.b^=l.charCodeAt(u)|0,a.next()}function n(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var l=new o(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&n(u,l),c.state=function(){return n(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(ES,typeof Gw=="object"&&Gw,typeof define=="function"&&define)});var AS=co(()=>{});var RS=co((DS,Rd)=>{(function(r,t,e){var o=256,n=6,s=52,i="random",a=e.pow(o,n),l=e.pow(2,s),u=l*2,c=o-1,p;function m(w,C,v){var $=[];C=C==!0?{entropy:!0}:C||{};var R=g(d(C.entropy?[w,b(t)]:w??x(),3),$),F=new f($),O=function(){for(var P=F.g(n),B=a,V=0;P<l;)P=(P+V)*o,B*=o,V=F.g(1);for(;P>=u;)P/=2,B/=2,V>>>=1;return(P+V)/B};return O.int32=function(){return F.g(4)|0},O.quick=function(){return F.g(4)/4294967296},O.double=O,g(b(F.S),t),(C.pass||v||function(P,B,V,G){return G&&(G.S&&h(G,F),P.state=function(){return h(F,{})}),V?(e[i]=P,B):P})(O,R,"global"in C?C.global:this==e,C.state)}function f(w){var C,v=w.length,$=this,R=0,F=$.i=$.j=0,O=$.S=[];for(v||(w=[v++]);R<o;)O[R]=R++;for(R=0;R<o;R++)O[R]=O[F=c&F+w[R%v]+(C=O[R])],O[F]=C;($.g=function(P){for(var B,V=0,G=$.i,H=$.j,W=$.S;P--;)B=W[G=c&G+1],V=V*o+W[c&(W[G]=W[H=c&H+B])+(W[H]=B)];return $.i=G,$.j=H,V})(o)}function h(w,C){return C.i=w.i,C.j=w.j,C.S=w.S.slice(),C}function d(w,C){var v=[],$=typeof w,R;if(C&&$=="object")for(R in w)try{v.push(d(w[R],C-1))}catch{}return v.length?v:$=="string"?w:w+"\0"}function g(w,C){for(var v=w+"",$,R=0;R<v.length;)C[c&R]=c&($^=C[c&R]*19)+v.charCodeAt(R++);return b(C)}function x(){try{var w;return p&&(w=p.randomBytes)?w=w(o):(w=new Uint8Array(o),(r.crypto||r.msCrypto).getRandomValues(w)),b(w)}catch{var C=r.navigator,v=C&&C.plugins;return[+new Date,r,v,r.screen,b(t)]}}function b(w){return String.fromCharCode.apply(0,w)}if(g(e.random(),t),typeof Rd=="object"&&Rd.exports){Rd.exports=m;try{p=AS()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):e["seed"+i]=m})(typeof self<"u"?self:DS,[],Math)});var wm=co((npt,FS)=>{var TM=bS(),IM=CS(),SM=IS(),vM=vS(),NM=kS(),kM=$S(),yl=RS();yl.alea=TM;yl.xor128=IM;yl.xorwow=SM;yl.xorshift7=vM;yl.xor4096=NM;yl.tychei=kM;FS.exports=yl});var SE=co(()=>{});var Wa=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},qn=class{refCount(t){return Jr("refCount")}incRef(t){return Jr("incRef")}timerAvailable(){return!0}time(t){return Jr("time")}read(t){return Jr("read")}readSync(t){return Jr("readSync")}readToGPU(t,e){return Jr("readToGPU")}numDataIds(){return Jr("numDataIds")}disposeData(t,e){return Jr("disposeData")}write(t,e,o){return Jr("write")}move(t,e,o,n,s){return Jr("move")}createTensorFromGPUData(t,e,o){return Jr("createTensorFromGPUData")}memory(){return Jr("memory")}floatPrecision(){return Jr("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Jr("dispose")}};function Jr(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function BT(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Eh(r,t,e)}function LL(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,o=0;for(;e>0;)o=Math.random()*e|0,e--,Eh(r,e,o),Eh(t,e,o)}function eu(r,t,e){return Math.max(r,Math.min(t,e))}function PL(r){return r%2===0?r:r+1}function Eh(r,t,e){let o=r[t];r[t]=r[e],r[e]=o}function zL(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function ML(r,t){let e=Math.random();return t*e+(1-e)*r}function BL(r,t){let e=0;for(let o=0;o<r.length;o++){let n=Number(r[o])-Number(t[o]);e+=n*n}return e}function E(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function ve(r,t,e=""){E(Co(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function po(r){E(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Lt(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function VL(r){return r.length===0}function Co(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function jn(r){return r%1===0}function GL(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function WL(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function UL(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return BT(t),t}function Ha(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function HL(r,t=n=>0,e,o){return new Promise((n,s)=>{let i=0,a=()=>{if(r()){n();return}i++;let l=t(i);if(e!=null&&i>=e){s();return}o!=null?o(a,l):setTimeout(a,l)};a()})}function KL(r,t){let e=1,o=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(o!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${o} and dim ${s}`);o=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(o===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let n=r.slice();return n[o]=t/e,n}function ze(r,t){let e=t.length;return r=r==null?t.map((o,n)=>n):[].concat(r),E(r.every(o=>o>=-e&&o<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),E(r.every(o=>jn(o)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(o=>o<0?e+o:o)}function Hb(r,t){let e=[],o=[],n=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||n?null:ze(t,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(e.push(r[a]),o.push(a)),s[i]<=a&&i++}r[a]!==1&&(e.push(r[a]),o.push(a))}return{newShape:e,keptDims:o}}function Kb(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else throw new Error(`Unknown data type ${r}`);return e}function qb(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function jb(r,t){for(let e=0;e<r.length;e++){let o=r[e];if(isNaN(o)||!isFinite(o))throw Error(`A tensor of type ${t} being uploaded contains ${o}.`)}}function Xb(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function qL(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function ru(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function Yb(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function ou(r){return typeof r=="string"||r instanceof String}function VT(r){return typeof r=="boolean"}function GT(r){return typeof r=="number"}function nu(r){return Array.isArray(r)?nu(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":GT(r)?"float32":ou(r)?"string":VT(r)?"bool":"float32"}function su(r){return!!(r&&r.constructor&&r.call&&r.apply)}function iu(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function mn(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let o=t-3;o>=0;--o)e[o]=e[o+1]*r[o+1];return e}function WT(r,t,e,o=!1){let n=new Array;if(t.length===1){let s=t[0]*(o?2:1);for(let i=0;i<s;i++)n[i]=e[r+i]}else{let s=t[0],i=t.slice(1),a=i.reduce((l,u)=>l*u)*(o?2:1);for(let l=0;l<s;l++)n[l]=WT(r+l*a,i,e,o)}return n}function Ua(r,t,e=!1){if(r.length===0)return t[0];let o=r.reduce((n,s)=>n*s)*(e?2:1);if(o===0)return[];if(o!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return WT(0,r,t,e)}function jL(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function em(r,t){let e=au(r,t);for(let o=0;o<e.length;o++)e[o]=1;return e}function au(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function XL(r,t){let e=r.reduce((o,n)=>o*n,1);if(t==null||t==="float32")return Ua(r,new Float32Array(e));if(t==="int32")return Ua(r,new Int32Array(e));if(t==="bool")return Ua(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function he(r){r.forEach(t=>{E(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function YL(r,t,e){if(t===0)return 0;if(t===1)return r[0];let o=r[r.length-1];for(let n=0;n<r.length-1;++n)o+=e[n]*r[n];return o}function ZL(r,t,e){if(t===0)return[];if(t===1)return[r];let o=new Array(t);for(let n=0;n<o.length-1;++n)o[n]=Math.floor(r/e[n]),r-=o[n]*e[n];return o[o.length-1]=r,o}function Ka(r){return r&&r.then&&typeof r.then=="function"}var UT="tfjsflags",rm=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=QL,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,o){if(this.flagRegistry[t]={evaluationFn:e,setHook:o},this.urlFlags[t]!=null){let n=this.urlFlags[t];z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${n}.`),this.set(t,n)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(Ka(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);UT in t&&t[UT].split(",").forEach(o=>{let[n,s]=o.split(":");this.urlFlags[n]=eP(n,s)})}};function QL(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...o)=>(tP(t,o[0],o[1]),o.join("="))),t}function tP(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function eP(r,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${r}.`)}function z(){return Zb}var Zb=null;function HT(r){Zb=r}var Jb;function Qb(){if(Jb==null){let r;if(typeof window<"u")r=window;else if(typeof global<"u")r=global;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");Jb=r}return Jb}function rP(){let r=Qb();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function om(r,t){let e=rP();if(e.has(r))return e.get(r);{let o=t();return e.set(r,o),e.get(r)}}var hi="Abs",Xn="Acos",Yn="Acosh",qo="Add",di="AddN",lu="All",uu="Any",gi="ArgMax",xi="ArgMin",Zn="Asin",Jn="Asinh",Qn="Atan",ts="Atanh",es="Atan2",yi="AvgPool",cu="AvgPoolGrad",bi="AvgPool3D",pu="AvgPool3DGrad",wi="BatchMatMul",Ci="BatchToSpaceND",mu="Bincount",KT="BroadcastTo",fu="BroadcastArgs",fn="Cast",rs="Ceil",os="ClipByValue",hu="Complex",Ti="ComplexAbs",Ii="Concat",Si="Conv2D",du="Conv2DBackpropFilter",vi="Conv2DBackpropInput",Ni="Conv3D",gu="Conv3DBackpropFilterV2",xu="Conv3DBackpropInputV2",ns="Cos",ss="Cosh",yu="Cumprod",ki="Cumsum",bu="CropAndResize",wu="DenseBincount",Cu="DepthToSpace",Ei="DepthwiseConv2dNative",Tu="DepthwiseConv2dNativeBackpropFilter",Iu="DepthwiseConv2dNativeBackpropInput",Su="Diag",$i="Dilation2D",nm="Dilation2DBackpropInput",sm="Dilation2DBackpropFilter",is="RealDiv",vu="Einsum",as="Elu",Nu="EluGrad",ls="Erf",qa="Equal",us="Exp",Ai="ExpandDims",cs="Expm1",ku="FFT",Eu="Fill",$u="FlipLeftRight",ps="Floor",ms="FloorDiv",Di="FusedBatchNorm",Ri="GatherV2",Au="GatherNd",ja="Greater",fs="GreaterEqual",hn="Identity",Du="IFFT",Ru="Imag",hs="IsFinite",ds="IsInf",gs="IsNan",Fi="LeakyRelu",Xa="Less",Ya="LessEqual",Fu="LinSpace",xs="Log",ys="Log1p",Za="LogicalAnd",Ja="LogicalNot",Qa="LogicalOr";var qT="LogSoftmax";var _i="LRN",_u="LRNGrad",Oi="Max",bs="Maximum",Li="MaxPool",Ou="MaxPoolGrad",Pi="MaxPool3D",Lu="MaxPool3DGrad",Pu="MaxPoolWithArgmax",zi="Mean",Mi="Min",ws="Minimum",Bi="MirrorPad",Cs="Mod",zu="Multinomial",Ts="Multiply",Vi="Neg",tl="NotEqual",Mu="NonMaxSuppressionV3",Bu="NonMaxSuppressionV4",Vu="NonMaxSuppressionV5",Gi="OnesLike",Wi="OneHot",Ui="Pack",Hi="PadV2";var Is="Pow",Ki="Prelu",qi="Prod",Gu="RaggedGather",Wu="RaggedRange",Uu="RaggedTensorToTensor",Hu="Range",Ku="Real",Ss="Reciprocal",vs="Relu",ji="Reshape",Xi="ResizeNearestNeighbor",qu="ResizeNearestNeighborGrad",Yi="ResizeBilinear",ju="ResizeBilinearGrad",Ns="Relu6",Zi="Reverse",ks="Round",Es="Rsqrt",Xu="ScatterNd",Yu="SearchSorted",Ji="Select",$s="Selu",Qi="Slice",As="Sin",Ds="Sinh",Rs="Sign",Fs="Sigmoid",_s="Softplus",Os="Sqrt",ta="Sum",ea="SpaceToBatchND",ra="SplitV",oa="Softmax",Zu="SparseFillEmptyRows",Ju="SparseReshape",Qu="SparseSegmentMean",tc="SparseSegmentSum",ec="SparseToDense",Ls="SquaredDifference",rc="Square",oc="StridedSlice",nc="StringNGrams",sc="StringSplit",ic="StringToHashBucketFast",Ps="Sub",zs="Tan",Ms="Tanh",dn="Tile",ac="TopK",lc="Transform",gn="Transpose",uc="Unique",na="Unpack",sa="UnsortedSegmentSum";var ia="ZerosLike",Bs="Step",im="FromPixels",cc="RotateWithOffset",el="_FusedMatMul",rl="FusedConv2D",ol="FusedDepthwiseConv2D";function xn(...r){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...r)}function oP(...r){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...r)}var $h=om("kernelRegistry",()=>new Map),tw=om("gradRegistry",()=>new Map);function am(r,t){let e=YT(r,t);return $h.get(e)}function ew(r){return tw.get(r)}function rw(r){let t=$h.entries(),e=[];for(;;){let{done:o,value:n}=t.next();if(o)break;let[s,i]=n,[a]=s.split("_");a===r&&e.push(i)}return e}function Ah(r){let{kernelName:t,backendName:e}=r,o=YT(t,e);$h.has(o)&&xn(`The kernel '${t}' for backend '${e}' is already registered`),$h.set(o,r)}function XT(r){let{kernelName:t}=r;tw.has(t)&&z().getBool("DEBUG")&&xn(`Overriding the gradient for '${t}'`),tw.set(t,r)}function YT(r,t){return`${t}_${r}`}var y={};Kt(y,{arraysEqual:()=>Co,assert:()=>E,assertNonNegativeIntegerDimensions:()=>he,assertNonNull:()=>po,assertShapesMatch:()=>ve,bytesFromStringArray:()=>Yb,bytesPerElement:()=>ru,checkConversionForErrors:()=>jb,clamp:()=>eu,computeStrides:()=>mn,convertBackendValuesAndArrayBuffer:()=>jL,createScalarValue:()=>cP,createShuffledIndices:()=>UL,decodeString:()=>dc,distSquared:()=>BL,encodeString:()=>hc,fetch:()=>mP,fingerPrint64:()=>uP,flatten:()=>la,getArrayFromDType:()=>qb,getTypedArrayFromDType:()=>Kb,hasEncodingLoss:()=>qL,hexToLong:()=>lm,indexToLoc:()=>ZL,inferDtype:()=>nu,inferFromImplicitShape:()=>KL,isBoolean:()=>VT,isFunction:()=>su,isInt:()=>jn,isNumber:()=>GT,isPromise:()=>Ka,isScalarShape:()=>VL,isString:()=>ou,isTypedArray:()=>zr,isValidDtype:()=>Xb,locToIndex:()=>YL,makeOnesTypedArray:()=>em,makeZerosNestedTypedArray:()=>XL,makeZerosTypedArray:()=>au,nearestDivisor:()=>iu,nearestLargerEven:()=>PL,now:()=>ll,parseAxisParam:()=>ze,randUniform:()=>ML,repeatedTry:()=>HL,rightPad:()=>Ha,shuffle:()=>BT,shuffleCombo:()=>LL,sizeFromShape:()=>Lt,sizeToSquarishShape:()=>WL,squeezeShape:()=>Hb,sum:()=>zL,swap:()=>Eh,tanh:()=>GL,toNestedArray:()=>Ua,toTypedArray:()=>fc});var iw=tm(aI());var al=iw.default||iw;function lm(r){return al.fromString(r,!0,16)}var uI=lm("c3a5c85c97cb3127"),il=lm("b492b66fbe98f273"),Sr=lm("9ae16a3b2f90404f");function sw(r){return r.xor(r.shru(47))}function cI(r,t,e){let o=r.slice(t,t+e);return al.fromBytes(Array.from(o),!0,!0)}function de(r,t){return cI(r,t,8)}function lI(r,t){return cI(r,t,4)}function er(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function aa(r,t,e=lm("9ddfea08eb382d69")){let o=r.xor(t).mul(e);o=o.xor(o.shru(47));let n=t.xor(o).mul(e);return n=n.xor(n.shru(47)),n=n.mul(e),n}function sP(r,t,e,o,n,s){n=n.add(r),s=er(s.add(n).add(o),21);let i=n;return n=n.add(t),n=n.add(e),s=s.add(er(n,44)),[n.add(o),s.add(i)]}function Rh(r,t,e,o){return sP(de(r,t),de(r,t+8),de(r,t+16),de(r,t+24),e,o)}function iP(r,t=r.length){if(t>=8){let e=Sr.add(t*2),o=de(r,0).add(Sr),n=de(r,t-8),s=er(n,37).mul(e).add(o),i=er(o,25).add(n).mul(e);return aa(s,i,e)}if(t>=4){let e=Sr.add(t*2),o=lI(r,0);return aa(o.shl(3).add(t),lI(r,t-4),e)}if(t>0){let e=r[0],o=r[t>>1],n=r[t-1],s=e+(o<<8),i=t+(n<<2);return sw(Sr.mul(s).xor(uI.mul(i))).mul(Sr)}return Sr}function aP(r,t=r.length){let e=Sr.add(t*2),o=de(r,0).mul(il),n=de(r,8),s=de(r,t-8).mul(e),i=de(r,t-16).mul(Sr);return aa(er(o.add(n),43).add(er(s,30)).add(i),o.add(er(n.add(Sr),18)).add(s),e)}function lP(r,t=r.length){let e=Sr.add(t*2),o=de(r,0).mul(Sr),n=de(r,8),s=de(r,t-8).mul(e),i=de(r,t-16).mul(Sr),a=er(o.add(n),43).add(er(s,30)).add(i),l=aa(a,o.add(er(n.add(Sr),18)).add(s),e),u=de(r,16).mul(e),c=de(r,24),p=a.add(de(r,t-32)).mul(e),m=l.add(de(r,t-24)).mul(e);return aa(er(u.add(c),43).add(er(p,30)).add(m),u.add(er(c.add(o),18)).add(p),e)}function uP(r,t=r.length){let e=al.fromNumber(81,!0);if(t<=32)return t<=16?iP(r,t):aP(r,t);if(t<=64)return lP(r,t);let o=e,n=e.mul(il).add(113),s=sw(n.mul(Sr).add(113)).mul(Sr),i=[al.UZERO,al.UZERO],a=[al.UZERO,al.UZERO];o=o.mul(Sr).add(de(r,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do o=er(o.add(n).add(i[0]).add(de(r,l+8)),37).mul(il),n=er(n.add(i[1]).add(de(r,l+48)),42).mul(il),o=o.xor(a[1]),n=n.add(i[0]).add(de(r,l+40)),s=er(s.add(a[0]),33).mul(il),i=Rh(r,l,i[1].mul(il),o.add(a[0])),a=Rh(r,l+32,s.add(a[1]),n.add(de(r,l+16))),[s,o]=[o,s],l+=64;while(l!==u);let p=il.add(s.and(255).shl(1));return l=c,a[0]=a[0].add(t-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),o=er(o.add(n).add(i[0]).add(de(r,l+8)),37).mul(p),n=er(n.add(i[1]).add(de(r,l+48)),42).mul(p),o=o.xor(a[1].mul(9)),n=n.add(i[0].mul(9).add(de(r,l+40))),s=er(s.add(a[0]),33).mul(p),i=Rh(r,l,i[1].mul(p),o.add(a[0])),a=Rh(r,l+32,s.add(a[1]),n.add(de(r,l+16))),[s,o]=[o,s],aa(aa(i[0],a[0],p).add(sw(n).mul(uI)).add(s),aa(i[1],a[1],p).add(o),p)}function cP(r,t){return t==="string"?hc(r):fc([r],t)}function pP(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function fc(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=la(r)),z().getBool("DEBUG")&&jb(r,t),pP(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let o=0;o<e.length;++o)Math.round(r[o])!==0&&(e[o]=1);return e}else throw new Error(`Unknown data type ${t}`)}function ll(){return z().platform.now()}function mP(r,t){return z().platform.fetch(r,t)}function hc(r,t="utf-8"){return t=t||"utf-8",z().platform.encode(r,t)}function dc(r,t="utf-8"){return t=t||"utf-8",z().platform.decode(r,t)}function zr(r){return z().platform.isTypedArray(r)}function la(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||Ka(r)||r==null||zr(r)&&e)t.push(r);else if(Array.isArray(r)||zr(r))for(let o=0;o<r.length;++o)la(r[o],t,e);else{let o=-1;for(let n of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(n)&&(o=Math.max(o,Number(n)));for(let n=0;n<=o;n++)la(r[n],t,e)}return t}var Fh=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new aw)}profileKernel(t,e,o){let n,s=()=>{n=o()},i,a=ll();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let u of n)u.dataSync();i=Promise.resolve({kernelMs:ll()-a})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<n.length;u++){let c=n[u];c.data().then(p=>{fP(p,c.dtype,t)})}return{kernelName:t,outputs:n,inputs:e,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:o,timeMs:n,inputs:s,extraInfo:i}=t;o.forEach(a=>{Promise.all([a.data(),n,i]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],s,l[2])})})}};function fP(r,t,e){if(t!=="float32")return!1;for(let o=0;o<r.length;o++){let n=r[o];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${e}'`),!0}return!1}var aw=class{logKernelProfile(t,e,o,n,s,i){let a=typeof n=="number"?Ha(`${n}ms`,9):n.error,l=Ha(t,25),u=e.rank,c=e.size,p=Ha(e.shape.toString(),14),m="";for(let f in s){let h=s[f];if(h!=null){let d=h.shape||e.shape,g=d.length;m+=`${f}: ${g}D ${g>0?d:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function pI(r,t,e){let o={},n={};for(let l=0;l<t.length;l++)o[t[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let h=0;h<t.length;h++)if(o[m.id]){u.outputs.forEach(d=>o[d.id]=!0),f=!0,n[u.id]=!0;break}if(f)break}}let s={};s[e.id]=!0;let i={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,i[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(n[u.id]&&i[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];o[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function mI(r,t,e,o){for(let n=t.length-1;n>=0;n--){let s=t[n],i=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let l in s.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=e(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!Co(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=o(p,u),p.dispose()}}}}var fI=20,um=3,lw=7;function hI(r,t,e,o){let n=mn(t),s=hP(r,t,e,n),i=t.length,a=_h(r,t,e,n,s),l=["Tensor"];return o&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function hP(r,t,e,o){let n=Lt(t),s=o[o.length-1],i=new Array(s).fill(0),a=t.length,l=e==="complex64"?pm(r):r;if(a>1)for(let u=0;u<n/s;u++){let c=u*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],cm(l[c+p],0,e).length)}return i}function cm(r,t,e){let o;return Array.isArray(r)?o=`${parseFloat(r[0].toFixed(lw))} + ${parseFloat(r[1].toFixed(lw))}j`:ou(r)?o=`'${r}'`:e==="bool"?o=dI(r):o=parseFloat(r.toFixed(lw)).toString(),Ha(o,t)}function dI(r){return r===0?"false":"true"}function _h(r,t,e,o,n,s=!0){let i=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let d=pm(r);return[cm(d[0],0,e)]}return e==="bool"?[dI(r[0])]:[r[0].toString()]}if(l===1){if(a>fI){let g=um*i,x=Array.from(r.slice(0,g)),b=Array.from(r.slice((a-um)*i,a*i));return e==="complex64"&&(x=pm(x),b=pm(b)),["["+x.map((w,C)=>cm(w,n[C],e)).join(", ")+", ..., "+b.map((w,C)=>cm(w,n[a-um+C],e)).join(", ")+"]"]}return["["+(e==="complex64"?pm(r):Array.from(r)).map((g,x)=>cm(g,n[x],e)).join(", ")+"]"]}let u=t.slice(1),c=o.slice(1),p=o[0]*i,m=[];if(a>fI){for(let d=0;d<um;d++){let g=d*p,x=g+p;m.push(..._h(r.slice(g,x),u,e,c,n,!1))}m.push("...");for(let d=a-um;d<a;d++){let g=d*p,x=g+p;m.push(..._h(r.slice(g,x),u,e,c,n,d===a-1))}}else for(let d=0;d<a;d++){let g=d*p,x=g+p;m.push(..._h(r.slice(g,x),u,e,c,n,d===a-1))}let f=l===2?",":"";m[0]="["+(a>0?m[0]+f:"");for(let d=1;d<m.length-1;d++)m[d]=" "+m[d]+f;let h=`,
`;for(let d=2;d<l;d++)h+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":h),m}function pm(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var Ut=class{constructor(t,e,o){if(this.dtype=e,this.shape=t.slice(),this.size=Lt(t),o!=null){let n=o.length;E(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=o||qb(e,this.size),this.strides=mn(t)}set(t,...e){e.length===0&&(e=[0]),E(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let o=this.locToIndex(e);this.values[o]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let n of t){if(n<0||n>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let o=t[t.length-1];for(let n=0;n<t.length-1;++n)o+=this.strides[n]*t[n];return this.values[o]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let o=0;o<t.length-1;++o)e+=this.strides[o]*t[o];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let o=0;o<e.length-1;++o)e[o]=Math.floor(t/this.strides[o]),t-=e[o]*this.strides[o];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Xo().makeTensor(this.values,this.shape,this.dtype)}},Xo=null,gc=null,dP=null;function gI(r){Xo=r}function xI(r){gc=r}function yI(r){dP=r}var $t=class{constructor(t,e,o,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=Lt(t),this.strides=mn(t),this.dataId=o,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let t=await this.data();return gc.buffer(this.shape,this.dtype,t)}bufferSync(){return gc.buffer(this.shape,this.dtype,this.dataSync())}async array(){let t=await this.data();return Ua(this.shape,t,this.dtype==="complex64")}arraySync(){return Ua(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let t=Xo().read(this.dataId);if(this.dtype==="string"){let e=await t;try{return e.map(o=>dc(o))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Xo().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Xo().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>dc(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();let t=await Xo().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Xo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return gc.print(this,t)}clone(){return this.throwIfDisposed(),gc.clone(this)}toString(t=!1){let e=this.dataSync();return hI(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),gc.cast(this,t)}variable(t=!0,e,o){return this.throwIfDisposed(),Xo().makeVariable(this,t,e,o)}};Object.defineProperty($t,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function _(){return om("Tensor",()=>$t)}_();var Vs=class extends $t{constructor(t,e,o,n){super(t.shape,t.dtype,t.dataId,n),this.trainable=e,this.name=o}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Co(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Xo().disposeTensor(this),this.dataId=t.dataId,Xo().incRef(this,null)}dispose(){Xo().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Vs,Symbol.hasInstance,{value:r=>r instanceof $t&&r.assign!=null&&r.assign instanceof Function});var vo={};Kt(vo,{assertTypesMatch:()=>hw,getTensorsInContainer:()=>mm,isTensorInList:()=>xP,makeTypesMatch:()=>Ft});var uw;(function(r){r.R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6"})(uw||(uw={}));var cw;(function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"})(cw||(cw={}));var pw;(function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"})(pw||(pw={}));var mw;(function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"})(mw||(mw={}));var fw;(function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"})(fw||(fw={}));var gP={float32:mw,int32:cw,bool:pw,complex64:fw};function Le(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return gP[r][t]}function ul(r){return Le(r,"int32")}function Ft(r,t){if(r.dtype===t.dtype)return[r,t];let e=Le(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function hw(r,t){E(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function xP(r,t){return t.some(e=>e.id===r.id)}function mm(r){let t=[];return bI(r,t,new Set),t}function bI(r,t,e){if(r==null)return;if(r instanceof $t){t.push(r);return}if(!yP(r))return;let o=r;for(let n in o){let s=o[n];e.has(s)||(e.add(s),bI(s,t,e))}}function yP(r){return Array.isArray(r)||typeof r=="object"}function dw(r){return r.kernelName!=null}var Oh=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},ua=class{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Oh}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let o=t[e];if(await this.initializeBackend(o).success){await this.setBackend(o);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,o=1){return t in this.registryFactory?(xn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:o},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:e,asyncInit:o}=this.initializeBackend(t);if(!(o?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Fh(this.backendInstance),!0}setupRegisteredKernels(){rw(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){rw(t).forEach(o=>{o.disposeFunc!=null&&o.disposeFunc(this.registry[t])})}initializeBackend(t){let e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let o=e.factory();if(o&&!(o instanceof qn)&&typeof o.then=="function"){let n=++this.pendingBackendInitId,s=o.then(i=>n<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(n<this.pendingBackendInitId||(this.pendingBackendInit=null,xn(`Initialization of backend ${t} failed`),xn(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=o,{success:!0,asyncInit:!1}}catch(o){return xn(`Initialization of backend ${t} failed`),xn(o.stack||o.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let e=0;e<t.length;e++){let o=t[e],{success:n,asyncInit:s}=this.initializeBackend(o);if(s||n)return{name:o,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){let o=this.state.tensorInfo.get(e),n=o.backend,s=this.readSync(e),i=n.refCount(e);n.disposeData(e,!0),o.backend=t,t.move(e,s,o.shape,o.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let o=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=t}let n;return this.scopedRun(()=>this.startScope(o),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,o){t();try{let n=o();return e(),n}catch(n){throw e(),n}}nextTensorId(){return ua.nextTensorId++}nextVariableId(){return ua.nextVariableId++}clone(t){let e=k.runKernel(hn,{x:t}),o={x:t},n=i=>({x:()=>{let a="float32",l={x:i},u={dtype:a};return k.runKernel(fn,l,u)}}),s=[];return this.addTapeNode(this.state.activeScope.name,o,[e],n,s,{}),e}runKernel(t,e,o){if(this.backendName==null&&this.backend,!(am(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:o})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,o){let n=this.backend.numDataIds(),s=0;o.forEach(l=>{s+=l.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=n-e-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let e,o=[],n=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l,u=dw(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(dw(t)){let{kernelName:h,inputs:d,attrs:g}=t;this.backendName==null&&this.backend;let x=am(h,this.backendName);E(x!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),a=()=>{let b=this.backend.numDataIds();l=x.kernelFunc({inputs:d,attrs:g,backend:this.backend});let w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,w);let C=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(n){let v=this.getTensorsForGradient(h,d,C);o=this.saveTensorsForBackwardMode(v)}return C}}else{let{forwardFunc:h}=t,d=g=>{n&&(o=g.map(x=>this.keep(this.clone(x))))};a=()=>{let g=this.backend.numDataIds();l=this.tidy(()=>h(this.backend,d));let x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,x),x}}let{inputs:c,attrs:p}=t,m=dw(t)?null:t.backwardsFunc,f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=a():(f=this.profiler.profileKernel(u,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs)}),n&&this.addTapeNode(u,c,e,m,o,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(h=>c[h]!=null?c[h].shape:null),outputShapes:e.map(h=>h.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(o=>this.keep(this.clone(o)))}getTensorsForGradient(t,e,o){let n=ew(t);if(n!=null){let s=n.inputsToSave||[],i=n.outputsToSave||[],a;n.saveAllInputs?(E(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(e).map(u=>e[u])):a=s.map(u=>e[u]);let l=o.filter((u,c)=>i[c]);return a.concat(l)}return[]}makeTensor(t,e,o,n){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");o=o||"float32",n=n||this.backend;let s=t;o==="string"&&ou(t[0])&&(s=t.map(l=>hc(l)));let i=n.write(s,e,o),a=new $t(e,o,i,this.nextTensorId());if(this.trackTensor(a,n),o==="string"){let l=this.state.tensorInfo.get(i),u=Yb(s);this.state.numBytes+=u-l.bytes,l.bytes=u}return a}makeTensorFromDataId(t,e,o,n){o=o||"float32";let s={dataId:t,shape:e,dtype:o};return this.makeTensorFromTensorInfo(s,n)}makeTensorFromTensorInfo(t,e){let{dataId:o,shape:n,dtype:s}=t,i=new $t(n,s,o,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,o,n){o=o||this.nextVariableId().toString(),n!=null&&n!==t.dtype&&(t=t.cast(n));let s=new Vs(t,e,o,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let o=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(o=t.size*ru(t.dtype)),this.state.numBytes+=o,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:o})),t instanceof Vs||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let o=t.size*ru(t.dtype);this.state.numBytes-=o}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let e=this.state.numBytes,o=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(n=>n.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-o;for(let n of this.state.activeProfile.kernels)n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,o,n,s,i){let a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:o,saved:s},l=ew(t);l!=null&&(n=l.gradFunc),n!=null&&(a.gradient=u=>(u=u.map((c,p)=>{if(c==null){let m=o[p],f=au(m.size,m.dtype);return this.makeTensor(f,m.shape,m.dtype)}return c}),n(u.length>1?u:u[0],s,i))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){let e=mm(t),o=new Set(e.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!o.has(i.id)&&i.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(s=>{!s.kept&&s.scopeId===n.id&&this.track(s)})}gradients(t,e,o,n=!1){if(E(e.length>0,()=>"gradients() received an empty list of xs."),o!=null&&o.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${o.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));E(s instanceof $t,()=>"The result y returned by f() must be a tensor.");let i=pI(this.state.activeTape,e,s);if(!n&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let a={};a[s.id]=o??bP(s.shape),mI(a,i,u=>this.tidy(u),wP);let l=e.map(u=>a[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let c of u.saved)c.dispose()}),this.state.activeTape=null),{value:s,grads:l}})}customGrad(t){return E(su(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{E(e.every(a=>a instanceof $t),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let o,n={};e.forEach((a,l)=>{n[l]=a});let s=(a,l)=>(o=t(...e,l),E(o.value instanceof $t,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(su(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),i=(a,l)=>{let u=o.gradFunc(a,l),c=Array.isArray(u)?u:[u];E(c.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(c.every(m=>m instanceof $t),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return c.forEach((m,f)=>{p[f]=()=>m}),p};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:n})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){let e=ll(),o=await this.backend.time(t);return o.wallMs=ll()-e,o}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Oh;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};ua.nextTensorId=0;ua.nextVariableId=0;function bP(r){let t=em(Lt(r),"float32");return k.makeTensor(t,r,"float32")}function gw(){let r=Qb();if(r._tfengine==null){let t=new rm(r);r._tfengine=new ua(t)}return HT(r._tfengine.ENV),gI(()=>r._tfengine),r._tfengine}var k=gw();function wP(r,t){let e={a:r,b:t};return k.runKernel(qo,e)}var ca={};Kt(ca,{isBrowser:()=>yw,isMobile:()=>IP,mockIsMobile:()=>TP});function CP(){return typeof navigator<"u"&&navigator!=null}var xw;function TP(r){xw=r}function IP(r){if(xw!==void 0)return xw;if(r||CP()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function yw(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var mo=z();mo.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});mo.registerFlag("IS_BROWSER",()=>yw());mo.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");mo.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));mo.registerFlag("PROD",()=>!1);mo.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>mo.getBool("DEBUG"));mo.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);mo.registerFlag("IS_TEST",()=>!1);mo.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);mo.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);mo.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);mo.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Mr(r,t){let e=r;if(zr(r))return t==="string"?[]:[r.length];if(typeof r=="object"){if("texture"in r){let s=r.channels||"RGBA";return[r.height,r.width*s.length]}else if("buffer"in r&&!(r.buffer instanceof ArrayBuffer))return[r.buffer.size/(t==null?4:ru(t))]}if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(e)||zr(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(r)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&CI(r,n,[]),n}function CI(r,t,e){if(e=e||[],!Array.isArray(r)&&!zr(r)){E(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}E(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),E(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let o=t.slice(1);for(let n=0;n<r.length;++n)CI(r[n],o,e.concat(n))}function wI(r,t,e,o){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${o}' must be ${r} tensor, but got ${t} tensor`)}}function I(r,t,e,o="numeric"){if(r instanceof $t)return wI(o,r.dtype,t,e),r;let n=nu(r);if(n!=="string"&&["bool","int32","float32"].indexOf(o)>=0&&(n=o),wI(o,n,t,e),r==null||!zr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let s=Mr(r,n);!zr(r)&&!Array.isArray(r)&&(r=[r]);let a=n!=="string"?fc(r,n):la(r,[],!0);return k.makeTensor(a,s,n)}function cl(r,t,e,o="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>I(s,`${t}[${i}]`,e,o))}var bw="__op";function S(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],o=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+bw;let n=(...s)=>{k.startScope(e);try{let i=o(...s);return Ka(i)&&console.error("Cannot return a Promise inside of tidy."),k.endScope(i),i}catch(i){throw k.endScope(null),i}};return Object.defineProperty(n,"name",{value:e,configurable:!0}),n}function SP(r,t){let e=I(r,"real","complex"),o=I(t,"imag","complex");ve(e.shape,o.shape,`real and imag shapes, ${e.shape} and ${o.shape}, must match in call to tf.complex().`);let n={real:e,imag:o};return k.runKernel(hu,n)}var Br=S({complex_:SP});function vr(r,t,e,o){if(o==null)o=nu(r);else if(o==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof r=="object"&&("texture"in r||"buffer"in r&&!(r.buffer instanceof ArrayBuffer))){if(o!=="float32"&&o!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return k.backend.createTensorFromGPUData(r,t||e,o)}if(!zr(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){he(t);let n=Lt(t),s=Lt(e);E(n===s,()=>`Based on the provided shape, [${t}], the tensor should have ${n} values but has ${s}`);for(let i=0;i<e.length;++i){let a=e[i],l=i===e.length-1?a!==Lt(t.slice(i)):!0;E(e[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!zr(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=o!=="string"?fc(r,o):la(r,[],!0),k.makeTensor(r,t,o)}function Ue(r,t,e){let o=Mr(r,e);return vr(r,t,o,e)}var fm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Lh=4;async function II(r,t){let e=[],o=[],n=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<n.length;++i){let a=n[i],l=Array.isArray(r)?r[i].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(async p=>{let m=await l.bytes(),f=m.reduce((g,x)=>g+x.length,0)+Lh*m.length,h=new Uint8Array(f),d=0;for(let g=0;g<m.length;g++){let x=m[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);h.set(b,d),d+=Lh,h.set(x,d),d+=x.length}p(h)});o.push(c)}else o.push(l.data());t!=null&&(u.group=t),e.push(u)}let s=await Promise.all(o);return{data:vP(s),specs:e}}function Ph(r,t){let e={},o,n=0;for(let s of t){let i=s.name,a=s.dtype,l=s.shape,u=Lt(l),c;if("quantization"in s){let p=s.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${s.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${s.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${s.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let m=fm[p.dtype],f=r.slice(n,n+u*m),h=p.dtype==="uint8"?new Uint8Array(f):new Uint16Array(f);if(a==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(h.length);for(let d=0;d<h.length;d++){let g=h[d];c[d]=g*p.scale+p.min}}else if(p.dtype==="float16")o===void 0&&(o=$P()),c=o(h);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(a==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(h.length);for(let d=0;d<h.length;d++){let g=h[d];c[d]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);n+=u*m}else if(a==="string"){let p=Lt(s.shape);c=[];for(let m=0;m<p;m++){let f=new Uint32Array(r.slice(n,n+Lh))[0];n+=Lh;let h=new Uint8Array(r.slice(n,n+f));c.push(h),n+=f}}else{let p=fm[a],m=r.slice(n,n+u*p);if(a==="float32")c=new Float32Array(m);else if(a==="int32")c=new Int32Array(m);else if(a==="bool")c=new Uint8Array(m);else if(a==="complex64"){c=new Float32Array(m);let f=new Float32Array(c.length/2),h=new Float32Array(c.length/2);for(let x=0;x<f.length;x++)f[x]=c[x*2],h[x]=c[x*2+1];let d=Ue(f,l,"float32"),g=Ue(h,l,"float32");e[i]=Br(d,g),d.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${a}`);n+=u*p}a!=="complex64"&&(e[i]=Ue(c,l,a))}return e}function vP(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let o=new Uint8Array(t),n=0;return e.forEach(s=>{o.set(new Uint8Array(s.buffer),n),n+=s.byteLength}),o.buffer}var ww=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function TI(r){return ww?Buffer.byteLength(r):new Blob([r]).size}function SI(r){if(ww)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let o=0,n=t.length;o<n;o++)e+=String.fromCharCode(t[o]);return btoa(e)}function vI(r){if(ww){let o=Buffer.from(r,"base64");return o.buffer.slice(o.byteOffset,o.byteOffset+o.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let o=0;o<t.length;++o)e.set([t.charCodeAt(o)],o);return e.buffer}function xc(r){if(r.length===1)return r[0];let t=0;r.forEach(n=>{t+=n.byteLength});let e=new Uint8Array(t),o=0;return r.forEach(n=>{e.set(new Uint8Array(n),o),o+=n.byteLength}),e.buffer}function Cw(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function zh(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function Tw(r,t,e){let o={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(o.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");o.weightSpecs=t,o.weightData=e}return r.signature!=null&&(o.signature=r.signature),r.userDefinedMetadata!=null&&(o.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(o.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(o.initializerSignature=r.initializerSignature),o}async function yc(r,t){let e,o;return r.weightsManifest!=null&&([e,o]=await t(r.weightsManifest)),Tw(r,e,o)}function yn(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:TI(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:TI(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:r.weightData.byteLength}}function Mh(r){let t=[];for(let e of r)t.push(...e.weights);return t}function NP(){let r=e=>{let o=e<<13,n=0;for(;!(o&8388608);)n-=8388608,o<<=1;return o&=-8388609,n+=947912704,o|n},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function kP(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function EP(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function $P(){let r=NP(),t=kP(),e=EP();return o=>{let n=new ArrayBuffer(4*o.length),s=new Uint32Array(n);for(let i=0;i<o.length;i++){let a=o[i],l=r[e[a>>10]+(a&1023)]+t[a>>10];s[i]=l}return new Float32Array(n)}}var Qt=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Qt.instance==null&&(Qt.instance=new Qt),Qt.instance}static registerSaveRouter(t){Qt.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Qt.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Qt.getHandlers(t,"save")}static getLoadHandlers(t,e){return Qt.getHandlers(t,"load",e)}static getHandlers(t,e,o){let n=[];return(e==="load"?Qt.getInstance().loadRouters:Qt.getInstance().saveRouters).forEach(i=>{let a=i(t,o);a!==null&&n.push(a)}),n}},NI=r=>Qt.registerSaveRouter(r),kI=r=>Qt.registerLoadRouter(r),EI=r=>Qt.getSaveHandlers(r),$I=(r,t)=>Qt.getLoadHandlers(r,t);var Iw="tensorflowjs",Sw=1,pl="models_store",pa="model_info_store";function AI(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function vw(r){let t=r.result;t.createObjectStore(pl,{keyPath:"modelPath"}),t.createObjectStore(pa,{keyPath:"modelPath"})}var bn=class{constructor(t){if(this.indexedDB=AI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((o,n)=>{let s=this.indexedDB.open(Iw,Sw);s.onupgradeneeded=()=>vw(s),s.onsuccess=()=>{let i=s.result;if(e==null){let a=i.transaction(pl,"readonly"),u=a.objectStore(pl).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));o(u.result.modelArtifacts)},u.onerror=c=>(i.close(),n(u.error)),a.oncomplete=()=>i.close()}else{let a=yn(e),l=i.transaction(pa,"readwrite"),u=l.objectStore(pa),c=u.put({modelPath:this.modelPath,modelArtifactsInfo:a}),p;c.onsuccess=()=>{p=i.transaction(pl,"readwrite");let f=p.objectStore(pl).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:a});f.onsuccess=()=>o({modelArtifactsInfo:a}),f.onerror=h=>{u=l.objectStore(pa);let d=u.delete(this.modelPath);d.onsuccess=()=>(i.close(),n(f.error)),d.onerror=g=>(i.close(),n(f.error))}},c.onerror=m=>(i.close(),n(c.error)),l.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},s.onerror=i=>n(s.error)})}};bn.URL_SCHEME="indexeddb://";var DI=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(bn.URL_SCHEME)?AP(r.slice(bn.URL_SCHEME.length)):null;Qt.registerSaveRouter(DI);Qt.registerLoadRouter(DI);function AP(r){return new bn(r)}function DP(r){return r.startsWith(bn.URL_SCHEME)?r.slice(bn.URL_SCHEME.length):r}var Bh=class{constructor(){this.indexedDB=AI()}async listModels(){return new Promise((t,e)=>{let o=this.indexedDB.open(Iw,Sw);o.onupgradeneeded=()=>vw(o),o.onsuccess=()=>{let n=o.result,s=n.transaction(pa,"readonly"),a=s.objectStore(pa).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;t(l)},a.onerror=l=>(n.close(),e(a.error)),s.oncomplete=()=>n.close()},o.onerror=n=>e(o.error)})}async removeModel(t){return t=DP(t),new Promise((e,o)=>{let n=this.indexedDB.open(Iw,Sw);n.onupgradeneeded=()=>vw(n),n.onsuccess=()=>{let s=n.result,i=s.transaction(pa,"readwrite"),a=i.objectStore(pa),l=a.get(t),u;l.onsuccess=()=>{if(l.result==null)return s.close(),o(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let c=a.delete(t),p=()=>{u=s.transaction(pl,"readwrite");let f=u.objectStore(pl).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=h=>o(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),o(l.error))}},l.onerror=c=>(s.close(),o(l.error)),i.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},n.onerror=s=>o(n.error)})}};var Gs="/",bc="tensorflowjs_models",RI="info",RP="model_topology",FP="weight_specs",_P="weight_data",OP="model_metadata";function FI(r){return{info:[bc,r,RI].join(Gs),topology:[bc,r,RP].join(Gs),weightSpecs:[bc,r,FP].join(Gs),weightData:[bc,r,_P].join(Gs),modelMetadata:[bc,r,OP].join(Gs)}}function _I(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function LP(r){let t=r.split(Gs);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(Gs)}function PP(r){return r.startsWith(wn.URL_SCHEME)?r.slice(wn.URL_SCHEME.length):r}var wn=class{constructor(t){if(!z().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=FI(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let e=JSON.stringify(t.modelTopology),o=JSON.stringify(t.weightSpecs),n=yn(t);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,o),this.LS.setItem(this.keys.weightData,SI(t.weightData));let s={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:n}}catch{throw _I(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let e={},o=JSON.parse(this.LS.getItem(this.keys.topology));if(o==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=o;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=n;let s=this.LS.getItem(this.keys.modelMetadata);if(s!=null){let a=JSON.parse(s);e.format=a.format,e.generatedBy=a.generatedBy,e.convertedBy=a.convertedBy,a.signature!=null&&(e.signature=a.signature),a.userDefinedMetadata!=null&&(e.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(e.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(e.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(e.trainingConfig=a.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=vI(i),e}};wn.URL_SCHEME="localstorage://";var OI=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(wn.URL_SCHEME)?zP(r.slice(wn.URL_SCHEME.length)):null;Qt.registerSaveRouter(OI);Qt.registerLoadRouter(OI);function zP(r){return new wn(r)}var Vh=class{constructor(){E(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let t={},e=bc+Gs,o=Gs+RI;for(let n=0;n<this.LS.length;++n){let s=this.LS.key(n);if(s.startsWith(e)&&s.endsWith(o)){let i=LP(s);t[i]=JSON.parse(this.LS.getItem(s))}}return t}async removeModel(t){t=PP(t);let e=FI(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let o=JSON.parse(this.LS.getItem(e.info));return _I(e),o}};var wc="://",rr=class{constructor(){this.managers={}}static getInstance(){return rr.instance==null&&(rr.instance=new rr),rr.instance}static registerManager(t,e){E(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(wc)&&(t=t.slice(0,t.indexOf(wc))),E(t.length>0,()=>"scheme must not be an empty string.");let o=rr.getInstance();E(o.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),o.managers[t]=e}static getManager(t){let e=rr.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(rr.getInstance().managers)}};function Gh(r){if(r.indexOf(wc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${rr.getSchemes().join(",")}`);return{scheme:r.split(wc)[0],path:r.split(wc)[1]}}async function LI(r,t,e=!1){E(r!==t,()=>`Old path and new path are the same: '${r}'`);let o=Qt.getLoadHandlers(r);E(o.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),E(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${r}.`);let n=o[0],s=Qt.getSaveHandlers(t);E(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),E(s.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let i=s[0],a=Gh(r).scheme,l=Gh(r).path,u=a===Gh(r).scheme,c=await n.load();e&&u&&await rr.getManager(a).removeModel(l);let p=await i.save(c);return e&&!u&&await rr.getManager(a).removeModel(l),p.modelArtifactsInfo}async function PI(){let r=rr.getSchemes(),t={};for(let e of r){let o=await rr.getManager(e).listModels();for(let n in o){let s=e+wc+n;t[s]=o[n]}}return t}async function zI(r){let t=Gh(r);return rr.getManager(t.scheme).removeModel(t.path)}async function MI(r,t){return LI(r,t,!1)}async function BI(r,t){return LI(r,t,!0)}var Nw=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!z().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",o=>{if(o.source===window&&o.data.name===this.messageName){o.stopPropagation();let n=this.functionRefs[o.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}};if(z().get("IS_BROWSER")){z().setPlatform("browser",new Nw);try{rr.registerManager(wn.URL_SCHEME,new Vh)}catch{}try{rr.registerManager(bn.URL_SCHEME,new Bh)}catch{}}var MP={importFetch:()=>VI()},kw;var Ew=class{constructor(){this.util=GI(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return z().global.fetch!=null?z().global.fetch(t,e):(kw==null&&(kw=MP.importFetch()),kw(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};z().get("IS_NODE")&&!z().get("IS_BROWSER")&&z().setPlatform("node",new Ew);function mt(r,t="float32",e){return t=t||"float32",he(r),new Ut(r,t,e)}function BP(r,t){let e=I(r,"x","cast");if(!Xb(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let o={x:e},n={dtype:t};return k.runKernel(fn,o,n)}var X=S({cast_:BP});function VP(r){let e={x:I(r,"x","clone","string_or_numeric")};return k.runKernel(hn,e)}var Nr=S({clone_:VP});function Wh(r,t=!1){console.log(r.toString(t))}gw();var GP={buffer:mt,cast:X,clone:Nr,print:Wh};xI(GP);function WP(r){z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}yI(WP);function Vr(){return k}function hm(){return k.memory()}function M(r,t){return k.tidy(r,t)}function yt(r){mm(r).forEach(e=>e.dispose())}function le(r){return k.keep(r)}function Uh(r){return k.setBackend(r)}function WI(){return k.ready()}function UI(){return k.backendName}function Hh(r,t,e=1){return k.registerBackend(r,t,e)}function HI(){return k.backend}function UP(r,t){let e=I(r,"a","add"),o=I(t,"b","add");[e,o]=Ft(e,o);let n={a:e,b:o};return k.runKernel(qo,n)}var U=S({add_:UP});function HP(r,t){let e=I(r,"a","floorDiv"),o=I(t,"b","floorDiv");[e,o]=Ft(e,o);let n={a:e,b:o};return k.runKernel(ms,n)}var Cc=S({floorDiv_:HP});function KP(r,t){let e=I(r,"a","div"),o=I(t,"b","div");if([e,o]=Ft(e,o),e.dtype==="int32"&&o.dtype==="int32")return Cc(e,o);let n={a:e,b:o},s={};return k.runKernel(is,n,s)}var ot=S({div_:KP});function qP(r,t){let e=I(r,"a","mul"),o=I(t,"b","mul");[e,o]=Ft(e,o);let n={a:e,b:o};return k.runKernel(Ts,n)}var A=S({mul_:qP});function jP(r){let t=I(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return k.runKernel(Ti,e)}else{let e={x:t};return k.runKernel(hi,e)}}var ie=S({abs_:jP});function XP(r){let e={x:I(r,"x","acos")};return k.runKernel(Xn,e)}var Kh=S({acos_:XP});function YP(r){let e={x:I(r,"x","acosh")};return k.runKernel(Yn,e)}var qh=S({acosh_:YP});function ZP(r){E(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),E(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((n,s)=>I(n,`tensors${s}`,"addN")),e=t[0];t.forEach(n=>{if(n.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(n=>{if(!Co(n.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let o=t;return k.runKernel(di,o)}var KI=S({addN_:ZP});function JP(r,t=null,e=!1){let n={x:I(r,"x","all","bool")},s={axis:t,keepDims:e};return k.runKernel(lu,n,s)}var Tc=S({all_:JP});function QP(r,t=null,e=!1){let n={x:I(r,"x","any","bool")},s={axis:t,keepDims:e};return k.runKernel(uu,n,s)}var ml=S({any_:QP});function tz(r,t=0){let o={x:I(r,"x","argMax")},n={axis:t};return k.runKernel(gi,o,n)}var Cn=S({argMax_:tz});function ez(r,t=0){let o={x:I(r,"x","argMin")},n={axis:t};return k.runKernel(xi,o,n)}var jh=S({argMin_:ez});function rz(r){let e={x:I(r,"x","asin")};return k.runKernel(Zn,e)}var Xh=S({asin_:rz});function oz(r){let e={x:I(r,"x","asinh")};return k.runKernel(Jn,e)}var Yh=S({asinh_:oz});function nz(r){let e={x:I(r,"x","atan")};return k.runKernel(Qn,e)}var Zh=S({atan_:nz});function sz(r,t){let e=I(r,"a","atan2"),o=I(t,"b","atan2");[e,o]=Ft(e,o);let n={a:e,b:o};return k.runKernel(es,n)}var Jh=S({atan2_:sz});function iz(r){let e={x:I(r,"x","atanh")};return k.runKernel(ts,e)}var Qh=S({atanh_:iz});function az(r,t,e,o,n="NHWC",s){let i=r[3],a=[...t,i],l=jI(n);return fl(r,a,e,s,o,null,null,l)}function Aw(r,t,e,o,n,s,i="channelsLast"){let[a,l]=dm(t),u;if(i==="channelsLast")u=[a,l,r[3],r[3]];else if(i==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return fl(r,u,e,o,n,s,!1,i)}function lz(r,t,e,o,n,s,i="NDHWC"){let[a,l,u]=$w(t),c,p;if(i==="NDHWC")p="channelsLast",c=[a,l,u,r[4],r[4]];else if(i==="NCDHW")p="channelsFirst",c=[a,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return qI(r,c,e,o,n,!1,p,s)}function fl(r,t,e,o,n,s,i=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,h]=t,[d,g]=dm(e),[x,b]=dm(o),w=Ic(m,x),C=Ic(f,b),{padInfo:v,outHeight:$,outWidth:R}=pz(n,u,c,d,g,w,C,s,a),F=i?h*p:h,O;return a==="channelsFirst"?O=[l,F,$,R]:a==="channelsLast"&&(O=[l,$,R,F]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:$,outWidth:R,outChannels:F,padInfo:v,strideHeight:d,strideWidth:g,filterHeight:m,filterWidth:f,effectiveFilterHeight:w,effectiveFilterWidth:C,dilationHeight:x,dilationWidth:b,inShape:r,outShape:O,filterShape:t}}function qI(r,t,e,o,n,s=!1,i="channelsLast",a){let[l,u,c,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p,m]=r;else if(i==="channelsFirst")[l,m,u,c,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,h,d,,g]=t,[x,b,w]=$w(e),[C,v,$]=$w(o),R=Ic(f,C),F=Ic(h,v),O=Ic(d,$),{padInfo:P,outDepth:B,outHeight:V,outWidth:G}=mz(n,u,c,p,x,b,w,R,F,O,a),H=s?g*m:g,W;return i==="channelsFirst"?W=[l,H,B,V,G]:i==="channelsLast"&&(W=[l,B,V,G,H]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:p,inChannels:m,outDepth:B,outHeight:V,outWidth:G,outChannels:H,padInfo:P,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:f,filterHeight:h,filterWidth:d,effectiveFilterDepth:R,effectiveFilterHeight:F,effectiveFilterWidth:O,dilationDepth:C,dilationHeight:v,dilationWidth:$,inShape:r,outShape:W,filterShape:t}}function uz(r,t,e,o,n){o==null&&(o=Dw(r,t,e));let s=r[0],i=r[1],a=gm((s-t+2*o)/e+1,n),l=gm((i-t+2*o)/e+1,n);return[a,l]}function cz(r,t,e,o,n,s){n==null&&(n=Dw(r,t[0],o[0]));let i=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*n>=t[a]&&(i[a]=gm((r[a]-t[a]+2*n)/o[a]+1,s));return i}function Dw(r,t,e,o=1){let n=Ic(t,o);return Math.floor((r[0]*(e-1)-e+n)/2)}function dm(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function $w(r){return typeof r=="number"?[r,r,r]:r}function Ic(r,t){return t<=1?r:r+(r-1)*(t-1)}function pz(r,t,e,o,n,s,i,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=uz([t,e],s,o,r,a);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(t/o),p=Math.ceil(e/n);let m=Math.max(0,(c-1)*o+s-t),f=Math.max(0,(p-1)*n+i-e),h=Math.floor(m/2),d=m-h,g=Math.floor(f/2),x=f-g;u={top:h,bottom:d,left:g,right:x,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/o),p=Math.ceil((e-i+1)/n);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],h=l==="channelsLast"?r[2][0]:r[3][0],d=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:h,right:d,type:m===0&&f===0&&h===0&&d===0?"VALID":"EXPLICIT"},c=gm((t-s+m+f)/o+1,a),p=gm((e-i+h+d)/n+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function mz(r,t,e,o,n,s,i,a,l,u,c){let p,m,f,h;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let g=cz([t,e,o,1],[a,l,u],1,[n,s,i],r,c);m=g[0],f=g[1],h=g[2]}else if(r==="same"){m=Math.ceil(t/n),f=Math.ceil(e/s),h=Math.ceil(o/i);let d=(m-1)*n+a-t,g=(f-1)*s+l-e,x=(h-1)*i+u-o,b=Math.floor(d/2),w=d-b,C=Math.floor(g/2),v=g-C,$=Math.floor(x/2),R=x-$;p={top:C,bottom:v,left:$,right:R,front:b,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:h}}function gm(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function fo(r){let[t,e,o]=dm(r);return t===1&&e===1&&o===1}function or(r,t){return fo(r)||fo(t)}function Tn(r){return dm(r).every(t=>t>0)}function jI(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function te(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")E(jn(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(o=>{o.forEach(n=>{E(jn(n),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${n}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function fz(r,t){let o={x:I(r,"x","reshape","string_or_numeric")},n={shape:t};return k.runKernel(ji,o,n)}var D=S({reshape_:fz});function hz(r,t,e,o,n){let s=I(r,"x","avgPool","float32"),i=1;E(or(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let a=s,l=!1;s.rank===3&&(l=!0,a=D(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),te("avgPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=k.runKernel(yi,u,c);return p=X(p,s.dtype),l?D(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var ma=S({avgPool_:hz});function dz(r,t,e,o,n,s="NDHWC"){let i=I(r,"x","avgPool3d","float32"),a=i,l=!1;i.rank===4&&(l=!0,a=D(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),E(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),E(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),te("avgPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:s},p=k.runKernel(bi,u,c);return p=X(p,a.dtype),l?D(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var td=S({avgPool3d_:dz});function gz(r,t=0){E(r.length>=1,()=>"Pass at least one tensor to concat");let e=cl(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return Nr(e[0]);let o=e,n={axis:t};return k.runKernel(Ii,o,n)}var Bt=S({concat_:gz});function xz(r,t,e=!1,o=!1){let n=I(r,"a","matMul"),s=I(t,"b","matMul");[n,s]=Ft(n,s);let i={a:n,b:s},a={transposeA:e,transposeB:o};return k.runKernel(wi,i,a)}var At=S({matMul_:xz});function yz(r){let e={x:I(r,"x","sigmoid","float32")};return k.runKernel(Fs,e)}var yr=S({sigmoid_:yz});function bz(r,t,e){let o=I(r,"x","slice","string_or_numeric");if(o.rank===0)throw new Error("Slicing scalar is not possible");let n={x:o},s={begin:t,size:e};return k.runKernel(Qi,n,s)}var It=S({slice_:bz});function wz(r){let e={x:I(r,"x","tanh","float32")};return k.runKernel(Ms,e)}var In=S({tanh_:wz});function Cz(r,t,e,o,n,s){let i=I(r,"forgetBias","basicLSTMCell"),a=I(t,"lstmKernel","basicLSTMCell"),l=I(e,"lstmBias","basicLSTMCell"),u=I(o,"data","basicLSTMCell"),c=I(n,"c","basicLSTMCell"),p=I(s,"h","basicLSTMCell"),m=Bt([u,p],1),f=At(m,a),h=U(f,l),d=h.shape[0],g=h.shape[1]/4,x=[d,g],b=It(h,[0,0],x),w=It(h,[0,g],x),C=It(h,[0,g*2],x),v=It(h,[0,g*3],x),$=U(A(yr(b),In(w)),A(c,yr(U(i,C)))),R=A(In($),yr(v));return[$,R]}var XI=S({basicLSTMCell_:Cz});function Tz(r,t,e){let o=I(r,"x","batchToSpaceND"),n=t.reduce((a,l)=>a*l);E(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),E(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),E(o.shape[0]%n===0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${n}`);let s={x:o},i={blockShape:t,crops:e};return k.runKernel(Ci,s,i)}var fa=S({batchToSpaceND_:Tz});function YI(r){let t;return r.rank===0||r.rank===1?t=D(r,[1,1,1,r.size]):r.rank===2?t=D(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=D(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function Iz(r,t,e,o,n,s){s==null&&(s=.001);let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),u;n!=null&&(u=I(n,"scale","batchNorm"));let c;o!=null&&(c=I(o,"offset","batchNorm")),E(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:YI(i),scale:u,offset:c,mean:a,variance:l},f={varianceEpsilon:s},h=k.runKernel(Di,m,f);return D(h,i.shape)}var Sn=S({batchNorm_:Iz});function Sz(r,t,e,o,n,s){let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),u;n!=null&&(u=I(n,"scale","batchNorm"));let c;return o!=null&&(c=I(o,"offset","batchNorm")),E(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),E(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),E(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&E(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Sn(i,a,l,c,u,s)}var ed=S({batchNorm2d_:Sz});function vz(r,t,e,o,n,s){let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),u;n!=null&&(u=I(n,"scale","batchNorm"));let c;return o!=null&&(c=I(o,"offset","batchNorm")),E(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),E(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),E(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&E(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Sn(i,a,l,c,u,s)}var rd=S({batchNorm3d_:vz});function Nz(r,t,e,o,n,s){let i=I(r,"x","batchNorm"),a=I(t,"mean","batchNorm"),l=I(e,"variance","batchNorm"),u;n!=null&&(u=I(n,"scale","batchNorm"));let c;return o!=null&&(c=I(o,"offset","batchNorm")),E(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),E(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),E(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&E(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&E(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Sn(i,a,l,c,u,s)}var od=S({batchNorm4d_:Nz});function kz(r,t,e){let o=I(r,"x","bincount"),n=I(t,"weights","bincount");E(o.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),E(e>=0,()=>`size must be non-negative, but got ${e}.`),E(n.size===o.size||n.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${n.shape}.`);let s={x:o,weights:n},i={size:e};return k.runKernel(mu,s,i)}var nd=S({bincount_:kz});function Ez(r,t){let e=I(r,"s0","broadcastArgs","int32"),o=I(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(o.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${o.rank}`);let n={s0:e,s1:o};return k.runKernel(fu,n)}var ZI=S({broadcastArgs_:Ez});function $z(r,t){let e=I(r,"broadcastTo","x"),o=e.shape;if(he(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=D(e,u)}let n=e.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(n[u]===t[u])s[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Nr(e);let a={x:e},l={reps:s};return k.runKernel(dn,a,l)}var vn=S({broadcastTo_:$z});function Az(r){let e={x:I(r,"x","ceil","float32")};return k.runKernel(rs,e)}var sd=S({ceil_:Az});function No(r,t,e){he(r);let o={shape:r,value:t,dtype:e};return k.runKernel(Eu,{},o)}function Dz(r,t,e){let o=I(r,"x","clipByValue");if(E(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return No(o.shape,t,o.dtype);let n={x:o},s={clipValueMin:t,clipValueMax:e};return k.runKernel(os,n,s)}var je=S({clipByValue_:Dz});function Rz(r){return Bt(r,0)}var id=S({concat1d_:Rz});function Fz(r,t){return Bt(r,t)}var ad=S({concat2d_:Fz});function _z(r,t){return Bt(r,t)}var ld=S({concat3d_:_z});function Oz(r,t){return Bt(r,t)}var ud=S({concat4d_:Oz});function Lz(r,t,e,o,n="NHWC",s=[1,1],i){let a=I(r,"x","conv2d","float32"),l=I(t,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),E(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),te("conv2d",o,i);let p=n==="NHWC"?u.shape[3]:u.shape[1];E(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),E(or(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),E(Tn(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),E(Tn(e),()=>"Error in conv2D: Strides should be larger than 0.");let m={x:u,filter:l},f={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=k.runKernel(Si,m,f);return c?D(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Gr=S({conv2d_:Lz});function Pz(r,t,e,o,n="NWC",s=1,i){let a=I(r,"x","conv1d"),l=I(t,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=D(a,[1,a.shape[0],a.shape[1]])),E(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),E(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),te("conv1d",o,i),E(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),E(or(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),E(Tn(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),E(Tn(e),()=>"Error in conv1D: Stride should be larger than 0."),E(n==="NWC",()=>`Error in conv1d: got dataFormat of ${n} but only NWC is currently supported.`);let p=D(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=D(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Gr(m,p,[1,e],o,"NHWC",[1,s],i);return c?D(g,[g.shape[2],g.shape[3]]):D(g,[g.shape[0],g.shape[2],g.shape[3]])}var Sc=S({conv1d_:Pz});function zz(r,t,e,o,n,s="NHWC",i){E(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,u=!1;t.rank===3&&(u=!0,l=D(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),E(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),E(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),E(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let c=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?l.shape[3]:l.shape[1];E(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),E(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),te("conv2dDerInput",n,i);let m={dy:l,filter:e},f={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,inputShape:a},h=k.runKernel(vi,m,f);return u?D(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var vc=S({conv2DBackpropInput_:zz});function Mz(r,t,e,o,n,s){let i=I(r,"x","conv2dTranspose"),a=I(t,"filter","conv2dTranspose");return vc(e,i,a,o,n,"NHWC",s)}var Nc=S({conv2dTranspose_:Mz});function Bz(r,t,e,o,n="NDHWC",s=[1,1,1]){let i=I(r,"x","conv3d"),a=I(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=D(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),E(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),E(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),E(or(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),E(n==="NDHWC",()=>`Error in conv3d: got dataFormat of ${n} but only NDHWC is currently supported.`),E(Tn(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),E(Tn(e),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:l,filter:a},p={strides:e,pad:o,dataFormat:n,dilations:s},m=k.runKernel(Ni,c,p);return u?D(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var cd=S({conv3d_:Bz});function Vz(r,t,e,o,n){E(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,i=t,a=!1;t.rank===4&&(a=!0,i=D(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=i.shape[4];E(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),E(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),E(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),E(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),E(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);let c={dy:i,filter:e},p={pad:n,strides:o,inputShape:s},m=k.runKernel(xu,c,p);return a?D(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var pd=S({conv3DBackpropInput_:Vz});function Gz(r,t,e,o,n){let s=I(r,"x","conv3dTranspose"),i=I(t,"filter","conv3dTranspose");return pd(e,s,i,o,n)}var md=S({conv3dTranspose_:Gz});function Wz(r){let e={x:I(r,"x","cos","float32")};return k.runKernel(ns,e)}var ha=S({cos_:Wz});function Uz(r){let e={x:I(r,"x","cosh","float32")};return k.runKernel(ss,e)}var kc=S({cosh_:Uz});function Hz(r,t=0,e=!1,o=!1){let s={x:I(r,"x","cumprod")},i={axis:t,exclusive:e,reverse:o};return k.runKernel(yu,s,i)}var hl=S({cumprod_:Hz});function Kz(r,t=0,e=!1,o=!1){let s={x:I(r,"x","cumsum")},i={axis:t,exclusive:e,reverse:o};return k.runKernel(ki,s,i)}var Ec=S({cumsum_:Kz});function qz(r,t,e,o=!1){let n=I(r,"x","denseBincount"),s=I(t,"weights","denseBincount");E(n.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${n.dtype}`),E(n.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${n.rank}.`),E(e>=0,()=>`size must be non-negative, but got ${e}.`),E(s.size===n.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${n.shape}, weights shape: ${s.shape}.`);let i={x:n,weights:s},a={size:e,binaryOutput:o};return k.runKernel(wu,i,a)}var xm=S({denseBincount_:qz});function jz(r,t,e="NHWC"){let o=I(r,"x","depthToSpace","float32"),n=e==="NHWC"?o.shape[1]:o.shape[2],s=e==="NHWC"?o.shape[2]:o.shape[3],i=e==="NHWC"?o.shape[3]:o.shape[1];E(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),E(n*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${n} and ${t}  for depthToSpace with input shape
    ${o.shape}`),E(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${o.shape}`),E(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${o.shape}`);let a={x:o},l={blockSize:t,dataFormat:e};return k.runKernel(Cu,a,l)}var fd=S({depthToSpace_:jz});function Xz(r,t,e,o,n="NHWC",s=[1,1],i){let a=I(r,"x","depthwiseConv2d","float32"),l=I(t,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),E(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=n==="NHWC"?u.shape[3]:u.shape[1];E(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),te("depthwiseConv2d",o,i);let m={x:u,filter:l},f={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i},h=k.runKernel(Ei,m,f);return c?D(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Nn=S({depthwiseConv2d_:Xz});function Yz(r){let e={x:I(r,"x","diag")};return k.runKernel(Su,e)}var JI=S({diag_:Yz});function Zz(r,t,e,o,n=[1,1],s="NHWC"){let i=I(r,"x","dilation2d"),a=I(t,"filter","dilation2d");E(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),E(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),E(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=D(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),E(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let c={x:l,filter:a},p={strides:e,pad:o,dilations:n},m=k.runKernel($i,c,p);return u?D(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var hd=S({dilation2d_:Zz});var eo={};Kt(eo,{assertAndGetBroadcastShape:()=>vt,getBroadcastDims:()=>QI,getReductionAxes:()=>jt});function QI(r,t){let e=r.length,o=[];for(let n=0;n<e;n++){let s=e-1-n,i=r[s]||1;(t[t.length-1-n]||1)>1&&i===1&&o.unshift(s)}return o}function jt(r,t){let e=[];for(let o=0;o<t.length;o++){let n=r[r.length-o-1],s=t.length-o-1,i=t[s];(n==null||n===1&&i>1)&&e.unshift(s)}return e}function vt(r,t){let e=[],o=Math.max(r.length,t.length);for(let n=0;n<o;n++){let s=r[r.length-n-1];s==null&&(s=1);let i=t[t.length-n-1];if(i==null&&(i=1),s===1)e.unshift(i);else if(i===1)e.unshift(s);else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else e.unshift(s)}return e}function Jz(r,t){let e=I(r,"a","equal","string_or_numeric"),o=I(t,"b","equal","string_or_numeric");[e,o]=Ft(e,o),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(qa,n)}var br=S({equal_:Jz});function Qz(r,t,e){let o=I(t,"a","where"),n=I(e,"b","where"),s=I(r,"condition","where","bool"),i=vt(vt(s.shape,o.shape),n.shape),a=vn(s,i),l=vn(o,i),u=vn(n,i),c={condition:a,t:l,e:u};return k.runKernel(Ji,c)}var ue=S({where_:Qz});function t3(r){let e={x:I(r,"x","zerosLike")};return k.runKernel(ia,e)}var dt=S({zerosLike_:t3});function e3(r,t){let e=I(r,"a","div"),o=I(t,"b","div");[e,o]=Ft(e,o);let n=ot(e,o),s=dt(n),i=br(o,s);return ue(i,s,n)}var dd=S({divNoNan_:e3});function r3(r,t){let e=I(r,"t1","dot"),o=I(t,"t2","dot");E((e.rank===1||e.rank===2)&&(o.rank===1||o.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${o.rank}.`);let n=e.rank===1?e.size:e.shape[1],s=o.rank===1?o.size:o.shape[0];if(E(n===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${n} and ${s}.`),e.rank===1&&o.rank===1){let i=D(e,[1,-1]),a=D(o,[-1,1]),l=At(i,a);return D(l,[])}else if(e.rank===1&&o.rank===2){let i=D(e,[1,-1]),a=D(o,[o.shape[0],o.shape[1]]),l=At(i,a);return D(l,[l.size])}else if(e.rank===2&&o.rank===1){let i=D(o,[-1,1]),a=At(e,i);return D(a,[a.size])}else{let i=D(o,[o.shape[0],o.shape[1]]);return At(e,i)}}var gd=S({dot_:r3});function o3(r,...t){let e=t.map((n,s)=>I(n,`tensors${s}`,"einsum")),o={equation:r};return k.runKernel(vu,e,o)}var tS=S({einsum_:o3});function n3(r){let e={x:I(r,"x","elu","float32")};return k.runKernel(as,e)}var kn=S({elu_:n3});function s3(r){let t=I(r,"x","erf");E(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=X(t,"float32"));let e={x:t};return k.runKernel(ls,e)}var xd=S({erf_:s3});function Rw(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function eS(r,t,e){let o=r.length+t.length,n=[],s=0,i=0;for(let a=0;a<o;a++)e.indexOf(a)===-1?n.push(r[s++]):n.push(t[i++]);return n}function Fw(r,t){let e=[],o=r.length;for(let s=0;s<o;s++)t.indexOf(s)===-1&&e.push(r[s]);let n=t.map(s=>r[s]);return[e,n]}function ko(r,t){let e=t.map(o=>1);return eS(r,e,t)}function i3(r,t,e){E(Rw(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function _w(r,t){if(Rw(r,t))return null;let e=[];for(let o=0;o<t;++o)r.indexOf(o)===-1&&e.push(o);return r.forEach(o=>e.push(o)),e}function ym(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function a3(r,t){let e=[];for(let o=t-r;o<t;++o)e.push(o);return e}function l3(r,t=null,e=!1){let n={x:I(r,"x","max")},s={reductionIndices:t,keepDims:e};return k.runKernel(Oi,n,s)}var Xe=S({max_:l3});function u3(r,t=null,e=!1){let n={x:I(r,"x","min")},s={axis:t,keepDims:e};return k.runKernel(Mi,n,s)}var Ws=S({min_:u3});function c3(r,t){let e=I(r,"base","pow"),o=I(t,"exp","pow");[e,o]=Ft(e,o);let n={a:e,b:o};return k.runKernel(Is,n)}var kr=S({pow_:c3});function nt(r,t){if((zr(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&zr(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return vr(r,[],[],t)}function p3(r){let e={x:I(r,"x","sqrt","float32")};return k.runKernel(Os,e)}var ee=S({sqrt_:p3});function m3(r){let t=I(r,"x","square"),e={};return k.runKernel("Square",{x:t},e)}var Et=S({square_:m3});function f3(r,t=null,e=!1){let o=I(r,"x","sum");o.dtype==="bool"&&(o=X(o,"int32"));let n={x:o},s={axis:t,keepDims:e};return k.runKernel(ta,n,s)}var st=S({sum_:f3});function h3(r,t="euclidean",e=null,o=!1){r=I(r,"x","norm");let n=rS(r,t,e),s=n.shape;if(o){let i=ze(e,r.shape);s=ko(n.shape,i)}return D(n,s)}function rS(r,t,e=null){if(r.rank===0)return ie(r);if(r.rank!==1&&e===null)return rS(D(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return st(ie(r),e);if(t===1/0)return Xe(ie(r),e);if(t===-1/0)return Ws(ie(r),e);if(t==="euclidean"||t===2)return ee(st(kr(ie(r),nt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Xe(st(ie(r),e[0]),e[1]-1);if(t===1/0)return Xe(st(ie(r),e[1]),e[0]);if(t===-1/0)return Ws(st(ie(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return ee(st(Et(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Us=S({norm_:h3});function d3(r,t=null,e=!1){return Us(r,"euclidean",t,e)}var yd=S({euclideanNorm_:d3});function g3(r){let e={x:I(r,"x","exp")};return k.runKernel(us,e)}var Fe=S({exp_:g3});function x3(r,t=0){let e=I(r,"x","expandDims","string_or_numeric");E(t<=e.rank,()=>"Axis must be <= rank of the tensor");let o={input:e},n={dim:t};return k.runKernel(Ai,o,n)}var Ne=S({expandDims_:x3});function y3(r){let e={x:I(r,"x","expm1")};return k.runKernel(cs,e)}var bd=S({expm1_:y3});function b3(r,t){let e=I(r,"x","tile","string_or_numeric");E(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let o={x:e},n={reps:t};return k.runKernel(dn,o,n)}var nr=S({tile_:b3});function w3(r,t,e,o="float32"){t==null&&(t=r);let n=mt([r,t],o),s=r<=t?r:t;for(let a=0;a<s;++a)n.set(1,a,a);let i=D(n.toTensor(),[r,t]);if(e==null)return i;if(e.length===1)return nr(Ne(i,0),[e[0],1,1]);if(e.length===2)return nr(Ne(Ne(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return nr(Ne(Ne(Ne(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var dl=S({eye_:w3});function C3(r){let e={x:I(r,"x","floor","float32")};return k.runKernel(ps,e)}var En=S({floor_:C3});function T3(r,t,e=0,o=0){let n=I(r,"x","gather"),s=I(t,"indices","gather","int32"),i={x:n,indices:s},a={axis:e,batchDims:o};return k.runKernel(Ri,i,a)}var $n=S({gather_:T3});function I3(r,t){let e=I(r,"a","greater","string_or_numeric"),o=I(t,"b","greater","string_or_numeric");[e,o]=Ft(e,o),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(ja,n)}var ge=S({greater_:I3});function S3(r,t){let e=I(r,"a","greaterEqual","string_or_numeric"),o=I(t,"b","greaterEqual","string_or_numeric");[e,o]=Ft(e,o),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(fs,n)}var Er=S({greaterEqual_:S3});function v3(r){let e={input:I(r,"input","imag")};return k.runKernel(Ru,e)}var da=S({imag_:v3});function N3(r){let e={x:I(r,"x","isFinite")};return k.runKernel(hs,e)}var wd=S({isFinite_:N3});function k3(r){let e={x:I(r,"x","isInf")};return k.runKernel(ds,e)}var Cd=S({isInf_:k3});function E3(r){let e={x:I(r,"x","isNaN")};return k.runKernel(gs,e)}var Td=S({isNaN_:E3});function $3(r,t=.2){let o={x:I(r,"x","leakyRelu")},n={alpha:t};return k.runKernel(Fi,o,n)}var ga=S({leakyRelu_:$3});function A3(r,t){let e=I(r,"a","less","string_or_numeric"),o=I(t,"b","less","string_or_numeric");[e,o]=Ft(e,o),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(Xa,n)}var $c=S({less_:A3});function D3(r,t){let e=I(r,"a","lessEqual","string_or_numeric"),o=I(t,"b","lessEqual","string_or_numeric");[e,o]=Ft(e,o),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(Ya,n)}var ro=S({lessEqual_:D3});function oS(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let o={start:r,stop:t,num:e};return k.runKernel(Fu,{},o)}function R3(r,t=5,e=1,o=1,n=.5){let s=I(r,"x","localResponseNormalization");E(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),E(jn(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=D(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:e,alpha:o,beta:n},c=k.runKernel(_i,l,u);return a?D(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var Id=S({localResponseNormalization_:R3});function F3(r){let e={x:I(r,"x","log","float32")};return k.runKernel(xs,e)}var Ye=S({log_:F3});function _3(r){let e={x:I(r,"x","log1p")};return k.runKernel(ys,e)}var xa=S({log1p_:_3});function Lw(r,t){E(su(r),()=>"The f passed in variableGrads(f) must be a function"),E(t==null||Array.isArray(t)&&t.every(u=>u instanceof Vs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let u in k.registeredVariables)t.push(k.registeredVariables[u])}let o=e?t.filter(u=>!u.trainable):null,n=t.length;t=t.filter(u=>u.trainable),E(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${n} variables is trainable.`);let s=!0,{value:i,grads:a}=k.gradients(r,t,null,s);E(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),o?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function Wr(r){return k.customGrad(r)}function O3(r){let e={x:I(r,"x","neg")};return k.runKernel(Vi,e)}var _t=S({neg_:O3});function L3(r){let e={x:I(r,"x","softplus")};return k.runKernel(_s,e)}var Yo=S({softplus_:L3});function P3(r){let t=I(r,"x","logSigmoid");return Wr(o=>({value:_t(Yo(_t(o))),gradFunc:i=>A(i,yr(_t(o)))}))(t)}var Sd=S({logSigmoid_:P3});function z3(r,t){let e=I(r,"a","sub"),o=I(t,"b","sub");[e,o]=Ft(e,o);let n={a:e,b:o};return k.runKernel(Ps,n)}var tt=S({sub_:z3});function M3(r,t=-1){let e=I(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Wr((n,s)=>{let a=Xe(n,t,!0),l=tt(n,a),u=tt(X(l,"float32"),Ye(st(Fe(l),t,!0)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,h=!0,d=Fe(f);return tt(p,A(st(p,t,h),d))}}})(e)}var Ac=S({logSoftmax_:M3});function B3(r,t=null,e=!1){let o=I(r,"x","logSumExp"),n=ze(t,o.shape),s=Xe(o,n,!0),i=tt(o,s),a=Fe(i),l=st(a,n),u=Ye(l),c=U(D(s,u.shape),u);if(e){let p=ko(c.shape,n);return D(c,p)}return c}var Dc=S({logSumExp_:B3});function V3(r,t){let e=I(r,"a","logicalAnd","bool"),o=I(t,"b","logicalAnd","bool");vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(Za,n)}var pr=S({logicalAnd_:V3});function G3(r){let e={x:I(r,"x","logicalNot","bool")};return k.runKernel(Ja,e)}var ya=S({logicalNot_:G3});function W3(r,t){let e=I(r,"a","logicalOr","bool"),o=I(t,"b","logicalOr","bool");vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(Qa,n)}var Rc=S({logicalOr_:W3});function U3(r,t){let e=I(r,"a","logicalXor","bool"),o=I(t,"b","logicalXor","bool");return vt(e.shape,o.shape),pr(Rc(r,t),ya(pr(r,t)))}var vd=S({logicalXor_:U3});var Nd=2147483648;function H3(r,t,e="left"){let o=I(r,"sortedSequence","searchSorted"),n=I(t,"values","searchSorted"),s=o.shape[o.shape.length-1],i=n.shape[n.shape.length-1],a=D(o,[-1,s]),l=D(n,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Lt(l.shape)>=Nd)throw new Error(`values tensor size must less than ${Nd}`);if(a.shape[1]>=Nd)throw new Error(`trailing dim_size must less than ${Nd} for int32 output type, was ${a.shape[1]}`);let u={sortedSequence:a,values:l},c={side:e};return k.runKernel(Yu,u,c)}var bm=S({searchSorted_:H3});function nS(r,t){return bm(r,t,"left")}function K3(r,t,e,o,n){let s=I(r,"x","maxPool"),i=1,a=s,l=!1;s.rank===3&&(l=!0,a=D(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),E(or(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),te("maxPool",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n},p=k.runKernel(Li,u,c);return l?D(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var ba=S({maxPool_:K3});function q3(r,t=[1,1,1],e,o,n,s="NDHWC"){let i=I(r,"x","maxPool3d"),a=i,l=!1;i.rank===4&&(l=!0,a=D(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),E(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),E(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),te("maxPool3d",o,n);let u={x:a},c={filterSize:t,strides:e,pad:o,dimRoundingMode:n,dataFormat:s},p=k.runKernel(Pi,u,c);return l?D(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var kd=S({maxPool3d_:q3});function j3(r,t,e,o,n=!1){let i={x:I(r,"x","maxPoolWithArgmax")},a={filterSize:t,strides:e,pad:o,includeBatchInIndex:n},l=k.runKernel(Pu,i,a);return{result:l[0],indexes:l[1]}}var sS=S({maxPoolWithArgmax_:j3});function X3(r,t){let e=I(r,"a","maximum"),o=I(t,"b","maximum");[e,o]=Ft(e,o),e.dtype==="bool"&&(e=X(e,"int32"),o=X(o,"int32")),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(bs,n)}var Ur=S({maximum_:X3});function Y3(r,t=null,e=!1){let n={x:I(r,"x","mean")},s={axis:t,keepDims:e};return k.runKernel(zi,n,s)}var re=S({mean_:Y3});function oe(r,t="float32"){if(he(r),t==="complex64"){let o=oe(r,"float32"),n=oe(r,"float32");return Br(o,n)}let e=au(Lt(r),t);return k.makeTensor(e,r,t)}function Me(r,t="float32"){if(he(r),t==="complex64"){let o=Me(r,"float32"),n=oe(r,"float32");return Br(o,n)}let e=em(Lt(r),t);return k.makeTensor(e,r,t)}function iS(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let o=I(r,"x","meshgrid",r instanceof $t?r.dtype:"float32");if(t===void 0)return[o];let n=I(t,"y","meshgrid",t instanceof $t?t.dtype:"float32"),s=Lt(o.shape),i=Lt(n.shape);return e==="xy"?(o=D(o,[1,-1]),n=D(n,[-1,1]),[At(Me([i,1],o.dtype),o),At(n,Me([1,s],n.dtype))]):(o=D(o,[-1,1]),n=D(n,[1,-1]),[At(o,Me([1,i],o.dtype)),At(Me([s,1],n.dtype),n)])}function Z3(r,t){let e=I(r,"a","minimum"),o=I(t,"b","minimum");[e,o]=Ft(e,o),e.dtype==="bool"&&(e=X(e,"int32"),o=X(o,"int32")),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(ws,n)}var An=S({minimum_:Z3});function J3(r,t,e){E(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let o=I(r,"x","mirrorPad");if(o.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let n=e==="reflect"?1:0;for(let a=0;a<o.rank;a++)E(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),E(t[a][0]>=0&&t[a][0]<=o.shape[a]-n&&t[a][1]>=0&&t[a][1]<=o.shape[a]-n,()=>`Padding in dimension ${a} cannot be greater than or equal to ${o.shape[a]-n} or less than 0 for input of shape ${o.shape}`);let s={paddings:t,mode:e},i={x:o};return k.runKernel(Bi,i,s)}var Ed=S({mirrorPad_:J3});function Q3(r,t){let e=I(r,"a","mod"),o=I(t,"b","mod");[e,o]=Ft(e,o);let n={a:e,b:o};return k.runKernel(Cs,n)}var $d=S({mod_:Q3});function tM(r,t=null,e=!1){r=I(r,"x","moments");let o=ze(t,r.shape),n=re(r,o,e),s=n.shape;e||(s=ko(n.shape,o));let i=Et(tt(X(r,"float32"),D(n,s))),a=re(i,o,e);return{mean:n,variance:a}}var gl=S({moments_:tM});function eM(r,t,e,o){let n=I(t,"data","multiRNNCell"),s=cl(e,"c","multiRNNCell"),i=cl(o,"h","multiRNNCell"),a=n,l=[];for(let p=0;p<r.length;p++){let m=r[p](a,s[p],i[p]);l.push(m[0]),l.push(m[1]),a=m[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var aS=S({multiRNNCell_:eM});function rM(r,t,e,o=!1){let n=I(r,"logits","multinomial"),s=n.size,i=n.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();let l={logits:i===1?D(n,[1,-1]):n},u={numSamples:t,seed:e,normalized:o},c=k.runKernel(zu,l,u);return i===1?D(c,[c.size]):c}var lS=S({multinomial_:rM});function oM(r,t){let e=I(r,"a","notEqual","string_or_numeric"),o=I(t,"b","notEqual","string_or_numeric");[e,o]=Ft(e,o),vt(e.shape,o.shape);let n={a:e,b:o};return k.runKernel(tl,n)}var Zo=S({notEqual_:oM});function nM(r,t,e=1,o=0,n="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:I(r,"indices","oneHot","int32")},a={dtype:n,depth:t,onValue:e,offValue:o};return k.runKernel(Wi,i,a)}var xl=S({oneHot_:nM});function sM(r){let e={x:I(r,"x","onesLike")};return k.runKernel(Gi,e)}var He=S({onesLike_:sM});function iM(r,t){let e=I(r,"v1","outerProduct"),o=I(t,"v2","outerProduct");E(e.rank===1&&o.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${o.rank}.`);let n=D(e,[-1,1]),s=D(o,[1,-1]);return At(n,s)}var uS=S({outerProduct_:iM});function aM(r,t,e=0){let o=I(r,"x","pad");if(o.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let n={paddings:t,constantValue:e},s={x:o};return k.runKernel(Hi,s,n)}var $r=S({pad_:aM});function lM(r,t,e=0){return E(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),$r(r,[t],e)}var cS=S({pad1d_:lM});function uM(r,t,e=0){return E(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(r,t,e)}var pS=S({pad2d_:uM});function cM(r,t,e=0){return E(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(r,t,e)}var mS=S({pad3d_:cM});function pM(r,t,e=0){return E(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(r,t,e)}var fS=S({pad4d_:pM});function mM(r,t,e){let o=I(r,"x","spaceToBatchND");E(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),E(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),E(o.shape.reduce((i,a,l)=>l>0&&l<=t.length?i&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let n={x:o},s={blockShape:t,paddings:e};return k.runKernel(ea,n,s)}var wa=S({spaceToBatchND_:mM});function fM(r,t,e,o,n,s,i){n==null&&(n=[1,1]),s==null&&(s=1),o===0&&(o="valid");let a=I(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),E(or(s,n),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${n}'`);let c=Aw(l.shape,t,s,n,o),p=[c.dilationHeight,c.dilationWidth],m;o==="same"?m=dM([c.filterHeight,c.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[h,d]=hM([c.inHeight,c.inWidth],p,m),g=f?o:"valid",x=f?l:wa(l,p,h),w=(e==="avg"?()=>ma(x,t,s,g,i):()=>ba(x,t,s,g,i))(),C=f?w:fa(w,p,d);return u?D(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function hM(r,t,e){let o=e.map(c=>c[0]),n=e.map(c=>c[1]),s=r.concat(o,n),i=t.map((c,p)=>(c-s[p]%c)%c),a=n.map((c,p)=>c+i[p]),l=t.map((c,p)=>[o[p],a[p]]),u=t.map((c,p)=>[0,i[p]]);return[l,u]}function dM(r,t){let o=r.map((i,a)=>i+(i-1)*(t[a]-1)).map(i=>i-1),n=o.map(i=>Math.floor(i/2)),s=o.map((i,a)=>i-n[a]);return o.map((i,a)=>[n[a],s[a]])}var Ad=S({pool_:fM});function gM(r,t){let e=I(r,"x","prelu"),o=I(t,"alpha","prelu"),n={x:e,alpha:o};return k.runKernel(Ki,n)}var Ca=S({prelu_:gM});function xM(r,t=null,e=!1){let o=I(r,"x","prod");o.dtype==="bool"&&(o=X(o,"int32"));let n={x:o},s={axis:t,keepDims:e};return k.runKernel(qi,n,s)}var Dd=S({prod_:xM});function yM(r,t,e,o){let n=r.map((c,p)=>I(c,`tensors${p}`,"raggedGather","int32")),s=I(t,"paramsDenseValues","raggedGather"),i=I(e,"indices","raggedGather","int32"),a={paramsNestedSplits:n,paramsDenseValues:s,indices:i},l={outputRaggedRank:o},u=k.runKernel(Gu,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var hS=S({raggedGather_:yM});function bM(r,t,e){let o=I(r,"starts","raggedRange"),n=I(t,"limits","raggedRange",o.dtype),s=I(e,"deltas","raggedRange",o.dtype),i={starts:o,limits:n,deltas:s},a=k.runKernel(Wu,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var dS=S({raggedRange_:bM});function wM(r,t,e,o,n){let s=I(r,"shape","raggedTensorToTensor","int32"),i=I(t,"values","raggedTensorToTensor"),a=I(e,"defaultValue","raggedTensorToTensor",i.dtype),l=o.map((p,m)=>I(p,`tensors${m}`,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:n};return k.runKernel(Uu,u,c)}var gS=S({raggedTensorToTensor_:wM});function CM(r,t,e){he(r);let o=Lt(r),n=null;if(e==null||e==="float32")n=new Float32Array(o);else if(e==="int32")n=new Int32Array(o);else if(e==="bool")n=new Uint8Array(o);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<o;s++)n[s]=t();return k.makeTensor(n,r,e)}var xS=S({rand_:CM});var Od=tm(wm());var bl=class{constructor(t,e,o,n,s){this.mean=t,this.stdDev=e,this.dtype=o,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=Od.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let t,e,o=!1;for(;!o;){let n,s,i;do n=2*this.random()-1,s=2*this.random()-1,i=n*n+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*n*a,e=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(t))&&(o=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},Fd=class{constructor(t,e,o,n){this.alpha=t,this.beta=1/e,this.dtype=o;let s=n||Math.random();this.randu=Od.alea(s.toString()),this.randn=new bl(0,1,o,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,o,n,s,i;for(;;){do n=this.randn.nextValue(),i=1+this.c*n;while(i<=0);if(i*=i*i,t=n*n,e=1-.331*t*t,o=.5*t+this.d*(1-i+Math.log(i)),s=this.randu(),s<e||Math.log(s)<o)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},_d=class{constructor(t=0,e=1,o,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=o,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Od.alea(n)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function EM(r,t,e=1,o="float32",n){if(he(r),e==null&&(e=1),o==null&&(o="float32"),o!=="float32"&&o!=="int32")throw new Error(`Unsupported data type ${o}`);let s=new Fd(t,e,o,n),i=mt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var _S=S({randomGamma_:EM});function $M(r,t=0,e=1,o,n){if(he(r),o!=null&&o==="bool")throw new Error(`Unsupported data type ${o}`);let s=new bl(t,e,o,!1,n),i=mt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var wl=S({randomNormal_:$M});function AM(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return wl(r,0,1,t,e)}var OS=S({randomStandardNormal_:AM});function DM(r,t=0,e=1,o="float32",n){he(r);let s=mt(r,o),i=new _d(t,e,null,n);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Dn=S({randomUniform_:DM});function Rn(r,t,e=1,o="float32"){if(e===0)throw new Error("Cannot have a step of zero");let n={start:r,stop:t,step:e,dtype:o};return k.runKernel(Hu,{},n)}function RM(r){let e={input:I(r,"input","real")};return k.runKernel(Ku,e)}var Hs=S({real_:RM});function FM(r){let e={x:I(r,"x","reciprocal")};return k.runKernel(Ss,e)}var Ld=S({reciprocal_:FM});function _M(r){let e={x:I(r,"x","relu")};return k.runKernel(vs,e)}var sr=S({relu_:_M});function OM(r){let e={x:I(r,"x","relu6")};return k.runKernel(Ns,e)}var Fc=S({relu6_:OM});function LM(r,t){let o={x:I(r,"x","reverse")},n={dims:t};return k.runKernel(Zi,o,n)}var Be=S({reverse_:LM});function PM(r){let t=I(r,"x","reverse");return E(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Be(t,0)}var LS=S({reverse1d_:PM});function zM(r,t){let e=I(r,"x","reverse");return E(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Be(e,t)}var PS=S({reverse2d_:zM});function MM(r,t){let e=I(r,"x","reverse");return E(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Be(e,t)}var zS=S({reverse3d_:MM});function BM(r,t){let e=I(r,"x","reverse");return E(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Be(e,t)}var MS=S({reverse4d_:BM});function VM(r){let e={x:I(r,"x","round")};return k.runKernel(ks,e)}var _c=S({round_:VM});function GM(r){let e={x:I(r,"x","rsqrt","float32")};return k.runKernel(Es,e)}var Oc=S({rsqrt_:GM});function WM(r){let e={x:I(r,"x","selu")};return k.runKernel($s,e)}var Lc=S({selu_:WM});function UM(r,t,e,o,n,s=[1,1],i="NHWC"){let a=I(r,"x","separableConv2d"),l=I(t,"depthwiseFilter","separableConv2d"),u=I(e,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=D(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),E(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),E(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),E(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];E(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let h=Nn(c,l,o,n,i,s),g=Gr(h,u,1,"valid",i);return p?D(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var Pc=S({separableConv2d_:UM});async function HM(r,t){let e=I(r,"x","setdiff1d"),o=I(t,"y","setdiff1d");E(e.dtype===o.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${o.dtype}).`),E(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),E(o.rank===1,()=>`y should be 1D tensor, but got y (${o.shape}).`);let n=await e.data(),s=await o.data(),i=new Set(s),a=0;for(let c=0;c<n.length;c++)i.has(n[c])||a++;let l=new Ut([a],e.dtype),u=new Ut([a],"int32");for(let c=0,p=0;c<n.length;c++)i.has(n[c])||(l.values[p]=n[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]}var BS=HM;function KM(r){let e={x:I(r,"x","sign")};return k.runKernel(Rs,e)}var Pd=S({sign_:KM});function qM(r){let e={x:I(r,"x","sin","float32")};return k.runKernel(As,e)}var zc=S({sin_:qM});function jM(r){let e={x:I(r,"x","sinh")};return k.runKernel(Ds,e)}var Mc=S({sinh_:jM});function XM(r,t,e){let o=I(r,"x","slice1d");return E(o.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${o.rank} tensor`),It(o,[t],[e])}var Bc=S({slice1d_:XM});function YM(r,t,e){let o=I(r,"x","slice2d");return E(o.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${o.rank} tensor`),It(o,t,e)}var Cm=S({slice2d_:YM});function ZM(r,t,e){let o=I(r,"x","slice3d");return E(o.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${o.rank} tensor`),It(o,t,e)}var Vc=S({slice3d_:ZM});function JM(r,t,e){let o=I(r,"x","slice4d");return E(o.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${o.rank} tensor`),It(o,t,e)}var Cl=S({slice4d_:JM});function QM(r,t=-1){let e=I(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let o={logits:e},n={dim:t};return k.runKernel(oa,o,n)}var Ta=S({softmax_:QM});function tB(r){E(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return k.runKernel(ku,t)}var Ia=S({fft_:tB});function eB(r){E(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return k.runKernel(Du,t)}var Ks=S({ifft_:eB});function rB(r){let t=r.shape[r.shape.length-1],e=r.size/t,o;if(t<=2){let n=D(r,[e,t]);o=Ks(n)}else{let n=[e,2*(t-1)],s=D(Hs(r),[e,t]),i=D(da(r),[e,t]),a=Be(It(s,[0,1],[e,t-2]),1),l=A(Be(It(i,[0,1],[e,t-2]),1),nt(-1)),u=Bt([s,a],1),c=Bt([i,l],1),p=D(Br(u,c),[n[0],n[1]]);o=Ks(p)}if(o=Hs(o),r.rank===3&&r.shape[0]!==0){let n=o,s=r.shape[0];o=D(o,[s,o.shape[0]/s,o.shape[1]]),n.dispose()}return o}var Gc=S({irfft_:rB});function oB(r,t,e=0){let n={x:I(r,"x","split")},s={numOrSizeSplits:t,axis:e};return k.runKernel(ra,n,s)}var Ve=S({split_:oB});function nB(r,t){E(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],o=r.size/e,n;if(t!=null&&t<e){let h=r.shape.map(g=>0),d=r.shape.map(g=>g);d[r.shape.length-1]=t,n=It(r,h,d),e=t}else if(t!=null&&t>e){let h=r.shape.map(d=>d);h[r.shape.length-1]=t-e,n=Bt([r,oe(h)],r.shape.length-1),e=t}else n=r;let s=dt(n),i=D(Br(n,s),[o,e]),a=Ia(i),l=Math.floor(e/2)+1,u=Hs(a),c=da(a),p=Ve(u,[l,e-l],u.shape.length-1),m=Ve(c,[l,e-l],c.shape.length-1),f=n.shape.slice();return f[n.shape.length-1]=l,D(Br(p[0],m[0]),f)}var Sa=S({rfft_:nB});function sB(r,t){let e=I(r,"a","squaredDifference"),o=I(t,"b","squaredDifference");[e,o]=Ft(e,o),vt(e.shape,o.shape);let n={a:e,b:o},s={};return k.runKernel(Ls,n,s)}var Wc=S({squaredDifference_:sB});function iB(r,t){let e=I(r,"x","squeeze","string_or_numeric");return D(e,Hb(e.shape,t).newShape)}var oo=S({squeeze_:iB});function aB(r,t=0){let e=cl(r,"tensors","stack","string_or_numeric");E(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&E(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let o=e,n={axis:t};return k.runKernel(Ui,o,n)}var Ie=S({stack_:aB});function lB(r,t=0){let o={x:I(r,"x","step")},n={alpha:t};return k.runKernel(Bs,o,n)}var Eo=S({step_:lB});function uB(r,t,e,o,n=0,s=0,i=0,a=0,l=0){let c={x:I(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:o,beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return k.runKernel(oc,c,p)}var zd=S({stridedSlice_:uB});function cB(r){let e={x:I(r,"x","tan","float32")};return k.runKernel(zs,e)}var Md=S({tan_:cB});function ke(r,t){po(r);let e=Mr(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return vr(r,null,e,t)}function qs(r,t,e){if(po(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let o=Mr(r,e);if(o.length!==2&&o.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return vr(r,t,o,e)}function Bd(r,t,e){if(po(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let o=Mr(r,e);if(o.length!==3&&o.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function VS(r,t,e){if(po(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let o=Mr(r,e);if(o.length!==4&&o.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function GS(r,t,e){if(po(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let o=Mr(r,e);if(o.length!==5&&o.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return vr(r,t,o,e)}function WS(r,t,e){if(po(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let o=Mr(r,e);if(o.length!==6&&o.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(o.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||o,vr(r,t,o,e)}function pB(r,t=1,e=!0){let o=I(r,"x","topk");if(o.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let n=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>n)throw new Error(`'k' passed to topk() must be <= the last dimension (${n}) but got ${t}`);let s={x:o},i={k:t,sorted:e},[a,l]=k.runKernel(ac,s,i);return{values:a,indices:l}}var Vd=S({topk_:pB});function mB(r,t=0,e=1,o,n){if(he(r),o!=null&&o==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new bl(t,e,o,!0,n),i=mt(r,o);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Uc=S({truncatedNormal_:mB});function fB(r,t=0){let e=I(r,"x","unique","string_or_numeric");E(e.rank>0,()=>"The input tensor must be at least 1D");let o={x:e},n={axis:t},[s,i]=k.runKernel(uc,o,n);return{values:s,indices:i}}var Gd=S({unique_:fB});function hB(r,t,e){let o=I(r,"x","unsortedSegmentSum"),n=I(t,"segmentIds","unsortedSegmentSum","int32");E(jn(e),()=>"numSegments must be of dtype int");let s={x:o,segmentIds:n},i={numSegments:e};return k.runKernel(sa,s,i)}var Hc=S({unsortedSegmentSum_:hB});function dB(r,t=0){let e=I(r,"x","unstack","string_or_numeric");E(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let o={value:e},n={axis:t};return k.runKernel(na,o,n)}var Ge=S({unstack_:dB});function US(r,t){return bm(r,t,"right")}function Wd(r,t=!0,e,o){return k.makeVariable(r,t,e,o)}function Ud(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let o=mt(r,"int32"),n=mt([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let i=o.indexToLoc(e[s]),a=s*r.length;n.values.set(i,a)}return n.toTensor()}async function gB(r){let t=I(r,"condition","whereAsync","bool"),e=await t.data(),o=Ud(t.shape,e);return r!==t&&t.dispose(),o}var Hd=gB;async function xB(r,t,e){let o=I(r,"tensor","boolMask"),n=I(t,"mask","boolMask","bool"),s=e??0,i=n.rank,a=o.shape;E(i>0,()=>"mask cannot be scalar"),ve(a.slice(s,s+i),n.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let d=s;d<s+i;d++)l*=a[d];let u=a.slice(0,s).concat([l],a.slice(s+i)),c=D(o,u),p=D(n,[-1]),m=await Hd(p),f=oo(m,[1]),h=$n(c,f,s);return r!==o&&o.dispose(),t!==n&&n.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),h}var yB=xB;function bB(r,t,e){let o=I(r,"x","transpose");if(t==null&&(t=o.shape.map((i,a)=>a).reverse()),E(o.rank===t.length,()=>`Error in transpose: rank of input ${o.rank} must match length of perm ${t}.`),t.forEach(i=>{E(i>=0&&i<o.rank,()=>`All entries in 'perm' must be between 0 and ${o.rank-1} but got ${t}`)}),o.rank<=1)return o.clone();let n={x:o},s={perm:t};return o.dtype==="complex64"?M(()=>{let i=Hs(o),a=da(o);return i=k.runKernel(gn,{x:i},s),a=k.runKernel(gn,{x:a},s),e&&(a=_t(a)),Br(i,a)}):k.runKernel(gn,n,s)}var kt=S({transpose_:bB});function wB(r,t,e,o,n=!0){let s=I(r,"v","movingAverage"),i=I(t,"x","movingAverage"),a=I(e,"decay","movingAverage");hw(s,i),E(Co(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=nt(1),u=tt(l,a),c=A(tt(i,s),u);if(n){E(o!=null,()=>"When using zeroDebias: true, step is required.");let p=I(o,"step","movingAverage");c=ot(c,tt(l,kr(a,p)))}return U(s,c)}var CB=S({movingAverage_:wB});function HS(r,t,e){let o=t.rank>1?t.shape[t.rank-1]:1,n=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${o}, and batchDim: ${n}.`;if(e.rank<n)throw new Error(s+` update.rank < ${n}. `);if(r.length<o+(e.rank-n))throw new Error(s+` Output shape length < ${o+(e.rank-n)}`);if(e.rank!==n+r.length-o)throw new Error(s+` update.rank != ${n+r.length-o}`);for(let i=0;i<n;++i)if(e.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-n;++i)if(e.shape[i+n]!==r[i+o])throw new Error(s+` updates.shape[${i+n}] (${e.shape[i+n]}) != shape[${i+n}] (${r[i+n]})`)}function Ww(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}HS(e,t,r)}function TB(r,t,e){let o=t.shape.length,n=o>1?t.shape[o-1]:1,s=e.length,i=1;for(let p=n;p<s;++p)i*=e[p];let a=n<1?1:n,l=Lt(t.shape)/a,u=[...mn(e.slice(0,n)),1],c=Lt(e);return{sliceRank:n,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}function SB(r,t,e){he(e);let o=I(r,"indices","scatterND","int32"),n=I(t,"updates","scatterND");Ww(n,o,e);let s={indices:o,updates:n},i={shape:e};return k.runKernel(Xu,s,i)}var vB=S({scatterND_:SB});function KS(r,t,e,o){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let n=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===n))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${n}]`);if(t.dtype!==o.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function kB(r,t,e,o=0){he(e);let n=I(r,"sparseIndices","sparseToDense","int32"),s=I(t,"sparseValues","sparseToDense","string_or_numeric"),i=I(o,"defaultValue","sparseToDense",s.dtype);KS(n,s,e,i);let a={sparseIndices:n,sparseValues:s,defaultValue:i},l={outputShape:e};return k.runKernel(ec,a,l)}var EB=S({sparseToDense_:kB});function $B(r,t){let e=I(t,"indices","gatherND","int32"),n={params:I(r,"x","gatherND","string_or_numeric"),indices:e};return k.runKernel(Au,n)}var AB=S({gatherND_:$B});function qS(r,t){if(t==null)return r.shape.slice();if(Co(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let o=0;o<r.shape.length;o++)t[o]==null&&r.shape[o]!=null?e.push(r.shape[o]):e.push(t[o]);return e}return t}function DB(r,t,e,o){let n=I(r,"x","dropout");if(E(n.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${n.dtype} tensor instead.`),E(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof $t?n.clone():n;let s=qS(n,e),i=1-t,a=ot(En(U(Dn(s,0,1,"float32",o),i)),i);return A(n,a)}var Uw=S({dropout_:DB});function Hw(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Tm(r,t,e){let o=1-r%2,n=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+o-1);n[s]=t-e*Math.cos(i)}return ke(n,"float32")}async function RB(r,t,e=1){let o=I(r,"predictions","inTopK"),n=I(t,"targets","inTopK");E(o.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${o.rank}`),E(o.rank-1===n.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${o.rank} and targets rank ${n.rank}`),ve(o.shape.slice(0,o.shape.length-1),n.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=o.shape[o.shape.length-1];E(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let i=await o.data(),a=await n.data(),[l,u]=[i.length/s,s],c=Kb("bool",l);for(let p=0;p<l;p++){let m=p*u,f=i.subarray(m,m+u),h=[];for(let d=0;d<f.length;d++)h.push({value:f[d],index:d});h.sort((d,g)=>g.value-d.value),c[p]=0;for(let d=0;d<e;d++)if(h[d].index===a[p]){c[p]=1;break}}return r!==o&&o.dispose(),t!==n&&n.dispose(),Ue(c,n.shape,"bool")}var FB=RB;var va={};Kt(va,{conv2d:()=>jS,depthwiseConv2d:()=>XS,matMul:()=>YS});function _B(r,t,e,o,n,s="NHWC",i){let a=r;r.rank===3&&(a=D(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=D(t,[1,t.shape[0],t.shape[1],t.shape[2]])),E(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),E(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),E(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let u=s==="NHWC"?a.shape[3]:a.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];E(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),E(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),te("conv2dDerFilter",n,i);let p={x:a,dy:l},m={strides:o,pad:n,dataFormat:s,dimRoundingMode:i,filterShape:e};return k.runKernel(du,p,m)}var Kc=S({conv2DBackpropFilter_:_B});function Tl(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return A(r,Eo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Il(r,t){let e=t,o=jt(r.shape,t.shape);return o.length>0&&(e=st(e,o)),D(e,r.shape)}function Sl(r,t,e,o){if(t==="linear")return r;if(t==="relu")return sr(r);if(t==="elu")return kn(r);if(t==="relu6")return Fc(r);if(t==="prelu")return Ca(r,e);if(t==="leakyrelu")return ga(r,o);if(t==="sigmoid")return yr(r);throw new Error(`Unknown fused activation ${t}.`)}var vl=(r,t)=>!(r>0)||t==="linear";function OB({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",vl(k.state.gradientDepth,l)===!1){E(n==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${n} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let $=Gr(r,t,e,o,n,s,i);return a!=null&&($=U($,a)),Sl($,l,u,c)}let p=I(r,"x","conv2d","float32"),m=I(t,"filter","conv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=D(p,[1,p.shape[0],p.shape[1],p.shape[2]])),E(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),E(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),te("fused conv2d",o,i);let d=n==="NHWC"?f.shape[3]:f.shape[1];E(m.shape[2]===d,()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${m.shape[2]}.`),E(or(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let g=fl(f.shape,m.shape,e,s,o,i),x;a!=null&&(x=I(a,"bias","fused conv2d"),[x]=Ft(x,p),n==="NHWC"?vt(g.outShape,x.shape):(E(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),E(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(u!=null){let $=u.shape;if(E($.length<=1||$.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${$.length}.`),$.length===1)E($[0]===1||$[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${$}) is not compatible with the number of output channels (${g.outChannels}).`);else if($.length===3)try{vt($,g.outShape)}catch{let F=`Error in fused conv2d: PReLU activation weights (${$}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(F)}b=I(u,"prelu weights","fused conv2d")}let w=($,R)=>{E(n==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${n} but only NHWC is currently supported.`);let[F,O,P,B]=R,V=Tl($,P,l);E(fo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let G=vc(O.shape,V,F,e,o),H=Kc(O,V,F.shape,e,o),W=[G,H];if(B!=null){let j=Il(B,V);W.push(j)}return W},C={x:f,filter:m,bias:x,preluActivationWeights:b},v={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?Wr((R,F,O)=>{let P=k.runKernel(rl,C,v);return O([F,R,P]),h&&(P=D(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:w}})(f,m):Wr((R,F,O,P)=>{let B=k.runKernel(rl,C,v);return P([F,R,B,O]),h&&(B=D(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:w}})(f,m,x)}var jS=S({fusedConv2d_:OB});function LB(r,t,e,o,n,s=[1,1],i){let a=r;r.rank===3&&(a=D(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=D(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:a,dy:l},c={strides:o,pad:n,dimRoundingMode:i,dilations:s,filterShape:e};return k.runKernel(Tu,u,c)}var Kd=S({depthwiseConv2dNativeBackpropFilter_:LB});function PB(r,t,e,o,n,s=[1,1],i){let a=t,l=!1;t.rank===3&&(l=!0,a=D(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:a,filter:e},c={strides:o,pad:n,dimRoundingMode:i,dilations:s,inputShape:r},p=k.runKernel(Iu,u,c);return l?D(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var qd=S({depthwiseConv2dNativeBackpropInput_:PB});function zB({x:r,filter:t,strides:e,pad:o,dataFormat:n="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(vl(k.state.gradientDepth,l)===!1){let v=Nn(r,t,e,o,n,s,i);return a!=null&&(v=U(v,a)),Sl(v,l,u,c)}let p=I(r,"x","depthwiseConv2d","float32"),m=I(t,"filter","depthwiseConv2d","float32"),f=p,h=!1;p.rank===3&&(h=!0,f=D(p,[1,p.shape[0],p.shape[1],p.shape[2]])),E(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),E(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),E(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),E(or(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),te("fused depthwiseConv2d",o,i);let d=fl(f.shape,m.shape,e,s,o,i,!0),g;a!=null&&(g=I(a,"bias","fused conv2d"),[g]=Ft(g,p),vt(d.outShape,g.shape));let x;u!=null&&(x=I(u,"prelu weights","fused depthwiseConv2d"));let b=(v,$)=>{E(fo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[R,F,O,P]=$,B=Tl(v,O,l),V=qd(F.shape,B,R,e,o,s,i),G=Kd(F,B,R.shape,e,o,s,i);if(P!=null){let H=Il(g,B);return[V,G,H]}return[V,G]},w={x:f,filter:m,bias:g,preluActivationWeights:x},C={strides:e,pad:o,dataFormat:n,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?Wr(($,R,F)=>{let O=k.runKernel(ol,w,C);return F([R,$,O]),h&&(O=D(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:b}})(f,m):Wr(($,R,F,O)=>{let P=k.runKernel(ol,w,C);return O([R,$,P,F]),h&&(P=D(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:b}})(f,m,g)}var XS=S({fusedDepthwiseConv2d_:zB});function MB({a:r,b:t,transposeA:e=!1,transposeB:o=!1,bias:n,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(vl(k.state.gradientDepth,s)===!1){let B=At(r,t,e,o);return n!=null&&(B=U(B,n)),Sl(B,s,i,a)}let l=I(r,"a","fused matMul"),u=I(t,"b","fused matMul");[l,u]=Ft(l,u);let c=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=o?u.shape[u.rank-1]:u.shape[u.rank-2],m=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=o?u.shape[u.rank-2]:u.shape[u.rank-1],h=l.shape.slice(0,-2),d=u.shape.slice(0,-2),g=Lt(h),x=Lt(d);E(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${o} must match.`);let w=vt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([m,f]),C=e?D(l,[g,c,m]):D(l,[g,m,c]),v=o?D(u,[x,f,p]):D(u,[x,p,f]),$;n!=null&&($=I(n,"bias","fused matMul"),[$]=Ft($,l),vt(w,$.shape));let R;i!=null&&(R=I(i,"prelu weights","fused matMul"));let F=(B,V)=>{let[G,H,W,j]=V,Z=Tl(D(B,W.shape),W,s),q,J;if(!e&&!o?(q=At(Z,H,!1,!0),J=At(G,Z,!0,!1)):!e&&o?(q=At(Z,H,!1,!1),J=At(Z,G,!0,!1)):e&&!o?(q=At(H,Z,!1,!0),J=At(G,Z,!1,!1)):(q=At(H,Z,!0,!0),J=At(Z,G,!0,!0)),n!=null){let et=Il(j,Z);return[q,J,et]}else return[q,J]},O={a:C,b:v,bias:$,preluActivationWeights:R},P={transposeA:e,transposeB:o,activation:s,leakyreluAlpha:a};return n==null?Wr((V,G,H)=>{let W=k.runKernel(el,O,P);return H([V,G,W]),{value:D(W,w),gradFunc:F}})(C,v):Wr((V,G,H,W)=>{let j=k.runKernel(el,O,P);return W([V,G,j,H]),{value:D(j,w),gradFunc:F}})(C,v,$)}var YS=S({fusedMatMul_:MB});function BB(r){return Tm(r,.54,.46)}var ZS=S({hammingWindow_:BB});function VB(r){return Tm(r,.5,.5)}var jd=S({hannWindow_:VB});function GB(r,t,e,o=!1,n=0){let s=0,i=[];for(;s+t<=r.size;)i.push(It(r,s,t)),s+=e;if(o)for(;s<r.size;){let a=s+t-r.size,l=Bt([It(r,s,t-a),No([a],n)]);i.push(l),s+=e}return i.length===0?qs([],[0,t]):D(Bt(i),[i.length,t])}var Xd=S({frame_:GB});function WB(r,t,e,o,n=jd){o==null&&(o=Hw(t));let s=Xd(r,t,e),i=A(s,n(t));return Sa(i,o)}var JS=S({stft_:WB});function UB(r,t,e,o,n="bilinear",s=0){let i=I(r,"image","cropAndResize"),a=I(t,"boxes","cropAndResize","float32"),l=I(e,"boxInd","cropAndResize","int32"),u=a.shape[0];E(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),E(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),E(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),E(o.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),E(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),E(n==="bilinear"||n==="nearest",()=>`method must be bilinear or nearest, but was ${n}`);let c={image:i,boxes:a,boxInd:l},p={method:n,extrapolationValue:s,cropSize:o};return k.runKernel(bu,c,p)}var QS=S({cropAndResize_:UB});function HB(r){let t=I(r,"image","flipLeftRight","float32");E(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return k.runKernel($u,e,{})}var tv=S({flipLeftRight_:HB});function KB(r){let t=I(r,"image","grayscaleToRGB"),e=t.rank-1,o=t.shape[e];E(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),E(o===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${o}.`);let n=new Array(t.rank);return n.fill(1,0,e),n[e]=3,nr(t,n)}var ev=S({grayscaleToRGB_:KB});function qB(r,t,e=0,o=.5){let n=I(r,"image","rotateWithOffset","float32");E(n.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${n.rank}.`);let s={image:n},i={radians:t,fillValue:e,center:o};return k.runKernel(cc,s,i)}var rv=S({rotateWithOffset_:qB});function $o(r,t,e,o,n,s){o==null&&(o=.5),n==null&&(n=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return e=Math.min(e,i),E(0<=o&&o<=1,()=>`iouThreshold must be in [0, 1], but was '${o}'`),E(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),E(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),E(t.rank===1,()=>"scores must be a 1D tensor"),E(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),E(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:s}}function jB(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let s=I(r,"boxes","nonMaxSuppression","float32"),i=I(t,"scores","nonMaxSuppression","float32"),a=$o(s,i,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:o,scoreThreshold:n};return k.runKernel(Mu,{boxes:s,scores:i},l)}var ov=S({nonMaxSuppression_:jB});function nv(r,t,e){let o=XB(r,t,e),n=o<0?-(o+1):o;r.splice(n,0,t)}function XB(r,t,e){return ZB(r,t,e||YB)}function YB(r,t){return r>t?1:r<t?-1:0}function ZB(r,t,e){let o=0,n=r.length,s=0,i=!1;for(;o<n;){s=o+(n-o>>>1);let a=e(t,r[s]);a>0?o=s+1:(n=s,i=!a)}return i?o:-o-1}function Yd(r,t,e,o,n){return Kw(r,t,e,o,n,0)}function Zd(r,t,e,o,n,s){return Kw(r,t,e,o,n,0,!1,s,!0)}function Jd(r,t,e,o,n,s){return Kw(r,t,e,o,n,s,!0)}function Kw(r,t,e,o,n,s,i=!1,a=!1,l=!1){let u=[];for(let g=0;g<t.length;g++)t[g]>n&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(sv);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<e&&u.length>0;){let g=u.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<n)break;let C=!1;for(let v=p.length-1;v>=w;--v){let $=JB(r,b,p[v]);if($>=o){C=!0;break}if(g.score=g.score*QB(o,c,$),g.score<=n)break}g.suppressBeginIndex=p.length,C||(g.score===x?(p.push(b),m.push(g.score)):g.score>n&&nv(u,g,sv))}let f=p.length,h=e-f;a&&h>0&&(p.push(...new Array(h).fill(0)),m.push(...new Array(h).fill(0)));let d={selectedIndices:p};return i&&(d.selectedScores=m),l&&(d.validOutputs=f),d}function JB(r,t,e){let o=r.subarray(t*4,t*4+4),n=r.subarray(e*4,e*4+4),s=Math.min(o[0],o[2]),i=Math.min(o[1],o[3]),a=Math.max(o[0],o[2]),l=Math.max(o[1],o[3]),u=Math.min(n[0],n[2]),c=Math.min(n[1],n[3]),p=Math.max(n[0],n[2]),m=Math.max(n[1],n[3]),f=(a-s)*(l-i),h=(p-u)*(m-c);if(f<=0||h<=0)return 0;let d=Math.max(s,u),g=Math.max(i,c),x=Math.min(a,p),b=Math.min(l,m),w=Math.max(x-d,0)*Math.max(b-g,0);return w/(f+h-w)}function QB(r,t,e){let o=Math.exp(t*e*e);return e<=r?o:0}function sv(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}async function tV(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY){let s=I(r,"boxes","nonMaxSuppressionAsync"),i=I(t,"scores","nonMaxSuppressionAsync"),a=$o(s,i,e,o,n);e=a.maxOutputSize,o=a.iouThreshold,n=a.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:p}=Yd(u,c,e,o,n);return s!==r&&s.dispose(),i!==t&&i.dispose(),ke(p,"int32")}var iv=tV;function eV(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=I(r,"boxes","nonMaxSuppression"),a=I(t,"scores","nonMaxSuppression"),l=$o(i,a,e,o,n,s);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:a},c={maxOutputSize:e,iouThreshold:o,scoreThreshold:n,softNmsSigma:s},p=k.runKernel(Vu,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var av=S({nonMaxSuppressionWithScore_:eV});async function rV(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=0){let i=I(r,"boxes","nonMaxSuppressionAsync"),a=I(t,"scores","nonMaxSuppressionAsync"),l=$o(i,a,e,o,n,s);e=l.maxOutputSize,o=l.iouThreshold,n=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),a.data()]),c=u[0],p=u[1],{selectedIndices:m,selectedScores:f}=Jd(c,p,e,o,n,s);return i!==r&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:ke(m,"int32"),selectedScores:ke(f)}}var lv=rV;function oV(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=I(r,"boxes","nonMaxSuppression"),a=I(t,"scores","nonMaxSuppression"),l=$o(i,a,e,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},h=k.runKernel(Bu,m,f);return{selectedIndices:h[0],validOutputs:h[1]}}var uv=S({nonMaxSuppressionPadded_:oV});async function nV(r,t,e,o=.5,n=Number.NEGATIVE_INFINITY,s=!1){let i=I(r,"boxes","nonMaxSuppressionAsync"),a=I(t,"scores","nonMaxSuppressionAsync"),l=$o(i,a,e,o,n,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,[m,f]=await Promise.all([i.data(),a.data()]),{selectedIndices:h,validOutputs:d}=Zd(m,f,u,c,p,s);return i!==r&&i.dispose(),a!==t&&a.dispose(),{selectedIndices:ke(h,"int32"),validOutputs:nt(d,"int32")}}var cv=nV;function sV(r,t,e=!1,o=!1){let n=I(r,"images","resizeBilinear");E(n.rank===3||n.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${n.rank}.`),E(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),E(o===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=D(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:o,size:t},u=k.runKernel(Yi,a,l);return i?D(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var Qd=S({resizeBilinear_:sV});function iV(r,t,e=!1,o=!1){let n=I(r,"images","resizeNearestNeighbor");E(n.rank===3||n.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${n.rank}.`),E(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),E(n.dtype==="float32"||n.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),E(o===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=n,i=!1;n.rank===3&&(i=!0,s=D(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:o,size:t},u=k.runKernel(Xi,a,l);return i?D(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var tg=S({resizeNearestNeighbor_:iV});function aV(r,t="binary",e=!1,o=.5){let n=I(r,"image","threshold"),s=.2989,i=.587,a=.114,l=n.shape[0]*n.shape[1],u=A(ke([o]),255),c,p,m,f;if(E(n.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${n.rank}.`),E(n.shape[2]===3||n.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${n.shape[2]}.`),E(n.dtype==="int32"||n.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${n.dtype}.`),E(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),n.shape[2]===3){[c,p,m]=Ve(n,[1,1,1],-1);let g=A(c,s),x=A(p,i),b=A(m,a);f=U(U(g,x),b)}else f=r;if(t==="otsu"){let g=nd(X(_c(f),"int32"),Ue([]),256);u=lV(g,l)}let h=e?ro(f,u):ge(f,u);return X(A(h,255),"int32")}function lV(r,t){let e=ke([-1]),o=ke([0]),n=ke([0]),s,i,a,l,u,c;for(let p=0;p<r.size-1;p++){s=It(r,0,p+1),i=It(r,p+1),u=ot(st(s),t),c=ot(st(i),t);let m=st(A(s,Rn(0,s.size)));a=ot(m,st(s));let f=No(i.shape,s.size),h=U(Rn(0,i.size),f),d=A(i,h);l=ot(st(d),st(i));let g=tt(a,l),x=tt(a,l),b=A(u,c);n=A(A(b,g),x);let w=ge(n,o);o=ue(w,n,o),e=ue(w,ke([p]),e)}return e}var pv=S({threshold_:aV});function uV(r,t,e="nearest",o="constant",n=0,s){let i=I(r,"image","transform","float32"),a=I(t,"transforms","transform","float32");E(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),E(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:a},u={interpolation:e,fillMode:o,fillValue:n,outputShape:s};return k.runKernel(lc,l,u)}var mv=S({transform_:uV});function cV(r,t,e){E(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),E(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);let o=I(r,"a","bandPart");E(o.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${o.rank}.`);let n=o.shape,[s,i]=o.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(e<=i))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),e<0&&(e=i);let a=D(Rn(0,s,1,"int32"),[-1,1]),l=Rn(0,i,1,"int32"),u=tt(a,l),c=pr(ro(u,nt(+t,"int32")),Er(u,nt(-e,"int32"))),p=oe([s,i],o.dtype);return D(Ie(Ge(D(o,[-1,s,i])).map(m=>ue(c,m,p))),n)}var fv=S({bandPart_:cV});function pV(r){let t;if(Array.isArray(r)){t=!1,E(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=r[0].shape[0];for(let s=1;s<r.length;++s)E(r[s].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${n})`)}else t=!0,r=Ve(r,r.shape[0],0).map(n=>oo(n,[0]));E(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],o=r;for(let n=0;n<r.length;++n)e.push(k.tidy(()=>{let s=o[n];if(n>0)for(let i=0;i<n;++i){let a=A(st(A(e[i],s)),e[i]);s=tt(s,a)}return ot(s,Us(s,"euclidean"))}));return t?Ie(e,0):e}var hv=S({gramSchmidt_:pV});function mV(r,t=!1){if(E(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return dv(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),o=Ge(D(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),n=[],s=[];o.forEach(l=>{let[u,c]=dv(l,t);n.push(u),s.push(c)});let i=D(Ie(n,0),r.shape),a=D(Ie(s,0),r.shape);return[i,a]}}function dv(r,t=!1){return k.tidy(()=>{E(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],o=r.shape[1],n=dl(e),s=Nr(r),i=qs([[1]],[1,1]),a=Nr(i),l=e>=o?o:e;for(let u=0;u<l;++u){let c=s,p=a,m=n;[a,s,n]=k.tidy(()=>{let f=It(s,[u,u],[e-u,1]),h=Us(f),d=It(s,[u,u],[1,1]),g=ue(ge(d,0),qs([[-1]]),qs([[1]])),x=tt(d,A(g,h)),b=ot(f,x);b.shape[0]===1?a=Nr(i):a=Bt([i,It(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let w=_t(ot(At(g,x),h)),C=It(s,[u,0],[e-u,o]),v=A(w,a),$=kt(a);if(u===0)s=tt(C,At(v,At($,C)));else{let O=tt(C,At(v,At($,C)));s=Bt([It(s,[0,0],[u,o]),O],0)}let R=kt(v),F=It(n,[0,u],[e,n.shape[1]-u]);if(u===0)n=tt(F,At(At(F,a),R));else{let O=tt(F,At(At(F,a),R));n=Bt([It(n,[0,0],[e,u]),O],1)}return[a,s,n]}),yt([c,p,m])}return!t&&e>o&&(n=It(n,[0,0],[e,o]),s=It(s,[0,0],[o,o])),[n,s]})}var gv=S({qr_:mV});var _e;(function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(_e||(_e={}));function fV(r,t,e=_e.SUM_BY_NONZERO_WEIGHTS){let o=I(r,"losses","computeWeightedLoss"),n=null;t!=null&&(n=I(t,"weights","computeWeightedLoss"));let s=n==null?o:A(o,n);if(e===_e.NONE)return s;if(e===_e.SUM)return st(s);if(e===_e.MEAN){if(n==null)return re(s);{let i=o.size/n.size,a=ot(st(s),st(n));return i>1?ot(a,nt(i)):a}}if(e===_e.SUM_BY_NONZERO_WEIGHTS){if(n==null)return ot(st(s),nt(o.size));{let i=A(n,Me(o.shape)),a=X(st(Zo(i,nt(0))),"float32");return ot(st(s),a)}}throw Error(`Unknown reduction: ${e}`)}var mr=S({computeWeightedLoss_:fV});function hV(r,t,e,o=_e.SUM_BY_NONZERO_WEIGHTS){let n=I(r,"labels","absoluteDifference"),s=I(t,"predictions","absoluteDifference"),i=null;e!=null&&(i=I(e,"weights","absoluteDifference")),ve(n.shape,s.shape,"Error in absoluteDifference: ");let a=ie(tt(n,s));return mr(a,i,o)}var xv=S({absoluteDifference_:hV});function dV(r,t,e,o,n=_e.SUM_BY_NONZERO_WEIGHTS){let s=I(r,"labels","cosineDistance"),i=I(t,"predictions","cosineDistance"),a=null;o!=null&&(a=I(o,"weights","cosineDistance")),ve(s.shape,i.shape,"Error in cosineDistance: ");let l=nt(1),u=tt(l,st(A(s,i),e,!0));return mr(u,a,n)}var yv=S({cosineDistance_:dV});function gV(r,t,e,o=_e.SUM_BY_NONZERO_WEIGHTS){let n=I(r,"labels","hingeLoss"),s=I(t,"predictions","hingeLoss"),i=null;e!=null&&(i=I(e,"weights","hingeLoss")),ve(n.shape,s.shape,"Error in hingeLoss: ");let a=nt(1);n=tt(A(nt(2),n),a);let l=sr(tt(a,A(n,s)));return mr(l,i,o)}var bv=S({hingeLoss_:gV});function xV(r,t,e,o=1,n=_e.SUM_BY_NONZERO_WEIGHTS){let s=I(r,"labels","huberLoss"),i=I(t,"predictions","huberLoss"),a=null;e!=null&&(a=I(e,"weights","huberLoss")),ve(s.shape,i.shape,"Error in huberLoss: ");let l=nt(o),u=ie(tt(i,s)),c=An(u,l),p=tt(u,c),m=U(A(nt(.5),Et(c)),A(l,p));return mr(m,a,n)}var wv=S({huberLoss_:xV});function yV(r,t,e,o=1e-7,n=_e.SUM_BY_NONZERO_WEIGHTS){let s=I(r,"labels","logLoss"),i=I(t,"predictions","logLoss"),a=null;e!=null&&(a=I(e,"weights","logLoss")),ve(s.shape,i.shape,"Error in logLoss: ");let l=nt(1),u=nt(o),c=_t(A(s,Ye(U(i,u)))),p=A(tt(l,s),Ye(U(tt(l,i),u))),m=tt(c,p);return mr(m,a,n)}var Cv=S({logLoss_:yV});function bV(r,t,e,o=_e.SUM_BY_NONZERO_WEIGHTS){let n=I(r,"labels","meanSquaredError"),s=I(t,"predictions","meanSquaredError"),i=null;e!=null&&(i=I(e,"weights","meanSquaredError")),ve(n.shape,s.shape,"Error in meanSquaredError: ");let a=Wc(n,s);return mr(a,i,o)}var Tv=S({meanSquaredError_:bV});function wV(r,t){let e=I(r,"labels","sigmoidCrossEntropyWithLogits"),o=I(t,"logits","sigmoidCrossEntropyWithLogits");ve(e.shape,o.shape,"Error in sigmoidCrossEntropyWithLogits: ");let n=sr(o),s=A(o,e),i=xa(Fe(_t(ie(o))));return U(tt(n,s),i)}function CV(r,t,e,o=0,n=_e.SUM_BY_NONZERO_WEIGHTS){let s=I(r,"multiClassLabels","sigmoidCrossEntropy"),i=I(t,"logits","sigmoidCrossEntropy"),a=null;if(e!=null&&(a=I(e,"weights","sigmoidCrossEntropy")),ve(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),o>0){let u=nt(o),c=nt(1),p=nt(.5);s=U(A(s,tt(c,u)),A(p,u))}let l=wV(s,i);return mr(l,a,n)}var Iv=S({sigmoidCrossEntropy_:CV});function TV(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Wr((n,s,i)=>{let l=Dc(s,[e],!0),u=tt(X(s,"float32"),l);i([n,u]);let c=_t(A(u,n));return{value:st(c,[e]),gradFunc:(f,h)=>{let[d,g]=h,x=ko(f.shape,[e]);return[A(D(f,x),tt(X(d,"float32"),Fe(g))),A(D(f,x),tt(Fe(g),X(d,"float32")))]}}})(r,t)}function IV(r,t,e,o=0,n=_e.SUM_BY_NONZERO_WEIGHTS){let s=I(r,"onehotLabels","softmaxCrossEntropy"),i=I(t,"logits","softmaxCrossEntropy"),a=null;if(e!=null&&(a=I(e,"weights","softmaxCrossEntropy")),ve(s.shape,i.shape,"Error in softmaxCrossEntropy: "),o>0){let u=nt(o),c=nt(1),p=nt(s.shape[1]);s=U(A(s,tt(c,u)),ot(u,p))}let l=TV(s,i);return mr(l,a,n)}var Sv=S({softmaxCrossEntropy_:IV});function SV(r,t,e,o){let n=I(r,"indices","sparseFillEmptyRows","int32"),s=I(t,"values","sparseFillEmptyRows"),i=I(e,"denseShape","sparseFillEmptyRows","int32"),a=I(o,"defaultValue","sparseFillEmptyRows",s.dtype);if(n.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${n.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let l={indices:n,values:s,denseShape:i,defaultValue:a},u=k.runKernel(Zu,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var vv=S({sparseFillEmptyRows_:SV});function vV(r,t,e){let o=I(r,"inputIndices","sparseReshape","int32"),n=I(t,"inputShape","sparseReshape","int32"),s=I(e,"newShape","sparseReshape","int32");if(o.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${o.shape}`);if(n.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${n.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:o,inputShape:n,newShape:s},a=k.runKernel(Ju,i);return{outputIndices:a[0],outputShape:a[1]}}var Nv=S({sparseReshape_:vV});function NV(r,t,e){let o=I(r,"data","sparseSegmentMean"),n=I(t,"indices","sparseSegmentMean","int32"),s=I(e,"segmentIds","sparseSegmentMean","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:o,indices:n,segmentIds:s};return k.runKernel(Qu,i)}var kv=S({sparseSegmentMean_:NV});function kV(r,t,e){let o=I(r,"data","sparseSegmentSum"),n=I(t,"indices","sparseSegmentSum","int32"),s=I(e,"segmentIds","sparseSegmentSum","int32");if(o.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${n.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:o,indices:n,segmentIds:s};return k.runKernel(tc,i)}var Ev=S({sparseSegmentSum_:kV});function EV(r,t,e,o,n,s,i,a){let l=I(r,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=I(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:e,nGramWidths:o,leftPad:n,rightPad:s,padWidth:i,preserveShortSequences:a},p={data:l,dataSplits:u},m=k.runKernel(nc,p,c);return{nGrams:m[0],nGramsSplits:m[1]}}var $v=S({stringNGrams_:EV});function $V(r,t,e=!0){let o=I(r,"input","stringSplit","string"),n=I(t,"delimiter","stringSplit","string");if(o.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${o.shape}`);if(n.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${n.shape}`);let s={skipEmpty:e},i={input:o,delimiter:n},a=k.runKernel(sc,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var Av=S({stringSplit_:$V});function AV(r,t){let e=I(r,"input","stringToHashBucketFast","string"),o={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let n={input:e};return k.runKernel(ic,n,o)}var Dv=S({stringToHashBucketFast_:AV});var DV={fft:Ia,ifft:Ks,rfft:Sa,irfft:Gc},RV={hammingWindow:ZS,hannWindow:jd,frame:Xd,stft:JS},Hr={flipLeftRight:tv,grayscaleToRGB:ev,resizeNearestNeighbor:tg,resizeBilinear:Qd,rotateWithOffset:rv,cropAndResize:QS,nonMaxSuppression:ov,nonMaxSuppressionAsync:iv,nonMaxSuppressionWithScore:av,nonMaxSuppressionWithScoreAsync:lv,nonMaxSuppressionPadded:uv,nonMaxSuppressionPaddedAsync:cv,threshold:pv,transform:mv},qw={bandPart:fv,gramSchmidt:hv,qr:gv},FV={absoluteDifference:xv,computeWeightedLoss:mr,cosineDistance:yv,hingeLoss:bv,huberLoss:wv,logLoss:Cv,meanSquaredError:Tv,sigmoidCrossEntropy:Iv,softmaxCrossEntropy:Sv},_V={sparseFillEmptyRows:vv,sparseReshape:Nv,sparseSegmentMean:kv,sparseSegmentSum:Ev},OV={stringNGrams:$v,stringSplit:Av,stringToHashBucketFast:Dv};var K={};Kt(K,{Serializable:()=>Im,SerializationMap:()=>Fn,registerClass:()=>jw});var Im=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},Fn=class{constructor(){this.classNameMap={}}static getMap(){return Fn.instance==null&&(Fn.instance=new Fn),Fn.instance}static register(t){Fn.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function jw(r){E(r.className!=null,()=>"Class being registered does not have the static className property defined."),E(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),E(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Fn.register(r)}var fr=class extends Im{minimize(t,e=!1,o){let{value:n,grads:s}=this.computeGradients(t,o);if(o!=null){let i=o.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return yt(s),e?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Lw(t,e)}dispose(){this.iterations_!=null&&yt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:nt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}};Object.defineProperty(fr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var qc=class extends fr{constructor(t,e,o=null){super(),this.learningRate=t,this.rho=e,this.epsilon=o,this.accumulatedGrads=[],this.accumulatedUpdates=[],o==null&&(this.epsilon=k.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=k.registeredVariables[o],i=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accum_grad`,variable:M(()=>dt(s).variable(i))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${o}/accum_var`,variable:M(()=>dt(s).variable(i))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedGrads[n].variable,u=this.accumulatedUpdates[n].variable;M(()=>{let c=U(A(l,this.rho),A(Et(a),1-this.rho)),p=A(ot(ee(U(u,this.epsilon)),ee(U(l,this.epsilon))),a),m=U(A(u,this.rho),A(Et(p),1-this.rho));l.assign(c),u.assign(m);let f=U(A(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(yt(this.accumulatedGrads.map(t=>t.variable)),yt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=t.length/2,o=!1;this.accumulatedGrads=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedUpdates=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var jc=class extends fr{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=k.registeredVariables[o];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${o}/accumulator`,variable:M(()=>No(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(t)?t[n].tensor:t[o];if(i==null)return;let a=this.accumulatedGrads[n].variable;M(()=>{let l=U(a,Et(i));a.assign(l);let u=U(A(ot(i,ee(U(l,k.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&yt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var Xc=class extends fr{constructor(t,e,o,n=null){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],M(()=>{this.accBeta1=nt(e).variable(),this.accBeta2=nt(o).variable()}),n==null&&(this.epsilon=k.backend.epsilon())}static get className(){return"Adam"}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);M(()=>{let o=tt(1,this.accBeta1),n=tt(1,this.accBeta2);e.forEach((s,i)=>{let a=k.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:M(()=>dt(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:M(()=>dt(a).variable(l))});let u=Array.isArray(t)?t[i].tensor:t[s];if(u==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=U(A(c,this.beta1),A(u,1-this.beta1)),f=U(A(p,this.beta2),A(Et(u),1-this.beta2)),h=ot(m,o),d=ot(f,n);c.assign(m),p.assign(f);let g=U(A(ot(h,U(ee(d),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(A(this.accBeta1,this.beta1)),this.accBeta2.assign(A(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&yt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&yt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),M(()=>{this.accBeta1.assign(kr(this.beta1,this.iterations_+1)),this.accBeta2.assign(kr(this.beta2,this.iterations_+1))});let e=t.length/2,o=!1;this.accumulatedFirstMoment=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var Yc=class extends fr{constructor(t,e,o,n=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=o,this.epsilon=n,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],M(()=>{this.iteration=nt(0).variable(),this.accBeta1=nt(e).variable()}),n==null&&(this.epsilon=k.backend.epsilon())}static get className(){return"Adamax"}applyGradients(t){let e=Array.isArray(t)?t.map(o=>o.name):Object.keys(t);M(()=>{let o=tt(1,this.accBeta1),n=ot(-this.learningRate,U(A(this.iteration,this.decay),1));e.forEach((s,i)=>{let a=k.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:dt(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:dt(a).variable(l)});let u=Array.isArray(t)?t[i].tensor:t[s];if(u==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=U(A(c,this.beta1),A(u,1-this.beta1)),f=A(p,this.beta2),h=ie(u),d=Ur(f,h);c.assign(m),p.assign(d);let g=U(A(ot(n,o),ot(m,U(d,this.epsilon))),a);a.assign(g)}),this.iteration.assign(U(this.iteration,1)),this.accBeta1.assign(A(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&yt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&yt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var Na=class extends fr{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}static get className(){return"SGD"}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=Array.isArray(t)?t[n].tensor:t[o];if(s==null)return;let i=k.registeredVariables[o];M(()=>{let a=U(A(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=le(nt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var Zc=class extends Na{constructor(t,e,o=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=o,this.accumulations=[],this.m=nt(this.momentum)}static get className(){return"Momentum"}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=k.registeredVariables[o];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${o}/momentum`,variable:M(()=>dt(s).variable(!1))});let i=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[o];a!=null&&M(()=>{let l,u=U(A(this.m,i),a);this.useNesterov?l=U(A(this.c,U(a,A(u,this.m))),s):l=U(A(this.c,u),s),i.assign(u),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&yt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=!1;this.accumulations=t.map(o=>({originalName:o.name,variable:o.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var Jc=class extends fr{constructor(t,e=.9,o=0,n=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=o,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,n==null&&(this.epsilon=k.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(t){(Array.isArray(t)?t.map(o=>o.name):Object.keys(t)).forEach((o,n)=>{let s=k.registeredVariables[o],i=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${o}/rms`,variable:M(()=>dt(s).variable(i))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${o}/momentum`,variable:M(()=>dt(s).variable(i))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${o}/mg`,variable:M(()=>dt(s).variable(i))});let a=Array.isArray(t)?t[n].tensor:t[o];if(a==null)return;let l=this.accumulatedMeanSquares[n].variable,u=this.accumulatedMoments[n].variable;M(()=>{let c=U(A(l,this.decay),A(Et(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,m=U(A(p,this.decay),A(a,1-this.decay)),f=ot(A(a,this.learningRate),ee(tt(c,U(Et(m),this.epsilon)))),h=U(A(u,this.momentum),f);l.assign(c),p.assign(m),u.assign(h);let d=tt(s,h);s.assign(d)}else{let p=U(A(l,this.decay),A(Et(a),1-this.decay)),m=U(A(u,this.momentum),ot(A(a,this.learningRate),ee(U(p,this.epsilon))));l.assign(p),u.assign(m);let f=tt(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&yt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&yt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&yt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,o=!1;this.accumulatedMeanSquares=t.slice(0,e).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.accumulatedMoments=t.slice(e,e*2).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(n=>({originalName:n.name,variable:n.tensor.variable(o)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var LV=[qc,jc,Xc,Yc,Zc,Jc,Na];function Rv(){for(let r of LV)jw(r)}var Jo={};Kt(Jo,{browserFiles:()=>_v,browserHTTPRequest:()=>Pv,concatenateArrayBuffers:()=>xc,copyModel:()=>MI,decodeWeights:()=>Ph,encodeWeights:()=>II,fromMemory:()=>zv,fromMemorySync:()=>t0,getLoadHandlers:()=>$I,getModelArtifactsForJSON:()=>yc,getModelArtifactsForJSONSync:()=>Tw,getModelArtifactsInfoForJSON:()=>yn,getSaveHandlers:()=>EI,getWeightSpecs:()=>Mh,http:()=>rg,isHTTPScheme:()=>eg,listModels:()=>PI,loadWeights:()=>Ov,moveModel:()=>BI,registerLoadRouter:()=>kI,registerSaveRouter:()=>NI,removeModel:()=>zI,weightsLoaderFactory:()=>Jw,withSaveHandler:()=>Mv,withSaveHandlerSync:()=>Bv});var PV="model",zV=".json",MV=".weights.bin";function Fv(r){return new Promise(t=>setTimeout(t)).then(r)}var js=class{constructor(t){if(!z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(js.URL_SCHEME)&&(t=t.slice(js.URL_SCHEME.length)),(t==null||t.length===0)&&(t=PV),this.modelJsonFileName=t+zV,this.weightDataFileName=t+MV}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let o=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],n=zh(t,o),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await Fv(()=>i.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=e,await Fv(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:yn(t)}}}};js.URL_SCHEME="downloads://";var Xw=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{let o=new FileReader;o.onload=n=>{let s=JSON.parse(n.target.result),i=s.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}let l=yc(s,u=>this.loadWeights(u));t(l)},o.onerror=n=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(this.jsonFile)})}loadWeights(t){let e=[],o=[];for(let i of t)e.push(...i.weights),o.push(...i.paths);let n=this.checkManifestAndWeightFiles(t),s=o.map(i=>this.loadWeightsFile(i,n[i]));return Promise.all(s).then(i=>[e,xc(i)])}loadWeightsFile(t,e){return new Promise((o,n)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;o(a)},s.onerror=i=>n(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],o=this.weightsFiles.map(s=>Cw(s.name)),n={};for(let s of t)s.paths.forEach(i=>{let a=Cw(i);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),o.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);n[i]=this.weightsFiles[o.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},BV=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(js.URL_SCHEME)?VV(r.slice(js.URL_SCHEME.length)):null;Qt.registerSaveRouter(BV);function VV(r="model"){return new js(r)}function _v(r){return new Xw(r)}function Yw(r,t,e,o){i(r),e=e??0,o=o??1,a(e,o);let n=0,s=l=>(l.then(u=>{let c=e+ ++n/r.length*(o-e);return t(c),u}),l);function i(l){E(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){E(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),E(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),E(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}async function Zw(r,t){t==null&&(t={});let e=t.fetchFunc==null?z().platform.fetch:t.fetchFunc,o=r.map(p=>e(p,t.requestInit,{isBinary:!0})),n=0,s=.5,a=(t.onProgress==null?await Promise.all(o):await Yw(o,t.onProgress,n,s)).map(p=>p.arrayBuffer()),l=.5,u=1;return t.onProgress==null?await Promise.all(a):await Yw(a,t.onProgress,l,u)}async function Ov(r,t="",e,o){return Jw(i=>Zw(i,{requestInit:o}))(r,t,e)}function Jw(r){return async(t,e="",o)=>{let n=t.map(()=>!1),s={},i=o!=null?o.map(()=>!1):[],a=[];if(t.forEach((f,h)=>{let d=0;f.weights.forEach(g=>{let x="quantization"in g?g.quantization.dtype:g.dtype,b=fm[x]*Lt(g.shape),w=()=>{n[h]=!0,s[h]==null&&(s[h]=[]),s[h].push({manifestEntry:g,groupOffset:d,sizeBytes:b})};o!=null?o.forEach((C,v)=>{C===g.name&&(w(),i[v]=!0)}):w(),a.push(g.name),d+=b})}),!i.every(f=>f)){let f=o.filter((h,d)=>!i[d]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=n.reduce((f,h,d)=>(h&&f.push(d),f),[]),u=[];l.forEach(f=>{t[f].paths.forEach(h=>{let d=e+(e.endsWith("/")?"":"/")+h;u.push(d)})});let c=await r(u),p={},m=0;return l.forEach(f=>{let h=t[f].paths.length,d=0;for(let C=0;C<h;C++)d+=c[m+C].byteLength;let g=new ArrayBuffer(d),x=new Uint8Array(g),b=0;for(let C=0;C<h;C++){let v=new Uint8Array(c[m+C]);x.set(v,b),b+=v.byteLength}s[f].forEach(C=>{let v=g.slice(C.groupOffset,C.groupOffset+C.sizeBytes),$=Ph(v,[C.manifestEntry]);for(let R in $)p[R]=$[R]}),m+=h}),p}}var GV="application/octet-stream",WV="application/json",Sm=class{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(E(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=z().platform.fetch,E(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&E(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;let o=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],n=zh(t,o);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:WV}),"model.json"),t.weightData!=null&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:GV}),"model.weights.bin");let s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:yn(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}let o=e.modelTopology,n=e.weightsManifest;if(o==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return yc(e,s=>this.loadWeights(s))}async loadWeights(t){let e=Array.isArray(this.path)?this.path[1]:this.path,[o,n]=UV(e),s=this.weightPathPrefix||o,i=Mh(t),a=[],l=[];for(let c of t)for(let p of c.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(p)):a.push(s+p+n);this.weightUrlConverter&&a.push(...await Promise.all(l));let u=await Zw(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,xc(u)]}};Sm.URL_SCHEME_REGEX=/^https?:\/\//;function UV(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),o=r.substring(0,t),n=e>t?r.substring(e):"";return[o+"/",n]}function eg(r){return r.match(Sm.URL_SCHEME_REGEX)!=null}var Lv=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(o=>eg(o)):e=eg(r),e)return rg(r,t)}return null};Qt.registerSaveRouter(Lv);Qt.registerLoadRouter(Lv);function rg(r,t){return new Sm(r,t)}function Pv(r,t){return rg(r,t)}var vm=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},og=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},Qw=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function zv(r,t,e,o){let n=arguments;return new Qw(t0(...n))}function t0(r,t,e,o){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new vm(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vm({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vm({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:o}))}function Mv(r){return new og(r)}function Bv(r){return new og(r)}var Qc={};Kt(Qc,{fromPixels:()=>ZV,fromPixelsAsync:()=>XV,toPixels:()=>YV});var Nl;function Vv(r,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,o=!1,n=!1,s=!1,i=!1,a=!1;if(r.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&r instanceof ImageData)o=!0;else if(typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement)n=!0;else if(typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement)s=!0;else if(r.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&r instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);if(am(im,k.backendName)!=null){let h={pixels:r},d={numChannels:t};return k.runKernel(im,h,d)}let[u,c]=n?[r.videoWidth,r.videoHeight]:[r.width,r.height],p;if(i)p=r.getContext("2d").getImageData(0,0,u,c).data;else if(o||e)p=r.data;else if(s||n||a){if(Nl==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Nl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Nl=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Nl.canvas.width=u,Nl.canvas.height=c,Nl.drawImage(r,0,0,u,c),p=Nl.getImageData(0,0,u,c).data}let m;if(t===4)m=new Int32Array(p);else{let h=u*c;m=new Int32Array(h*t);for(let d=0;d<h;d++)for(let g=0;g<t;++g)m[d*t+g]=p[d*4+g]}return Bd(m,[c,u,t],"int32")}function HV(r){return r!=null&&r.data instanceof Uint8Array}function KV(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function qV(r){return r!=null&&r.width!==0&&r.height!==0}function jV(r){return KV()&&!(r instanceof ImageBitmap)&&qV(r)&&!HV(r)}async function XV(r,t=3){let e=null;if(z().getBool("WRAP_TO_IMAGEBITMAP")&&jV(r)){let o;try{o=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch{o=null}o!=null&&o.width===r.width&&o.height===r.height?e=o:e=r}else e=r;return Vv(e,t)}async function YV(r,t){let e=I(r,"img","toPixels");if(!(r instanceof $t)){let u=e;e=X(u,"int32"),u.dispose()}if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let[o,n]=e.shape.slice(0,2),s=e.rank===2?1:e.shape[2];if(s>4||s===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`);let i=await e.data(),a=e.dtype==="float32"?255:1,l=new Uint8ClampedArray(n*o*4);for(let u=0;u<o*n;++u){let c=[0,0,0,255];for(let m=0;m<s;m++){let f=i[u*s+m];if(e.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(e.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);s===1?(c[0]=f*a,c[1]=f*a,c[2]=f*a):c[m]=f*a}let p=u*4;l[p+0]=Math.round(c[0]),l[p+1]=Math.round(c[1]),l[p+2]=Math.round(c[2]),l[p+3]=Math.round(c[3])}if(t!=null){t.width=n,t.height=o;let u=t.getContext("2d"),c=new ImageData(l,n,o);u.putImageData(c,0,0)}return e!==r&&e.dispose(),l}var ZV=S({fromPixels_:Vv});function JV(r,t){let e=r.shape.length,o=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(o<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${o}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[o-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[o-1]} vs. ${e}`);if(Lt(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let n=t.shape,s=n[n.length-1],i=1;for(let p=0;p<n.length-1;++p)i*=n[p];let a=r.shape,l=n.slice();l.pop();let u=1;for(let p=s;p<e;++p)u*=a[p],l.push(a[p]);let c=[...mn(r.shape).map(p=>p/u),1].slice(0,s);return[l,i,u,c]}var Ze={};Kt(Ze,{assertParamsValid:()=>tG,computeFlatOffset:()=>sG,computeOutShape:()=>rG,getNormalizedAxes:()=>oG,isSliceContinous:()=>nG,maskToAxes:()=>eG,parseSliceParams:()=>r0,sliceInfo:()=>iG,startForAxis:()=>Xv,startIndicesWithElidedDims:()=>Kv,stopForAxis:()=>Yv,stopIndicesWithElidedDims:()=>qv,stridesForAxis:()=>jv,stridesWithElidedDims:()=>Wv});var e0=-2,QV=-1;function tG(r,t,e){let o=r.shape.length;E(o===t.length,()=>`Error in slice${o}D: Length of begin ${t} must match the rank of the array (${o}).`),E(o===e.length,()=>`Error in slice${o}D: Length of size ${e} must match the rank of the array (${o}).`);for(let n=0;n<o;++n)E(t[n]+e[n]<=r.shape[n],()=>`Error in slice${o}D: begin[${n}] + size[${n}] (${t[n]+e[n]}) would overflow input.shape[${n}] (${r.shape[n]})`)}function eG(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function rG(r,t,e){let o=[];for(let n=0;n<r.length;n++)o[n]=Math.ceil((t[n]-r[n])/e[n]);return o}function Wv(r,t,e,o){let n=[...r];for(let s=n.length;s<o.length;s++)n.push(1);for(let s=0;s<e;s++)s===0?n[t]=1:(n.splice(t,0,1),n.pop());return n}function Uv(r,t,e){return e<=r?e:e-(t-1)}function Hv(r,t){let e=[];for(let o=0;o<r;o++)e.push(t+o);return e}function oG(r,t,e,o,n,s,i,a,l){let u=r.length,c=new Array(u),p=new Array(u),m=new Array(u);if(t.length&&e>0){let f=t[0],h=e+1;c=Kv(i,f,h,o,r),p=qv(a,f,h,n,r),m=Wv(s,f,h,r)}else for(let f=0;f<u;f++)c[f]=Xv(i,o,s,r,f,l),p[f]=Yv(a,n,s,r,f,l),m[f]=jv(s,f,l);return{begin:c,end:p,strides:m}}function Kv(r,t,e,o,n){let s=[...n],i=Hv(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let l=Uv(t,e,a),u=o[l];r&1<<l&&(u=0),s[a]=u}return s}function qv(r,t,e,o,n){let s=[...n],i=Hv(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let l=Uv(t,e,a),u=o[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[a]=u}for(let a=0;a<s.length;a++){let l=n[a];s[a]<0&&(s[a]+=l),s[a]=eu(0,s[a],n[a])}return s}function jv(r,t,e){let o=r[t];return(e&1<<t||o==null)&&(o=1),o}function Xv(r,t,e,o,n,s){let i=t[n],a=e[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),i=eu(0,i,l-1),i}function Yv(r,t,e,o,n,s){let i=t[n],a=e[n]||1;(r&1<<n||s&1<<n||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=o[n];return i<0&&(i+=l),a>0?i=eu(0,i,l):i=eu(-1,i,l-1),i}function nG(r,t,e){let o=e.length;for(let n=0;n<e.length;n++)if(e[n]>1){o=n;break}for(let n=o+1;n<e.length;n++)if(t[n]>0||e[n]!==r[n])return!1;return!0}function sG(r,t){let e=r.length>0?r[r.length-1]:1;for(let o=0;o<r.length-1;o++)e+=r[o]*t[o];return e}function r0(r,t,e){let o,n=r.shape.length;typeof t=="number"?o=[t,...new Array(n-1).fill(0)]:t.length<n?o=t.concat(new Array(n-t.length).fill(0)):o=t.slice(),o.forEach(i=>{E(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(n).fill(-1):typeof e=="number"?s=[e,...new Array(n-1).fill(-1)]:e.length<n?s=e.concat(new Array(n-e.length).fill(-1)):s=e,s=s.map((i,a)=>i>=0?i:(E(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-o[a])),[o,s]}function iG(r,t,e,o,n,s,i,a,l){let u;if(o==null?(u=new Array(t.length),u.fill(1)):u=o,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:n,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let w=0;w<p.dims;w++)c&&1<<w&a&&p.numAddAxisAfterEllipsis++,1<<w&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};aG(p,m);let f=!0,h=!0,d=!0,g=[],x=[];for(let w=0;w<r.length;++w){if(m.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);let C=!!(m.shrinkAxisMask&1<<w),v=r[w];if(v===-1){g.push(C?1:-1);continue}let $=[m.beginMask&1<<w,m.endMask&1<<w],R=[m.strides[w]>0?0:-1,m.strides[w]>0?v:v-1];if(C&&m.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");d=d&&m.strides[w]===1;let F=!!(m.beginMask&1<<w&&m.endMask&1<<w);if(m.beginValid&&m.endValid){if(C){let V=m.begin[w]<0?v+m.begin[w]:m.begin[w];if(m.begin[w]=V,m.end[w]=m.begin[w]+1,V<0||V>=v)throw Error(`slice index ${m.begin[w]} of dimension ${w} out of bounds.`)}else m.begin[w]=Gv(m.begin[w],0,m.strides[w],v,$,R),m.end[w]=Gv(m.end[w],1,m.strides[w],v,$,R);let B=m.strides[w]===1&&m.begin[w]===0&&m.end[w]===v;f=f&&B,h=h&&(w===0&&m.strides[w]===1||B)}else f=f&&m.strides[w]===1&&F,h=h&&(w===0&&m.strides[w]===1||F);let O,P=!1;if(m.beginValid&&m.endValid?(O=m.end[w]-m.begin[w],P=!0):C?(O=1,P=!0):F&&v>=0&&(m.strides[w]<0?O=-v:O=v,P=!0),P){let B;O===0||O<0!=m.strides[w]<0?B=0:B=Math.trunc(O/m.strides[w])+(O%m.strides[w]!==0?1:0),g.push(B)}else g.push(-1)}for(let w=0;w<m.finalShapeGatherIndices.length;++w){let C=m.finalShapeGatherIndices[w];C>=0?x.push(g[C]):C===e0&&x.push(1)}return{finalShapeSparse:x.filter((w,C)=>m.finalShapeGatherIndices[C]!==e0),finalShape:x,isIdentity:f,sliceDim0:h,isSimpleSlice:d,begin:m.begin,end:m.end,strides:m.strides}}function aG(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let o=0;o<r.dims;o++)if(1<<o&r.ellipsisMask){let n=Math.min(t.dims-(r.dims-o)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<n;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=o}else if(1<<o&r.newAxisMask)t.finalShapeGatherIndices.push(e0),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[o]),r.end!=null&&(t.end[e]=r.end[o]),t.strides[e]=r.strides[o],r.beginMask&1<<o&&(t.beginMask|=1<<e),r.endMask&1<<o&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<o?(t.finalShapeGatherIndices.push(QV),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(o)),t.inputShapeGatherIndicesSparse[e]=o,e++}}function Gv(r,t,e,o,n,s){if(n[t])return e>0?s[t]:s[t+1&1];{let i=r<0?o+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var ng="4.2.0";var sg=class{static sgd(t){return new Na(t)}static momentum(t,e,o=!1){return new Zc(t,e,o)}static rmsprop(t,e=.9,o=0,n=null,s=!1){return new Jc(t,e,o,n,s)}static adam(t=.001,e=.9,o=.999,n=null){return new Xc(t,e,o,n)}static adadelta(t=.001,e=.95,o=null){return new qc(t,e,o)}static adamax(t=.002,e=.9,o=.999,n=null,s=0){return new Yc(t,e,o,n,s)}static adagrad(t,e=.1){return new jc(t,e)}};var kl=sg;var lG=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r())();function Nm(){return new Promise(r=>lG(()=>r()))}var N={};Kt(N,{ERF_A1:()=>IG,ERF_A2:()=>SG,ERF_A3:()=>vG,ERF_A4:()=>NG,ERF_A5:()=>kG,ERF_P:()=>TG,PARALLELIZE_THRESHOLD:()=>ig,RowPartitionType:()=>_n,SELU_SCALE:()=>n0,SELU_SCALEALPHA:()=>o0,applyActivation:()=>Sl,assertAndGetBroadcastShape:()=>vt,assertAxesAreInnerMostDims:()=>i3,assertParamsConsistent:()=>uG,assignToTypedArray:()=>FG,axesAreInnerMostDims:()=>Rw,calculateShapes:()=>TB,checkEinsumDimSizes:()=>MG,checkPadOnDimRoundingMode:()=>te,combineLocations:()=>eS,combineRaggedTensorToTensorShapes:()=>pG,complexWithEvenIndex:()=>AG,complexWithOddIndex:()=>DG,computeConv2DInfo:()=>fl,computeConv3DInfo:()=>qI,computeDefaultPad:()=>Dw,computeDilation2DInfo:()=>az,computeOptimalWindowSize:()=>dG,computeOutAndReduceShapes:()=>Fw,computeOutShape:()=>cG,computePool2DInfo:()=>Aw,computePool3DInfo:()=>lz,convertConv2DDataFormat:()=>jI,decodeEinsumEquation:()=>PG,eitherStridesOrDilationsAreOne:()=>or,expandShapeToKeepDim:()=>ko,exponent:()=>OG,exponents:()=>_G,fromStringArrayToUint8:()=>iW,fromUint8ToStringArray:()=>sW,getAxesPermutation:()=>_w,getBroadcastDims:()=>QI,getComplexWithIndex:()=>RG,getEinsumComputePath:()=>BG,getEinsumPermutation:()=>zG,getFusedBiasGradient:()=>Il,getFusedDyActivation:()=>Tl,getImageCenter:()=>gG,getInnerMostAxes:()=>a3,getPermuted:()=>yG,getRaggedRank:()=>fG,getReductionAxes:()=>jt,getReshaped:()=>xG,getReshapedPermuted:()=>bG,getRowPartitionTypesHelper:()=>mG,getSliceBeginCoords:()=>wG,getSliceSize:()=>CG,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>UG,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>HG,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>KG,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>XG,getSparseReshapeInputOutputMismatchErrorMessage:()=>ZG,getSparseReshapeInputOutputMultipleErrorMessage:()=>YG,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>qG,getSparseReshapeNegativeOutputDimErrorMessage:()=>jG,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>eW,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>JG,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>QG,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>tW,getUndoAxesPermutation:()=>ym,isIdentityPermutation:()=>VG,log:()=>oP,mergeRealAndImagArrays:()=>EG,prepareAndValidate:()=>JV,prepareSplitSize:()=>WG,segment_util:()=>i0,shouldFuse:()=>vl,slice_util:()=>Ze,splitRealAndImagArrays:()=>$G,stridesOrDilationsArePositive:()=>Tn,tupleValuesAreOne:()=>fo,upcastType:()=>Le,validateDefaultValueShape:()=>hG,validateInput:()=>Ww,validateUpdateShape:()=>HS,warn:()=>xn});function uG(r,t){let e=r[0].length;r.forEach((n,s)=>{E(n.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),E(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let o=r[0];r.forEach((n,s)=>{for(let i=0;i<e;i++)E(i===t||n[i]===o[i],()=>`Error in concat${e}D: Shape of tensors[${s}] (${n}) does not match the shape of the rest (${o}) along the non-concatenated axis ${s}.`)})}function cG(r,t){let e=r[0].slice();for(let o=1;o<r.length;o++)e[t]+=r[o][t];return e}var _n;(function(r){r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS"})(_n||(_n={}));function pG(r,t,e){let o=new Array;if(e==null&&t==null)return o;if(t==null)for(;o.length<r+e.length;)o.push(-1);else o=t.slice();if(e==null)return o;if(r+e.length!==o.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${o.length}`);for(let n=1;n<e.length;++n){let s=e[n],i=o[o.length-e.length+n],a=o[i];if(s>=0)if(a>=0){if(a!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${n+r}] = ${s} but shape[${n+r}] = ${a}`)}else o[i]=s}return o}function mG(r){let t={FIRST_DIM_SIZE:_n.FIRST_DIM_SIZE,VALUE_ROWIDS:_n.VALUE_ROWIDS,ROW_LENGTHS:_n.ROW_LENGTHS,ROW_SPLITS:_n.ROW_SPLITS,ROW_LIMITS:_n.ROW_LIMITS,ROW_STARTS:_n.ROW_STARTS},e=[];for(let o of r)if(o in t)e.push(t[o]);else break;return e}function fG(r){return r.length===0?0:r[0]===_n.FIRST_DIM_SIZE?r.length-1:r.length}function hG(r,t){if(r==null||t==null)return;let e=r.length,o=t.length;if(e>=o)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${o})`);for(let n=0;n<Math.min(e,o-1);++n){let s=r[n],i=t[n+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${n-r.length}] = ${s} but ragged tensor input.flatValues.shape[${n-r.length}] = ${i}`)}}var ig=30;function dG(r){return r<=ig?r:iu(r,Math.floor(Math.sqrt(r)))}function gG(r,t,e){let o=e*(typeof r=="number"?r:r[0]),n=t*(typeof r=="number"?r:r[1]);return[o,n]}function xG(r,t,e,o=!0){let n=[];if(o)n=n.concat(t.slice(0)),n.push(r[0]/e),n=n.concat(r.slice(1));else{n=n.concat(r[0]);let s=t.length;for(let i=0;i<s;++i)n=n.concat([r[i+1]/t[i],t[i]]);n=n.concat(r.slice(s+1))}return n}function yG(r,t,e=!0){let o=[];if(e){o.push(t);for(let n=t+1;n<r;++n)n<=2*t?(o.push(n),o.push(n-(t+1))):o.push(n)}else{let n=[],s=[];for(let i=1;i<r;++i)i>=t*2+1||i%2===1?s.push(i):n.push(i);o.push(...n),o.push(0),o.push(...s)}return o}function bG(r,t,e,o=!0){let n=[];o?n.push(r[0]/e):n.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?o?n.push(t[s-1]*r[s]):n.push(r[s]/t[s-1]):n.push(r[s]);return n}function wG(r,t){let e=[0];for(let o=0;o<t;++o)e.push(r[o][0]);return e}function CG(r,t,e){let o=r.slice(0,1);for(let n=0;n<e;++n)o.push(r[n+1]-t[n][0]-t[n][1]);return o}var o0=1.7580993408473768,n0=1.0507009873554805;var TG=.3275911,IG=.254829592,SG=-.284496736,vG=1.421413741,NG=-1.453152027,kG=1.061405429;function EG(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let o=0;o<e.length;o+=2)e[o]=r[o/2],e[o+1]=t[o/2];return e}function $G(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let o=0;o<r.length;o+=2)t[o/2]=r[o],e[o/2]=r[o+1];return{real:t,imag:e}}function AG(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=0;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function DG(r){let t=Math.floor(r.length/4),e=new Float32Array(t),o=new Float32Array(t);for(let n=2;n<r.length;n+=4)e[Math.floor(n/4)]=r[n],o[Math.floor(n/4)]=r[n+1];return{real:e,imag:o}}function RG(r,t){let e=r[t*2],o=r[t*2+1];return{real:e,imag:o}}function FG(r,t,e,o){r[o*2]=t,r[o*2+1]=e}function _G(r,t){let e=new Float32Array(r/2),o=new Float32Array(r/2);for(let n=0;n<Math.ceil(r/2);n++){let s=(t?2:-2)*Math.PI*(n/r);e[n]=Math.cos(s),o[n]=Math.sin(s)}return{real:e,imag:o}}function OG(r,t,e){let o=(e?2:-2)*Math.PI*(r/t),n=Math.cos(o),s=Math.sin(o);return{real:n,imag:s}}var s0="->",LG=/->/g,Zv=",",Jv="...";function PG(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(LG,"").length)/s0.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${s0}").`);let[o,n]=r.split(s0);E(o.indexOf(Jv)===-1,()=>`The ellipsis notation ("${Jv}") is not supported yet.`);let s=o.split(Zv),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<n.length;++m){let f=n[m];if(!s.some(h=>h.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<o.length;++m){let f=o[m];a.indexOf(f)===-1&&f!==Zv&&a.push(f)}let l=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);l[m]=[];for(let f=0;f<s[m].length;++f)l[m].push(a.indexOf(s[m][f]))}let u=a.length,c=n.length,p=[];for(let m=c;m<u;++m)p.push(m);return{allDims:a,summedDims:p,idDims:l}}function zG(r,t){let e=new Array(r);e.fill(-1);for(let n=0;n<t.length;++n)e[t[n]]=n;let o=[];for(let n=0;n<r;++n)e[n]===-1&&o.push(n);return e=e.filter(n=>n!==-1),{permutationIndices:e,expandDims:o}}function MG(r,t,e){let o=new Array(r);for(let n=0;n<e.length;++n){let s=e[n].shape;for(let i=0;i<t[n].length;++i)o[t[n][i]]===void 0?o[t[n][i]]=s[i]:E(o[t[n][i]]===s[i],()=>`Expected dimension ${o[t[n][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function BG(r,t){let e=r,o=[],n=0;r.length===0&&e.push(-1),n=r.length+1;for(let i=0;i<n;++i)o.push([]);let s=[];for(let i=0;i<e.length;++i){let a=e[i],l=GG(t,a);for(let u of l)s.indexOf(u)===-1&&(o[i].push(u),s.push(u))}return{path:e,steps:o}}function VG(r){return r.every((t,e)=>t===e)}function GG(r,t){let e=[];for(let o=0;o<r.length;++o)(r[o].length===0||r[o].indexOf(t)!==-1||t===-1)&&e.push(o);return e}function WG(r,t,e=0){let o=[];if(typeof t=="number")E(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),o=new Array(t).fill(r.shape[e]/t);else{let n=t.reduce((i,a)=>(a===-1&&(i+=1),i),0);E(n<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((a,l)=>l>0?a+l:a);t[s]=r.shape[e]-i}E(r.shape[e]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),o=t}return o}function UG(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function HG(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function KG(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function qG(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function jG(r,t){return`size ${r} must be non-negative, not ${t}`}function XG(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function YG(r,t){let e=Lt(r),o=Lt(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${o}. inputShape=${r} outputShape= ${t}`}function ZG(r,t){let e=Lt(r),o=Lt(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${o}. inputShape=${r} outputShape=${t}`}function JG(){return"segment ids must be >= 0"}function QG(){return"segment ids are not increasing"}function tW(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function eW(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var i0={};Kt(i0,{collectGatherOpShapeInfo:()=>nW,computeOutShape:()=>oW,segOpComputeOptimalWindowSize:()=>rW});function rW(r,t){let e=!1,o;for(r<=ig?(o=r,e=!0):o=iu(r,Math.floor(Math.sqrt(r)));!e;)o>t||o===r?e=!0:o=iu(r,o+1);return o}function oW(r,t,e){let o=[],n=r.length;for(let s=0;s<n;s++)s!==t?o.push(r[s]):o.push(e);return o}function nW(r,t,e,o){let n=t.shape.length,s=r.shape.length;if(o!==0&&(o<-n||o>n))throw new Error(`Expect batchDims in the range of [-${n}, ${n}], but got ${o}`);if(o<0&&(o+=n),o>s)throw new Error(`batchDims (${o}) must be less than rank(x) (
    ${s}).`);if(e<o)throw new Error(`batchDims (${o}) must be less than or equal to axis (${e}).`);for(let p=0;p<o;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=r.shape[e],a=[],l=1,u=1,c=1;for(let p=0;p<o;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=o;p<e;p++)a.push(r.shape[p]),u*=r.shape[p];for(let p=o;p<n;p++)a.push(t.shape[p]);for(let p=e+1;p<s;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}function sW(r){try{return r.map(t=>dc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function iW(r){return r.map(t=>hc(t))}var hr={};Kt(hr,{nonMaxSuppressionV3Impl:()=>Yd,nonMaxSuppressionV4Impl:()=>Zd,nonMaxSuppressionV5Impl:()=>Jd,whereImpl:()=>Ud});Rv();var ag={kernelName:hi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(r,Eo(X(e,"float32"),-1))}}};var Qv={kernelName:Xn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=Et(X(e,"float32")),n=ee(tt(nt(1),o));return _t(ot(r,n))}}}};var tN={kernelName:Yn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=ee(tt(Et(X(e,"float32")),1));return ot(r,o)}}}};var eN={kernelName:qo,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=vt(e.shape,o.shape);return{a:()=>{let a=r,l=jt(e.shape,n);return l.length>0&&(a=st(a,l)),D(a,e.shape)},b:()=>{let a=r,l=jt(o.shape,n);return l.length>0&&(a=st(a,l)),D(a,o.shape)}}}};var rN={kernelName:di,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((o,n)=>{e[n]=()=>r.clone()}),e}};var oN={kernelName:gi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>dt(e)}}};var nN={kernelName:xi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>dt(e)}}};var sN={kernelName:Zn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,ee(tt(nt(1),Et(X(e,"float32")))))}}};var iN={kernelName:Jn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=ee(U(nt(1),Et(X(e,"float32"))));return ot(r,o)}}}};var aN={kernelName:es,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=vt(e.shape,o.shape);return{a:()=>{let a=U(Et(e),Et(o)),l=A(r,ot(o,a)),u=jt(e.shape,n);return u.length>0&&(l=st(l,u)),D(l,e.shape)},b:()=>{let a=U(Et(e),Et(o)),l=_t(A(r,ot(e,a))),u=jt(o.shape,n);return u.length>0&&(l=st(l,u)),D(l,o.shape)}}}};var lN={kernelName:Qn,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,U(Et(X(e,"float32")),1))}}};var uN={kernelName:ts,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,tt(nt(1),Et(X(e,"float32"))))}}};function aW(r,t,e,o,n,s){let i=I(r,"dy","avgPool3dGrad"),a=I(t,"input","avgPool3dGrad"),l=i,u=a,c=!1;a.rank===4&&(c=!0,l=D(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=D(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),E(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),E(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),te("avgPool3dGrad",n,s);let p={dy:l,input:u},m={filterSize:e,strides:o,pad:n,dimRoundingMode:s},f=k.runKernel(pu,p,m);return c?D(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var cN=S({avgPool3dGrad_:aW});var pN={kernelName:bi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{filterSize:n,strides:s,pad:i,dimRoundingMode:a}=e;return{x:()=>cN(r,o,n,s,i,a)}}};function lW(r,t,e,o,n){let s=I(r,"dy","avgPoolGrad"),i=I(t,"input","avgPoolGrad");E(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,l=s,u=!1;i.rank===3&&(u=!0,a=D(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=D(s,[1,s.shape[0],s.shape[1],s.shape[2]])),E(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),E(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let c={dy:l,input:a},p={filterSize:e,strides:o,pad:n},m=k.runKernel(cu,c,p);return u?D(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var mN=S({avgPoolGrad_:lW});var fN={kernelName:yi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{filterSize:n,strides:s,pad:i}=e;return{x:()=>mN(r,o,n,s,i)}}};var hN={kernelName:wi,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[o,n]=t,{transposeA:s,transposeB:i}=e;return!s&&!i?{a:()=>At(r,n,!1,!0),b:()=>At(o,r,!0,!1)}:!s&&i?{a:()=>At(r,n,!1,!1),b:()=>At(r,o,!0,!1)}:s&&!i?{a:()=>At(n,r,!1,!0),b:()=>At(o,r,!1,!1)}:{a:()=>At(n,r,!0,!0),b:()=>At(r,o,!0,!0)}}};var dN={kernelName:Ci,gradFunc:(r,t,e)=>{let{blockShape:o,crops:n}=e;return{x:()=>wa(r,o,n)}}};var gN={kernelName:KT,gradFunc:(r,t,e)=>{let o=e,n=o.inputShape,s=o.shape,i=Array.from(s);for(let l=n.length-1;l>=0;l--)if(n[l]===s[l])i[l]=1;else if(n[l]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${s}].`);let a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>st(r,a,!0)}}};var xN={kernelName:fn,gradFunc:r=>({x:()=>r.clone()})};var yN={kernelName:rs,gradFunc:r=>({x:()=>dt(r)})};var bN={kernelName:os,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{clipValueMin:n,clipValueMax:s}=e;return{x:()=>ue(pr(Er(o,n),ro(o,s)),r,dt(r))}}};var wN={kernelName:Ti,inputsToSave:["x"],gradFunc:ag.gradFunc};var CN={kernelName:Ii,saveAllInputs:!0,gradFunc:(r,t,e)=>{let o=t.map(l=>l.shape),{axis:n}=e,s=ze(n,t[0].shape)[0],i=o.map(l=>l[s]);return Ve(r,i,s).map(l=>()=>l)}};var TN={kernelName:Si,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,{dilations:s,strides:i,pad:a,dataFormat:l}=e;return E(fo(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>vc(o.shape,r,n,i,a,l),filter:()=>Kc(o,r,n.shape,i,a,l)}}};var IN={kernelName:vi,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,{strides:s,pad:i,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>Gr(r,n,s,i,a,1,l),filter:()=>Kc(r,o,n.shape,s,i,a,l)}}};function uW(r,t,e,o,n){let s=r;r.rank===4&&(s=D(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=t;i.rank===4&&(i=D(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),E(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),E(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),E(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),E(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),E(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);let a={x:s,dy:i},l={strides:o,pad:n,filterShape:e};return k.runKernel(gu,a,l)}var SN=S({conv3DBackpropFilter_:uW});var vN={kernelName:Ni,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:o,strides:n,pad:s}=e;E(fo(o),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);let[i,a]=t;return{x:()=>pd(i.shape,r,a,n,s),filter:()=>SN(i,r,a.shape,n,s)}}};var NN={kernelName:ns,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(_t(zc(X(e,"float32"))),r)}}};var kN={kernelName:ss,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(Mc(X(e,"float32")),r)}}};var EN={kernelName:ki,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n,exclusive:s,reverse:i}=e;return{x:()=>{let a=_w([n],o.rank),l=Ec(r,n,s,!i);return a!=null&&(l=kt(l,a)),l}}}};var $N={kernelName:Ei,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:o,strides:n,pad:s,dimRoundingMode:i}=e,a=o??[1,1];E(fo(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[l,u]=t;return E(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),E(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),E(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),E(or(n,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${n} and dilations '${a}'.`),te("depthwiseConv2d",s,i),{x:()=>qd(l.shape,r,u,n,s,a,i),filter:()=>Kd(l,r,u.shape,n,s,a,i)}}};var AN={kernelName:$i,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[o,n]=t,s={x:o,filter:n,dy:r},i={x:o,filter:n,dy:r};return{x:()=>k.runKernel(nm,s,e),filter:()=>k.runKernel(sm,i,e)}}};var DN={kernelName:as,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,o={dy:r,y:e};return{x:()=>k.runKernel(Nu,o)}}};var RN={kernelName:ls,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,o=A(Fe(_t(Et(e))),2/Math.sqrt(Math.PI));return{x:()=>A(r,o)}}};var FN={kernelName:us,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(r,e)}}};var _N={kernelName:Ai,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>D(r,e.shape)}}};var ON={kernelName:cs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(r,Fe(e))}}};var LN={kernelName:ps,gradFunc:r=>({x:()=>dt(r)})};var PN={kernelName:ms,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=vt(e.shape,o.shape);return{a:()=>{let a=ot(r,X(o,"float32")),l=jt(e.shape,n);return l.length>0?D(st(a,l),e.shape):a},b:()=>{let a=A(r,X(e,"float32")),l=jt(o.shape,n);l.length>0&&(a=D(st(a,l),o.shape));let u=Et(o);return _t(ot(a,X(u,"float32")))}}}};var zN={kernelName:Di,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:o}=e,[n,s,i,a]=t,l=a??nt(1),u=jt(s.shape,n.shape),c=[];if(s.rank===1){for(let C=0;C<n.shape.length-1;++C)c.push(n.shape[C]);c.push(1)}let p=tt(n,s),m=A(r,l),f=Oc(U(i,nt(o))),h=A(A(A(f,f),f),nt(-.5));return{x:()=>s.rank===1?D(A(A(r,nr(D(f,[1,1,1,s.shape[0]]),c)),l),n.shape):D(A(A(r,f),l),n.shape),mean:()=>{let C=A(A(f,nt(-1)),m);return s.rank===1&&(C=st(C,u)),D(C,s.shape)},variance:()=>{let C=A(A(h,p),m);return s.rank===1&&(C=st(C,u)),D(C,s.shape)},scale:()=>{let C=A(p,f),v=A(r,C);return s.rank===1&&(v=st(v,u)),D(v,s.shape)},offset:()=>{let C=r;return s.rank===1&&(C=st(C,u)),D(C,s.shape)}}}};var VN={kernelName:Ri,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[o,n]=t,{axis:s}=e,i=ze(s,o.shape)[0];return{x:()=>{let l=o.shape,u=n.size,c=l.slice(0,i),p=c.length,m=l.slice(s,l.length).slice(1),f=m.length,h=MN(0,p),d=MN(p+1,p+1+f),g=BN([c,[u],m]),x=D(r,g),b=D(n,[u]),w=BN([[p],h,d]),C=kt(x,w),v=Hc(C,b,o.shape[i]),$=ym(w);return v=kt(v,$),v},indices:()=>n}}};function MN(r,t){let e=[];for(let o=r;o<t;++o)e.push(o);return e}function BN(r){let t=[];for(let e=0;e<r.length;++e)for(let o=0;o<r[e].length;++o)t.push(r[e][o]);return t}var GN={kernelName:fs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>dt(e),b:()=>dt(o)}}};var WN={kernelName:hn,gradFunc:r=>({x:()=>X(r,"float32")})};var UN={kernelName:hs,gradFunc:r=>({x:()=>dt(r)})};var HN={kernelName:ds,gradFunc:r=>({x:()=>dt(r)})};var KN={kernelName:gs,gradFunc:r=>({x:()=>dt(r)})};var qN={kernelName:Fi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{alpha:n}=e,s=ge(o,0);return{x:()=>ue(s,r,A(r,n))}}};var jN={kernelName:ys,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,U(e,1))}}};var XN={kernelName:xs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,X(e,"float32"))}}};var YN={kernelName:qT,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e;return{logits:()=>{let i=Fe(o);return tt(r,A(st(r,n,!0),i))}}}};function cW(r,t,e,o=5,n=1,s=1,i=.5){let a={x:r,y:t,dy:e},l={depthRadius:o,bias:n,alpha:s,beta:i};return k.runKernel(_u,a,l)}var ZN=S({localResponseNormalizationBackprop_:cW});var JN={kernelName:_i,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{depthRadius:s,bias:i,alpha:a,beta:l}=e;return{x:()=>ZN(o,n,r,s,i,a,l)}}};function lg(r,t,e,o){return t.rank<e.rank&&(t=D(t,ko(t.shape,o))),r.rank<e.rank&&(r=D(r,ko(r.shape,o))),{x:()=>A(r,X(br(e,t),r.dtype))}}var a0={kernelName:Oi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let o=e,{reductionIndices:n}=o,s=t[0],i=t[1],a=ze(n,s.shape),l=lg(r,i,s,a);return{x:()=>l.x()}}};var QN={kernelName:bs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>A(r,X(Er(e,o),"float32")),b:()=>A(r,X($c(e,o),"float32"))}}};function pW(r,t,e,o,n,s,i){let a=I(r,"dy","maxPool3dGrad"),l=I(t,"input","maxPool3dGrad"),u=I(e,"output","maxPool3dGrad"),c=a,p=l,m=u,f=!1;l.rank===4&&(f=!0,c=D(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=D(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=D(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),E(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),E(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),E(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),te("maxPool3dGrad",s,i);let h={dy:c,input:p,output:m},d={filterSize:o,strides:n,pad:s,dimRoundingMode:i},g=k.runKernel(Lu,h,d);return f?D(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var t1=S({maxPool3dGrad_:pW});var e1={kernelName:Pi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=e;return{x:()=>t1(r,o,n,s,i,a,l)}}};function mW(r,t,e,o,n,s,i){let a=I(r,"dy","maxPoolGrad"),l=I(t,"input","maxPoolGrad"),u=I(e,"output","maxPoolGrad");E(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),E(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),E(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),te("maxPoolGrad",s,i);let c={dy:a,input:l,output:u},p={filterSize:o,strides:n,pad:s,dimRoundingMode:i};return k.runKernel(Ou,c,p)}var r1=S({maxPoolGrad_:mW});var o1={kernelName:Li,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o,n]=t,{filterSize:s,strides:i,pad:a}=e;return{x:()=>r1(r,o,n,s,i,a)}}};var n1={kernelName:zi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e,s=ze(n,o.shape),a=Fw(o.shape,s)[1],l=Lt(a);return{x:()=>{let c=o.shape.slice();s.forEach(f=>{c[f]=1});let p=D(r,c);return ot(A(p,Me(o.shape,"float32")),l)}}}};var s1={kernelName:Mi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let o=e,{axis:n}=o,[s,i]=t,a=ze(n,s.shape),l=lg(r,i,s,a);return{x:()=>l.x()}}};var i1={kernelName:ws,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t;return{a:()=>A(r,X(ro(e,o),"float32")),b:()=>A(r,X(ge(e,o),"float32"))}}};var a1={kernelName:Bi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let o=t[0],{paddings:n}=e,s=n.map(i=>i[0]);return{x:()=>It(r,s,o.shape)}}};var l1={kernelName:Cs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=vt(e.shape,o.shape);return{a:()=>{let a=jt(e.shape,n);return a.length>0?D(st(r,a),e.shape):r},b:()=>{let a=A(r,_t(En(ot(e,o)))),l=jt(o.shape,n);return l.length>0?D(st(a,l),o.shape):a}}}};var u1={kernelName:Ts,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=vt(e.shape,o.shape);return{a:()=>{let a=A(r,X(o,"float32")),l=jt(e.shape,n);return l.length>0?D(st(a,l),e.shape):a},b:()=>{let a=A(r,X(e,"float32")),l=jt(o.shape,n);return l.length>0?D(st(a,l),o.shape):a}}}};var c1={kernelName:Vi,gradFunc:r=>({x:()=>_t(r)})};var p1={kernelName:Wi,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>oe(e.shape,"float32")}}};var m1={kernelName:Gi,gradFunc:r=>({x:()=>dt(r)})};var f1={kernelName:Ui,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:o}=e;return Ge(r,o).map(s=>()=>s)}};var l0={kernelName:Hi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let o=t[0],{paddings:n}=e,s=n.map(i=>i[0]);return{x:()=>It(r,s,o.shape)}}};var h1={kernelName:Is,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,o,n]=t,s=e,i=o,a=vt(s.shape,i.shape);return{a:()=>{let c=X(i,"float32"),p=A(r,A(c,kr(s,tt(c,nt(1))))),m=jt(s.shape,a);return m.length>0&&(p=st(p,m)),D(p,s.shape)},b:()=>{let c=ge(s,0),p=ue(c,Ye(s),dt(s)),m=A(r,A(n,p)),f=jt(i.shape,a);return f.length>0&&(m=st(m,f)),D(m,i.shape)}}}};var d1={kernelName:Ki,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,o]=t,n=ge(e,0);return{x:()=>ue(n,r,A(r,o)),alpha:()=>{let s=ue(n,dt(r),A(r,e)),i=jt(o.shape,r.shape);return i.length>0&&(s=st(s,i)),D(s,o.shape)}}}};function fW(r,t,e){let o=r.shape.slice();o[e]=1;let n=D(t,o),s=hl(r,e,!0,!1),i=hl(r,e,!0,!0),a=A(s,i);return A(n,a)}function hW(r,t,e){let o=r.shape.length,n=o-e.length,s=N.getAxesPermutation(e,o),i=r;s!=null&&(i=kt(r,s));let a=i.shape.slice(),u=a.splice(o-e.length,e.length).reduce((m,f)=>m*f,1);a.push(u);let c=i.reshape(a),p=fW(c,t,n);if(p=p.reshape(i.shape),s!=null){let m=N.getUndoAxesPermutation(s);p=kt(p,m)}return p}var g1={kernelName:qi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{axis:n}=e,s=[];return n==null?s=o.shape.map((i,a)=>a):typeof n=="number"?s=[n]:s=n,{x:()=>hW(o,r,s)}}};var x1={kernelName:is,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=vt(e.shape,o.shape);return{a:()=>{let a=ot(r,X(o,"float32")),l=jt(e.shape,n);return l.length>0?D(st(a,l),e.shape):a},b:()=>{let a=A(r,X(e,"float32")),l=jt(o.shape,n);l.length>0&&(a=D(st(a,l),o.shape));let u=Et(o);return _t(ot(a,X(u,"float32")))}}}};var y1={kernelName:Ss,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,_t(Et(e)))}}};var b1={kernelName:Ns,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,o=A(ro(e,6),Eo(e));return{x:()=>A(r,X(o,"float32"))}}};var w1={kernelName:vs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(r,X(Eo(e),"float32"))}}};var C1={kernelName:ji,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>D(r,e.shape)}}};var T1={kernelName:Yi,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[o]=t,n={dy:r,images:o};return{images:()=>k.runKernel(ju,n,e)}}};var I1={kernelName:Xi,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[o]=t,n={dy:r,images:o};return{images:()=>k.runKernel(qu,n,e)}}};var S1={kernelName:Zi,gradFunc:(r,t,e)=>{let{dims:o}=e,n=ze(o,r.shape);return{x:()=>Be(r,n)}}};var v1={kernelName:ks,gradFunc:r=>({x:()=>dt(r)})};var N1={kernelName:Es,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>_t(ot(r,A(kr(e,1.5),2)))}}};var k1={kernelName:Ji,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>X(dt(e),"float32"),t:()=>A(r,X(e,r.dtype)),e:()=>A(r,X(ya(e),r.dtype))}}};var E1={kernelName:$s,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let o=ge(e,nt(0)),n=nt(o0),s=nt(n0),i=A(r,s),a=A(A(r,n),Fe(X(e,"float32")));return ue(o,i,a)}}}};var $1={kernelName:Fs,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(r,A(e,tt(nt(1),e)))}}};var A1={kernelName:Rs,gradFunc:r=>({x:()=>dt(r)})};var D1={kernelName:As,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(ha(X(e,"float32")),r)}}};var R1={kernelName:Ds,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(kc(X(e,"float32")),r)}}};var F1={kernelName:Qi,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{begin:n,size:s}=e,i=o.shape,[a,l]=r0(o,n,s),u=[];for(let c=0;c<r.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>$r(r,u)}}};var _1={kernelName:oa,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[o]=t,{dim:n}=e,s=!0,i=A(r,o);return{logits:()=>tt(i,A(st(i,[n],s),o))}}};var O1={kernelName:_s,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(r,yr(e))}}};var u0={kernelName:ea,gradFunc:(r,t,e)=>{let{blockShape:o,paddings:n}=e;return{x:()=>fa(r,o,n)}}};var c0={kernelName:ra,gradFunc:(r,t,e)=>{let{axis:o}=e;return{x:()=>Bt(r,o)}}};var L1={kernelName:Os,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,A(ee(X(e,"float32")),2))}}};var P1={kernelName:rc,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(r,A(X(e,"float32"),2))}}};var z1={kernelName:Ls,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=nt(2);return{a:()=>A(r,A(n,tt(e,o))),b:()=>A(r,A(n,tt(o,e)))}}};var M1={kernelName:Bs,gradFunc:r=>({x:()=>dt(r)})};var B1={kernelName:Ps,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,o]=t,n=vt(e.shape,o.shape);return{a:()=>{let a=r,l=jt(e.shape,n);return l.length>0&&(a=st(a,l)),D(a,e.shape)},b:()=>{let a=r,l=jt(o.shape,n);return l.length>0&&(a=st(a,l)),D(_t(a),o.shape)}}}};var V1={kernelName:ta,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,n=o.shape.slice(),{axis:s}=e;ze(s,o.shape).forEach(u=>{n[u]=1});let a=D(r,n),l=A(a,Me(o.shape,"float32"));return{x:()=>l}}};var G1={kernelName:zs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ot(r,Et(ha(e)))}}};var W1={kernelName:Ms,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>A(tt(nt(1),Et(e)),r)}}};var U1={kernelName:dn,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[o]=t,{reps:n}=e;return{x:()=>{let i=dt(o);if(o.rank===1)for(let a=0;a<n[0];++a)i=U(i,It(r,[a*o.shape[0]],[o.shape[0]]));else if(o.rank===2)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)i=U(i,It(r,[a*o.shape[0],l*o.shape[1]],[o.shape[0],o.shape[1]]));else if(o.rank===3)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let u=0;u<n[2];++u)i=U(i,It(r,[a*o.shape[0],l*o.shape[1],u*o.shape[2]],[o.shape[0],o.shape[1],o.shape[2]]));else if(o.rank===4)for(let a=0;a<n[0];++a)for(let l=0;l<n[1];++l)for(let u=0;u<n[2];++u)for(let c=0;c<n[3];++c)i=U(i,It(r,[a*o.shape[0],l*o.shape[1],u*o.shape[2],c*o.shape[3]],[o.shape[0],o.shape[1],o.shape[2],o.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${o.rank} tensors yet.`);return i}}}};var H1={kernelName:gn,gradFunc:(r,t,e)=>{let o=e,{perm:n}=o,s=ym(n);return{x:()=>kt(r,s)}}};var K1={kernelName:na,gradFunc:(r,t,e)=>{let o=e,{axis:n}=o;return{value:()=>Ie(r,n)}}};var q1={kernelName:sa,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>dW(r,e)}}};function dW(r,t){let e=Ur(t,dt(t)),o=$n(r,e),n=Er(t,nt(0,"int32")),s=o.rank-n.rank;for(let a=0;a<s;++a)n=Ne(n,a+1);n=pr(n,Me(o.shape,"bool"));let i=dt(o);return ue(n,o,i)}var j1={kernelName:ia,gradFunc:r=>({x:()=>dt(r)})};var gW=[ag,Qv,tN,eN,rN,oN,nN,sN,iN,aN,lN,uN,pN,fN,hN,dN,gN,xN,yN,bN,wN,CN,IN,TN,vN,NN,kN,EN,$N,AN,x1,DN,RN,FN,_N,ON,PN,LN,zN,VN,GN,WN,UN,HN,KN,qN,jN,XN,YN,JN,a0,a0,QN,e1,o1,n1,s1,i1,a1,l1,u1,c1,p1,m1,f1,l0,l0,h1,d1,g1,y1,b1,w1,C1,T1,I1,S1,v1,N1,k1,E1,$1,A1,D1,R1,F1,_1,O1,u0,u0,c0,c0,L1,z1,P1,M1,B1,V1,G1,W1,U1,H1,K1,q1,j1];for(let r of gW)XT(r);_().prototype.abs=function(){return this.throwIfDisposed(),ie(this)};_().prototype.acos=function(){return this.throwIfDisposed(),Kh(this)};_().prototype.acosh=function(){return this.throwIfDisposed(),qh(this)};_().prototype.add=function(r){return this.throwIfDisposed(),U(this,r)};_().prototype.all=function(r,t){return this.throwIfDisposed(),Tc(this,r,t)};_().prototype.any=function(r,t){return this.throwIfDisposed(),ml(this,r,t)};_().prototype.argMax=function(r){return this.throwIfDisposed(),Cn(this,r)};_().prototype.argMin=function(r){return this.throwIfDisposed(),jh(this,r)};_().prototype.asScalar=function(){return this.throwIfDisposed(),E(this.size===1,()=>"The array must have only 1 element."),D(this,[])};_().prototype.asType=function(r){return this.throwIfDisposed(),X(this,r)};_().prototype.as1D=function(){return this.throwIfDisposed(),D(this,[this.size])};_().prototype.as2D=function(r,t){return this.throwIfDisposed(),D(this,[r,t])};_().prototype.as3D=function(r,t,e){return this.throwIfDisposed(),D(this,[r,t,e])};_().prototype.as4D=function(r,t,e,o){return this.throwIfDisposed(),D(this,[r,t,e,o])};_().prototype.as5D=function(r,t,e,o,n){return this.throwIfDisposed(),D(this,[r,t,e,o,n])};_().prototype.asin=function(){return this.throwIfDisposed(),Xh(this)};_().prototype.asinh=function(){return this.throwIfDisposed(),Yh(this)};_().prototype.atan=function(){return this.throwIfDisposed(),Zh(this)};_().prototype.atan2=function(r){return this.throwIfDisposed(),Jh(this,r)};_().prototype.atanh=function(){return this.throwIfDisposed(),Qh(this)};_().prototype.avgPool=function(r,t,e,o){return this.throwIfDisposed(),ma(this,r,t,e,o)};_().prototype.batchToSpaceND=function(r,t){return this.throwIfDisposed(),fa(this,r,t)};_().prototype.batchNorm=function(r,t,e,o,n){return this.throwIfDisposed(),Sn(this,r,t,e,o,n)};_().prototype.broadcastTo=function(r){return this.throwIfDisposed(),vn(this,r)};_().prototype.cast=function(r){return this.throwIfDisposed(),X(this,r)};_().prototype.ceil=function(){return this.throwIfDisposed(),sd(this)};_().prototype.clipByValue=function(r,t){return this.throwIfDisposed(),je(this,r,t)};_().prototype.concat=function(r,t){return this.throwIfDisposed(),r instanceof $t&&(r=[r]),Bt([this,...r],t)};_().prototype.conv1d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Sc(this,r,t,e,o,n,s)};_().prototype.conv2dTranspose=function(r,t,e,o,n){return this.throwIfDisposed(),Nc(this,r,t,e,o,n)};_().prototype.conv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Gr(this,r,t,e,o,n,s)};_().prototype.cos=function(){return this.throwIfDisposed(),ha(this)};_().prototype.cosh=function(){return this.throwIfDisposed(),kc(this)};_().prototype.cumprod=function(r,t,e){return this.throwIfDisposed(),hl(this,r,t,e)};_().prototype.cumsum=function(r,t,e){return this.throwIfDisposed(),Ec(this,r,t,e)};_().prototype.depthToSpace=function(r,t){return this.throwIfDisposed(),fd(this,r,t)};_().prototype.depthwiseConv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Nn(this,r,t,e,o,n,s)};_().prototype.dilation2d=function(r,t,e,o,n){return this.throwIfDisposed(),hd(this,r,t,e,o,n)};_().prototype.divNoNan=function(r){return this.throwIfDisposed(),dd(this,r)};_().prototype.div=function(r){return this.throwIfDisposed(),ot(this,r)};_().prototype.dot=function(r){return this.throwIfDisposed(),gd(this,r)};_().prototype.elu=function(){return this.throwIfDisposed(),kn(this)};_().prototype.equal=function(r){return this.throwIfDisposed(),br(this,r)};_().prototype.erf=function(){return this.throwIfDisposed(),xd(this)};_().prototype.euclideanNorm=function(r,t){return this.throwIfDisposed(),yd(this,r,t)};_().prototype.exp=function(){return this.throwIfDisposed(),Fe(this)};_().prototype.expandDims=function(r){return this.throwIfDisposed(),Ne(this,r)};_().prototype.expm1=function(){return this.throwIfDisposed(),bd(this)};_().prototype.fft=function(){return this.throwIfDisposed(),Ia(this)};_().prototype.flatten=function(){return this.throwIfDisposed(),D(this,[this.size])};_().prototype.floor=function(){return this.throwIfDisposed(),En(this)};_().prototype.floorDiv=function(r){return this.throwIfDisposed(),Cc(this,r)};_().prototype.gather=function(r,t){return this.throwIfDisposed(),$n(this,r,t)};_().prototype.greaterEqual=function(r){return this.throwIfDisposed(),Er(this,r)};_().prototype.greater=function(r){return this.throwIfDisposed(),ge(this,r)};_().prototype.ifft=function(){return this.throwIfDisposed(),Ks(this)};_().prototype.irfft=function(){return this.throwIfDisposed(),Gc(this)};_().prototype.isFinite=function(){return this.throwIfDisposed(),wd(this)};_().prototype.isInf=function(){return this.throwIfDisposed(),Cd(this)};_().prototype.isNaN=function(){return this.throwIfDisposed(),Td(this)};_().prototype.leakyRelu=function(r){return this.throwIfDisposed(),ga(this,r)};_().prototype.lessEqual=function(r){return this.throwIfDisposed(),ro(this,r)};_().prototype.less=function(r){return this.throwIfDisposed(),$c(this,r)};_().prototype.localResponseNormalization=function(r,t,e,o){return this.throwIfDisposed(),Id(this,r,t,e,o)};_().prototype.logSigmoid=function(){return this.throwIfDisposed(),Sd(this)};_().prototype.logSoftmax=function(r){return this.throwIfDisposed(),Ac(this,r)};_().prototype.logSumExp=function(r,t){return this.throwIfDisposed(),Dc(this,r,t)};_().prototype.log=function(){return this.throwIfDisposed(),Ye(this)};_().prototype.log1p=function(){return this.throwIfDisposed(),xa(this)};_().prototype.logicalAnd=function(r){return this.throwIfDisposed(),pr(this,r)};_().prototype.logicalNot=function(){return this.throwIfDisposed(),ya(this)};_().prototype.logicalOr=function(r){return this.throwIfDisposed(),Rc(this,r)};_().prototype.logicalXor=function(r){return this.throwIfDisposed(),vd(this,r)};_().prototype.matMul=function(r,t,e){return this.throwIfDisposed(),At(this,r,t,e)};_().prototype.maxPool=function(r,t,e,o){return this.throwIfDisposed(),ba(this,r,t,e,o)};_().prototype.max=function(r,t){return this.throwIfDisposed(),Xe(this,r,t)};_().prototype.maximum=function(r){return this.throwIfDisposed(),Ur(this,r)};_().prototype.mean=function(r,t){return this.throwIfDisposed(),re(this,r,t)};_().prototype.min=function(r,t){return this.throwIfDisposed(),Ws(this,r,t)};_().prototype.minimum=function(r){return this.throwIfDisposed(),An(this,r)};_().prototype.mirrorPad=function(r,t){return this.throwIfDisposed(),Ed(this,r,t)};_().prototype.mod=function(r){return this.throwIfDisposed(),$d(this,r)};_().prototype.mul=function(r){return this.throwIfDisposed(),A(this,r)};_().prototype.neg=function(){return this.throwIfDisposed(),_t(this)};_().prototype.norm=function(r,t,e){return this.throwIfDisposed(),Us(this,r,t,e)};_().prototype.notEqual=function(r){return this.throwIfDisposed(),Zo(this,r)};_().prototype.oneHot=function(r,t=1,e=0){return this.throwIfDisposed(),xl(this,r,t,e)};_().prototype.onesLike=function(){return this.throwIfDisposed(),He(this)};_().prototype.pad=function(r,t){return this.throwIfDisposed(),$r(this,r,t)};_().prototype.pool=function(r,t,e,o,n,s){return this.throwIfDisposed(),Ad(this,r,t,e,o,n,s)};_().prototype.pow=function(r){return this.throwIfDisposed(),kr(this,r)};_().prototype.prelu=function(r){return this.throwIfDisposed(),Ca(this,r)};_().prototype.prod=function(r,t){return this.throwIfDisposed(),Dd(this,r,t)};_().prototype.reciprocal=function(){return this.throwIfDisposed(),Ld(this)};_().prototype.relu=function(){return this.throwIfDisposed(),sr(this)};_().prototype.relu6=function(){return this.throwIfDisposed(),Fc(this)};_().prototype.reshapeAs=function(r){return this.throwIfDisposed(),D(this,r.shape)};_().prototype.reshape=function(r){return this.throwIfDisposed(),D(this,r)};_().prototype.resizeBilinear=function(r,t,e){return this.throwIfDisposed(),Qd(this,r,t,e)};_().prototype.resizeNearestNeighbor=function(r,t,e){return this.throwIfDisposed(),tg(this,r,t,e)};_().prototype.reverse=function(r){return this.throwIfDisposed(),Be(this,r)};_().prototype.rfft=function(){return this.throwIfDisposed(),Sa(this)};_().prototype.round=function(){return this.throwIfDisposed(),_c(this)};_().prototype.rsqrt=function(){return this.throwIfDisposed(),Oc(this)};_().prototype.selu=function(){return this.throwIfDisposed(),Lc(this)};_().prototype.separableConv2d=function(r,t,e,o,n,s){return this.throwIfDisposed(),Pc(this,r,t,e,o,n,s)};_().prototype.sigmoid=function(){return this.throwIfDisposed(),yr(this)};_().prototype.sign=function(){return this.throwIfDisposed(),Pd(this)};_().prototype.sin=function(){return this.throwIfDisposed(),zc(this)};_().prototype.sinh=function(){return this.throwIfDisposed(),Mc(this)};_().prototype.slice=function(r,t){return this.throwIfDisposed(),It(this,r,t)};_().prototype.softmax=function(r){return this.throwIfDisposed(),Ta(this,r)};_().prototype.softplus=function(){return this.throwIfDisposed(),Yo(this)};_().prototype.spaceToBatchND=function(r,t){return this.throwIfDisposed(),wa(this,r,t)};_().prototype.split=function(r,t){return this.throwIfDisposed(),Ve(this,r,t)};_().prototype.sqrt=function(){return this.throwIfDisposed(),ee(this)};_().prototype.square=function(){return this.throwIfDisposed(),Et(this)};_().prototype.squaredDifference=function(r){return this.throwIfDisposed(),Wc(this,r)};_().prototype.squeeze=function(r){return this.throwIfDisposed(),oo(this,r)};_().prototype.stack=function(r,t){this.throwIfDisposed();let e=r instanceof $t?[this,r]:[this,...r];return Ie(e,t)};_().prototype.step=function(r){return this.throwIfDisposed(),Eo(this,r)};_().prototype.stridedSlice=function(r,t,e,o,n,s,i,a){return this.throwIfDisposed(),zd(this,r,t,e,o,n,s,i,a)};_().prototype.sub=function(r){return this.throwIfDisposed(),tt(this,r)};_().prototype.sum=function(r,t){return this.throwIfDisposed(),st(this,r,t)};_().prototype.tan=function(){return this.throwIfDisposed(),Md(this)};_().prototype.tanh=function(){return this.throwIfDisposed(),In(this)};_().prototype.tile=function(r){return this.throwIfDisposed(),nr(this,r)};_().prototype.toBool=function(){return this.throwIfDisposed(),X(this,"bool")};_().prototype.toFloat=function(){return this.throwIfDisposed(),X(this,"float32")};_().prototype.toInt=function(){return this.throwIfDisposed(),X(this,"int32")};_().prototype.topk=function(r,t){return this.throwIfDisposed(),Vd(this,r,t)};_().prototype.transpose=function(r){return this.throwIfDisposed(),kt(this,r)};_().prototype.unique=function(r){return this.throwIfDisposed(),Gd(this,r)};_().prototype.unsortedSegmentSum=function(r,t){return this.throwIfDisposed(),Hc(this,r,t)};_().prototype.unstack=function(r){return this.throwIfDisposed(),Ge(this,r)};_().prototype.where=function(r,t){return this.throwIfDisposed(),ue(r,this,t)};_().prototype.zerosLike=function(){return this.throwIfDisposed(),dt(this)};var Kr=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kr.prototype)}},dr=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,dr.prototype)}},L=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,L.prototype)}},gt=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,gt.prototype)}},tp=class extends Error{constructor(t){super(t),Object.setPrototypeOf(this,tp.prototype)}};var km=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let o=this.cache.keys().next().value;this.cache.delete(o)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let o=this.cache.keys().next().value;this.cache.delete(o)}this.maxEntries=t}};function Do(r,t){if(Array.isArray(r)){let e=[];for(let o=0;o<t;o++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function go(r,t){if(!r)throw new tp(t)}function m0(r,t){let e=0;for(let o of r)o===t&&e++;return e}function Je(r){return r.length===1?r[0]:r}function Xt(r){return Array.isArray(r)?r:[r]}function Ro(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Xs(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var Ao={};function ep(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function p0(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>p0(t));else{let t=Object.keys(r);for(let e of t){let o=r[e];o!=null&&typeof o=="object"&&(!Array.isArray(o)&&o.type==="ndarray"&&typeof o.value=="number"?r[e]=o.value:p0(o))}}}function On(r,t={},e={},o="object",n=!1){if(typeof r=="string"){let s=r,i;if(s in e)i=e[s];else if(s in Ao)i=Ao[s];else if(i=t[s],i==null)throw new L(`Unknown ${o}: ${r}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new L(`${o}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,l;if(i in e?[a,l]=e[i]:i in Ao?[a,l]=Ao.className:i in t&&([a,l]=t[i]),a==null)throw new L(`Unknown ${o}: ${i}. This may be due to one of the following reasons:
1. The ${o} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${o} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let f of Object.keys(Ao))u[f]=Ao[f];for(let f of Object.keys(e))u[f]=e[f];let c=s.config;c.customObjects=u;let p=Object.assign({},Ao);for(let f of Object.keys(e))Ao[f]=e[f];p0(s.config);let m=l(a,s.config,e,n);return Ao=Object.assign({},p),m}else{let u=Object.assign({},Ao);for(let p of Object.keys(e))Ao[p]=e[p];let c=new a(s.config);return Ao=Object.assign({},u),c}}}function xW(r,t){return r<t?-1:r>t?1:0}function Em(r,t){return-1*xW(r,t)}function Fo(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function X1(r){if(r==null)throw new L(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function Ln(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new L(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function ug(r,t,e=0,o=1/0){return go(e>=0),go(o>=e),Array.isArray(r)&&r.length>=e&&r.length<=o&&r.every(n=>typeof n===t)}function $e(r,t){Array.isArray(r)?(y.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,o)=>$e(e,`element ${o+1} of ${t}`))):y.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${Y1(r)}.`)}function Y1(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>Y1(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function Z1(r,t,e){let o=e!=null?e():y.now(),n;return(...i)=>{let a=e!=null?e():y.now();return a-o<t||(o=a,n=r(...i)),n}}function cg(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var yW=0;function mg(){return yW++}var pg={};function ka(r=""){return r in pg||(pg[r]=0),pg[r]+=1,r+pg[r].toString()}var J1=["channelsFirst","channelsLast"],Q1=["nearest","bilinear"],tk=["valid","same","causal"],ek=["max","avg"],rk=["sum","mul","concat","ave"];var rp=new Map;function ce(r){Ln(J1,"DataFormat",r)}function nk(r){Ln(Q1,"InterpolationFormat",r)}function Ar(r){Ln(tk,"PaddingMode",r)}function f0(r){Ln(ek,"PoolMode",r)}var $m=[],ok="/";function tn(r,t){$m.push(r);try{let e=t();return $m.pop(),e}catch(e){throw $m.pop(),e}}function bW(){return $m.length===0?"":$m.join(ok)+ok}function fg(r){if(!sk(r))throw new Error("Not a valid tensor name: '"+r+"'");return bW()+r}function hg(r){if(!sk(r))throw new Error("Not a valid tensor name: '"+r+"'");rp.has(r)||rp.set(r,0);let t=rp.get(r);if(rp.set(r,rp.get(r)+1),t>0){let e=`${r}_${t}`;return rp.set(e,1),e}else return r}var wW=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function sk(r){return!!r.match(wW)}function ik(r){return r===parseInt(r.toString(),10)}function _o(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let o=1;for(let n=t;n<e;++n)o*=r[n];return o}function El(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let o=r[e];o<t&&(t=o)}return t}function en(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let o=r[e];o>t&&(t=o)}return t}function Dr(r,t){if(t<r)throw new L(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let o=r;o<t;++o)e.push(o);return e}var h0;function Pe(){return h0==null&&(h0=HI().epsilon()),h0}function Rr(){return"channelsLast"}function wr(r,t){return X(r,t)}function Zs(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),D(r,e)}function ak(r,t){return M(()=>{if(r.shape.length!==2)throw new L(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=Zs(r,1);return gg(e,[1,t,1])})}function lk(r){let t=[_o(r.shape)];return D(r,t)}function uk(r){if(r.rank<=1)throw new L(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],_o(r.shape,1)];return D(r,t)}function Ys(r,t,e){return M(()=>{switch(r.rank){case 1:return Bc(r,t,e);case 2:return Cm(r,[t,0],[e,r.shape[1]]);case 3:return Vc(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return Cl(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return It(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return It(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new L(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function d0(r,t,e){return M(()=>{switch(r.rank){case 1:return Bc(r,t,e);case 2:return Cm(r,[0,t],[r.shape[0],e]);case 3:return Vc(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return Cl(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function Am(r,t,e,o){return M(()=>{switch(r.rank){case 1:return Bc(r,t,e);case 2:switch(o){case 1:return Ys(r,t,e);case 2:return d0(r,t,e);default:throw new L(`The axis is not within the rank of the tensor ${o}`)}case 3:switch(o){case 1:return Ys(r,t,e);case 2:return Vc(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return d0(r,t,e);default:throw new L(`The axis is not within the rank of the tensor ${o}`)}case 4:switch(o){case 1:return Ys(r,t,e);case 2:return Cl(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return Cl(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return d0(r,t,e);default:throw new L(`The axis is not within the rank of the tensor ${o}`)}default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function op(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),Bt(r,t)}function x0(r,t){switch(r.rank){case 1:return id([r,t]);case 2:return ad([r,t],0);case 3:return ld([r,t],0);case 4:return ud([r,t],0);default:throw new L(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function gg(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new L(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return nr(r,t)}function np(r,t=0,e=1,o,n){return wl(r,t,e,o,n)}function Oo(r,t,e,o){if(r.rank<2||t.rank<2)throw new gt(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let n=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new gt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return va.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:o?g0(r.rank,o,Rr()):null,activation:e});{let n=r.shape.slice(),s=n.pop();r=D(r,[-1,s]);let i=t.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:t.rank},(h,d)=>d===0?t.rank-2:d<=t.rank-2?d-1:d);t=D(kt(t,c),[l,-1]);let p=[...n,...u],m=!1,f=!1;return D(va.matMul({a:r,b:t,transposeA:m,transposeB:f,bias:o?g0(r.rank,o,Rr()):null,activation:e}),p)}}function xg(r,t,e){return M(()=>(Array.isArray(t)?t=ke(t,"int32"):t=X(t,"int32"),$n(r,t,e)))}function $l(r){return A(r,r)}function g0(r,t,e){let o=t.shape;if(t.rank!==1&&t.rank!==r)throw new L(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return o.length===1?D(t,[1,o[0],1,1,1]):D(t,[1,o[3],o[0],o[1],o[2]]);if(e==="channelsLast")return o.length===1?D(t,[1,1,1,1,o[0]]):D(t,[1].concat(o))}else if(r===4){if(e==="channelsFirst")return o.length===1?D(t,[1,o[0],1,1]):D(t,[1,o[2],o[0],o[1]]);if(e==="channelsLast")return o.length===1?D(t,[1,1,1,o[0]]):D(t,[1].concat(o))}else if(r===3){if(e==="channelsFirst")return o.length===1?D(t,[1,o[0],1]):D(t,[1,o[1],o[0]]);if(e==="channelsLast")return o.length===1?D(t,[1,1,o[0]]):D(t,[1].concat(o))}else if(r<3)return t;throw new L(`Unsupported input rank by biasAdd: ${t.rank}`)}function Fr(r,t,e){return M(()=>(e==null&&(e=Rr()),ce(e),U(r,g0(r.rank,t,e))))}function ck(r,t=1){if(t!==1)throw new gt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return kn(r)}function pk(r){return M(()=>ot(r,U(ie(r),1)))}function yg(r,t,e,o){return M(()=>Uw(r,t,e,o))}function mk(r){return M(()=>{let t=U(.5,A(.2,r));return je(t,0,1)})}function Ea(r,t,e=!1){return e?r():t()}var fk=["fanIn","fanOut","fanAvg"],hk=["normal","uniform","truncatedNormal"];function CW(r){Ln(fk,"FanMode",r)}function TW(r){Ln(hk,"Distribution",r)}var _r=class extends K.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Dm=class extends _r{apply(t,e){return oe(t,e)}};Dm.className="Zeros";K.registerClass(Dm);var Al=class extends _r{apply(t,e){return Me(t,e)}};Al.className="Ones";K.registerClass(Al);var Rm=class extends _r{constructor(t){if(super(),typeof t!="object")throw new L(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new L(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return M(()=>A(nt(this.value),Me(t,e)))}getConfig(){return{value:this.value}}};Rm.className="Constant";K.registerClass(Rm);var Fm=class extends _r{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Dn(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Fm.className="RandomUniform";K.registerClass(Fm);var _m=class extends _r{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new gt(`randomNormal does not support dType ${e}.`);return np(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};_m.className="RandomNormal";K.registerClass(_m);var Om=class extends _r{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new gt(`truncatedNormal does not support dType ${e}.`);return Uc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Om.className="TruncatedNormal";K.registerClass(Om);var Lm=class extends _r{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return M(()=>{if(t.length!==2||t[0]!==t[1])throw new L("Identity matrix initializer can only be used for 2D square matrices.");return A(this.gain,dl(t[0]))})}getConfig(){return{gain:this.gain}}};Lm.className="Identity";K.registerClass(Lm);function IW(r,t="channelsLast"){let e,o;if(ce(t),r.length===2)e=r[0],o=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let n=_o(r,2);e=r[1]*n,o=r[0]*n}else if(t==="channelsLast"){let n=_o(r,0,r.length-2);e=r[r.length-2]*n,o=r[r.length-1]*n}}else{let n=_o(r);e=Math.sqrt(n),o=Math.sqrt(n)}return[e,o]}var Cr=class extends _r{constructor(t){if(super(),t.scale<0)throw new L(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,CW(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,TW(this.distribution),this.seed=t.seed}apply(t,e){let o=IW(t),n=o[0],s=o[1],i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,n):this.mode==="fanOut"?i/=Math.max(1,s):i/=Math.max(1,(n+s)/2),this.distribution==="normal"){let a=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new gt(`${this.getClassName()} does not support dType ${e}.`);return Uc(t,0,a,e,this.seed)}else{let a=Math.sqrt(3*i);return Dn(t,-a,a,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Cr.className="VarianceScaling";K.registerClass(Cr);var sp=class extends Cr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Cr.className}};sp.className="GlorotUniform";K.registerClass(sp);var ip=class extends Cr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Cr.className}};ip.className="GlorotNormal";K.registerClass(ip);var ap=class extends Cr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Cr.className}};ap.className="HeNormal";K.registerClass(ap);var lp=class extends Cr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Cr.className}};lp.className="HeUniform";K.registerClass(lp);var up=class extends Cr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Cr.className}};up.className="LeCunNormal";K.registerClass(up);var cp=class extends Cr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Cr.className}};cp.className="LeCunUniform";K.registerClass(cp);var Pm=class extends _r{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new gt("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return M(()=>{if(t.length<2)throw new gt("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);let o=t[0]>t[1]?[t[1],t[0]]:t,n=np(o,0,1,"float32"),s=qw.gramSchmidt(n);return t[0]>t[1]&&(s=kt(s)),A(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}};Pm.className="Orthogonal";K.registerClass(Pm);var dk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gk(r,t={}){return On(r,K.SerializationMap.getMap().classNameMap,t,"initializer")}function ne(r){return ep(r)}function qt(r){if(typeof r=="string"){let t=r in dk?dk[r]:r;if(t==="GlorotNormal")return new ip;if(t==="GlorotUniform")return new sp;if(t==="HeNormal")return new ap;if(t==="HeUniform")return new lp;if(t==="LeCunNormal")return new up;if(t==="LeCunUniform")return new cp;{let e={};return e.className=t,e.config={},gk(e)}}else return r instanceof _r?r:gk(r)}function bg(r){return Array.isArray(r)&&Array.isArray(r[0])}function pp(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function xt(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new L(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function Dt(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new L(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function mp(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((o,n)=>o*n);return t}var yk="Variable",zm=class{constructor(t,e="float32",o=yk,n=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=mg(),o=o??yk,this.originalName=fg(o),this.name=hg(this.originalName),this.trainable_=n,this.constraint=s,this.val=Wd(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),vW(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function vW(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function Mm(r){return r.map(t=>t.read())}function fp(r){r.forEach(t=>{t[0].write(t[1])})}var Yt=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},Tr=class{constructor(t,e,o,n,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=o,this.inputs=n,this.callArgs=s,this.outputTensorIndex=a,this.id=mg(),i!=null&&(this.originalName=fg(i),this.name=hg(this.originalName)),this.rank=e.length}},NW=0,Js=class{constructor(t,e){this.callArgs=e,this.id=NW++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let o of t.inboundLayers)o?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},kW=0,Ct=class extends K.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=kW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){let o=this.getClassName();e=Ro(o)+"_"+ka(o)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let o;if(t.batchInputShape!=null)o=t.batchInputShape;else if(t.inputShape!=null){let s=null;t.batchSize!=null&&(s=t.batchSize),o=[s].concat(t.inputShape)}this.batchInputShape=o;let n=t.dtype;n==null&&(n=t.inputDType),n==null&&(n="float32"),this.dtype=n}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new dr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new L(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Je(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Je(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Kr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Kr(`Layer ${this.name} is not connected, no input to return.`);return Je(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Kr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Kr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Je(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Xt(t),this.inputSpec==null||this.inputSpec.length===0)return;let e=Xt(this.inputSpec);if(t.length!==e.length)throw new L(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let o=0;o<t.length;o++){let n=t[o],s=e[o];if(s==null)continue;let i=n.rank;if(s.ndim!=null&&i!==s.ndim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(s.maxNDim!=null&&i>s.maxNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(s.minNDim!=null&&i<s.minNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(s.dtype!=null&&n.dtype!==s.dtype)throw new L(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${n.dtype}.`);if(s.axes){let a=n.shape;for(let l in s.axes){let u=Number(l),c=s.axes[l],p=u>=0?a[u]:a[a.length+u];if(c!=null&&[c,null].indexOf(p)===-1)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${c} but got shape ${a}.`)}}if(s.shape!=null)for(let a=0;a<s.shape.length;++a){let l=s.shape[a],u=n.shape[a];if(l!=null&&u!=null&&l!==u)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${n.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();let o=Xt(t),n=!0;for(let i of o)if(!(i instanceof Tr)){n=!1;break}let s=!0;for(let i of o)if(i instanceof Tr){s=!1;break}if(n===s)throw new L("Arguments to apply() must be all SymbolicTensors or all Tensors");return tn(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);let i=[];for(let a of Xt(t))i.push(a.shape);this.build(Je(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let i=this.call(t,e),a=Xt(i),l=[];for(let u of a)o.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=Je(l),this.activityRegularizer!=null)throw new gt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=EW(t),a=this.computeOutputShape(i),l,u=$W(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,p)=>new Tr(u,c,this,Xt(t),e,this.name,p)):l=new Tr(u,a,this,Xt(t),e,this.name),this.addInboundNode(t,l,null,null,i,a,e),this._refCount++,this.activityRegularizer!=null)throw new gt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((o,n)=>{o!=null&&t[n]!=null&&t[n]!==o&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Kr(`The layer ${this.name} has never been called and thus has no defined output shape.`);let t=[];for(let e of this.inboundNodes){let o=JSON.stringify(e.outputShapes);t.indexOf(o)===-1&&t.push(o)}if(t.length===1){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Kr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new dr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return mp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Mm(t?this.trainableWeights:this.weights)}setWeights(t){M(()=>{let e=this.weights;if(e.length!==t.length)throw new L(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;let o=[],n=Mm(e);for(let s=0;s<n.length;++s){let i=n[s],a=e[s],l=t[s];if(!y.arraysEqual(i.shape,l.shape))throw new L(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);o.push([a,l])}fp(o)})}addWeight(t,e,o,n,s,i,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new L(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),o==null&&(o="float32"),this.fastWeightInitDuringBuild&&(n=l!=null?l():qt("zeros"));let u=n.apply(e,o),c=new zm(u,o,t,i,a);return u.dispose(),s!=null&&this.addLoss(()=>s.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Xt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(o=>{if(o!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}addInboundNode(t,e,o,n,s,i,a=null){let l=Xt(t);e=Xt(e),o=Xt(o),n=Xt(n),s=pp(s),i=pp(i);let u=[],c=[],p=[];for(let m of l)u.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new Js({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:p,inputTensors:l,outputTensors:e,inputMasks:o,outputMasks:n,inputShapes:s,outputShapes:i},a);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){let t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}};function EW(r){r=Xt(r);let t=[];for(let e of r)t.push(e.shape);return Je(t)}function $W(r){return"float32"}function y0(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let o=t.inboundNodes[e];if(o.inboundLayers.length===0)return o.inputTensors;{let n=[];for(let s=0;s<o.inboundLayers.length;s++){let i=o.inputTensors[s],a=o.inboundLayers[s],l=o.nodeIndices[s],u=y0(i,a,l);for(let c of u)n.indexOf(c)===-1&&n.push(c)}return n}}}var Pn=class extends Ct{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:ka("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new L("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new L("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new L("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=t.dtype||"float32";this.batchInputShape=e,this.dtype=o,this.inputSpec=[{shape:e}];let n=new Tr(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new Js({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new L(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};Pn.className="InputLayer";K.registerClass(Pn);function b0(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new L("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new Pn({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function AW(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return X(t,r.dtype)}catch{throw new L(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var Lo=class{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Lo)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,o){if(this.id2Value[t.id]==null)this.id2Value[t.id]=AW(t,e),this.name2Id[t.name]=t.id,o!=null&&(this.id2Mask[t.id]=o);else throw new L(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Tr){if(this.id2Value[t.id]==null)throw new L(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new L(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Tr){if(this.id2Value[t.id]==null)throw new L(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new L(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&yt(this.id2Mask)}},wg=new km,Cg=new km;function wk(r){wg?.setMaxEntries(r),Cg?.setMaxEntries(r)}function Dl(r,t,e,o){let n=e==null?!1:e.training,s=Array.isArray(r),i=s?r:[r],a=i.map(h=>h.name),l=[],u=t.names();for(let h of a)u.indexOf(h)!==-1?l.push(t.getValue(h)):l.push(null);o!=null&&(o.maxNumTensors=-1/0,o.minNumTensors=1/0);let c=a.join(",")+"|"+t.names().sort().join(","),p=wg.get(c),m;if(p==null){let h=DW(i,t);p=h.sorted,m=h.recipientCounts,wg.put(c,p),Cg.put(c,m)}m={},n||Object.assign(m,Cg.get(c));let f=new Lo(t);for(let h=0;h<p.length;++h){if(o!=null){let O=hm().numTensors;O>o.maxNumTensors&&(o.maxNumTensors=O),O<o.minNumTensors&&(o.minNumTensors=O)}let d=p[h],g=d.sourceLayer;if(g instanceof Pn)continue;let x=[],b=[],w=[],C=!1;for(let O of d.inputs){let P=f.getValue(O),B=f.getMask(O);x.push(P),b.push(B),B!=null&&(C=!0),n||(m[O.name]--,m[O.name]===0&&!t.hasKey(O)&&a.indexOf(O.name)===-1&&!P.isDisposed&&O.sourceLayer.stateful!==!0&&w.push(P))}C&&(e=e||{},e.mask=b[0]);let v=Xt(g.apply(x,e)),$=null;g.supportsMasking&&($=g.computeMask(x,b));let R=FW(d),F=Array.isArray(R)?R:[R];for(let O=0;O<F.length;++O){f.hasKey(F[O])||f.add(F[O],v[O],Array.isArray($)?$[0]:$);let P=a.indexOf(F[O].name);P!==-1&&(l[P]=v[O])}n||yt(w)}return f.disposeMasks(),s?l:l[0]}function DW(r,t){y.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],o={};if(r.length===1){let n=bk(r[0],t);e=n.sorted,o=n.recipientMap}else{let n=new Set;for(let s of r){let{sorted:i,recipientMap:a}=bk(s,t);for(let l of i)n.has(l.name)||(e.push(l),n.add(l.name));for(let l in a)o[l]==null&&(o[l]=new Set),a[l].forEach(u=>o[l].add(u))}}return{sorted:e,recipientCounts:RW(o)}}function RW(r){let t={};for(let e in r)t[e]=r[e].size;return t}function bk(r,t){let e=new Set,o=[],n={};for(let a of t.names())e.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(e.has(a.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(a.inputs.length===0||l)s.pop(),o.push(a),e.add(a.name),l&&i.pop();else{i.push(s.length-1);for(let u of a.inputs)n[u.name]==null&&(n[u.name]=new Set),n[u.name].add(a.name),!e.has(u.name)&&s.push(u)}}return{sorted:o,recipientMap:n}}function FW(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let o=0;o<r.sourceLayer.inboundNodes.length;++o)for(let n of r.sourceLayer.inboundNodes[o].outputTensors)if(n.id===r.id){e=o;break}t=r.sourceLayer.getOutputAt(e)}return t}var _W=z();_W.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,wk);function w0(r,t){return M(()=>ee(st(A(r,r),t,!0)))}var Rl=class extends K.Serializable{getConfig(){return{}}},Bm=class extends Rl{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return M(()=>{let e=w0(t,this.axis),o=je(e,0,this.maxValue);return A(t,ot(o,U(Pe(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Bm.className="MaxNorm";K.registerClass(Bm);var Vm=class extends Rl{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return M(()=>ot(t,U(Pe(),w0(t,this.axis))))}getConfig(){return{axis:this.axis}}};Vm.className="UnitNorm";K.registerClass(Vm);var Gm=class extends Rl{apply(t){return sr(t)}};Gm.className="NonNeg";K.registerClass(Gm);var Wm=class extends Rl{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return M(()=>{let e=w0(t,this.axis),o=U(A(this.rate,je(e,this.minValue,this.maxValue)),A(1-this.rate,e));return A(t,ot(o,U(Pe(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Wm.className="MinMaxNorm";K.registerClass(Wm);var Ck={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function xe(r){return ep(r)}function Tk(r,t={}){return On(r,K.SerializationMap.getMap().classNameMap,t,"constraint")}function ye(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in Ck?Ck[r]:r,config:{}};return Tk(e)}else return r instanceof Rl?r:Tk(r)}async function Qs(r){if(r==null)return;let t=[],e=[],o=[];for(let n in r){let s=r[n];if(typeof s!="number"){let i=s;t.push(i.data()),e.push(n),o.push(i)}}if(t.length>0){let n=await Promise.all(t);for(let s=0;s<n.length;++s)r[e[s]]=n[s][0];yt(o)}}function Tg(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var Ik;(function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"})(Ik||(Ik={}));var PW=125,$a=class{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}},Ig=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(let o of this.callbacks)await o.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(let o of this.callbacks)await o.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(let o of this.callbacks)await o.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(let o of this.callbacks)await o.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(let e of this.callbacks)await e.onTrainEnd(t)}},C0=class extends $a{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});let o=e.size==null?0:e.size;this.seen+=o;for(let n in e){let s=e[n];if(typeof s=="number")this.totals.hasOwnProperty(n)||(this.totals[n]=0),this.totals[n]=this.totals[n]+s*o;else{let i;n in this.totals?i=this.totals[n]:this.totals[n]=0;let a=M(()=>U(this.totals[n],A(s,o)));this.totals[n]=a,i?.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(let o of this.params.metrics)this.totals[o]!=null&&(typeof this.totals[o]=="number"?e[o]=this.totals[o]/this.seen:M(()=>{let n=A(ot(1,this.seen),this.totals[o]);e[o]=n,this.totals[o].dispose(),le(e[o])}))}},Sg=class extends $a{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(let o in e)this.history[o]==null&&(this.history[o]=[]),this.history[o].push(e[o])}async syncData(){let t=[],e=[],o=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let l=i[a];t.push(l.data()),e.push(s),o.push(a)}}let n=await Promise.all(t);for(let s=0;s<n.length;++s)this.history[e[s]][o[s]].dispose(),this.history[e[s]][o[s]]=n[s][0]}},vg=class extends $a{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Nm,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=PW),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=Z1(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,o){let n=[];this.yield!=null&&(await Qs(o),n.push(this.yield(t,e,o))),n.push(this.nextFrameFunc()),await Promise.all(n)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await Qs(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){let o=[];this.epochEnd!=null&&(await Qs(e),o.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&o.push(this.nextFrameFunc()),await Promise.all(o)}async onBatchBegin(t,e){this.batchBegin!=null&&(await Qs(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){let o=[];this.batchEnd!=null&&(await Qs(e),o.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?o.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&o.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(o)}async onTrainBegin(t){this.trainBegin!=null&&(await Qs(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Qs(t),await this.trainEnd(t))}};function Ng(r,t){return r==null&&(r={}),r instanceof $a?[r]:Array.isArray(r)&&r[0]instanceof $a?r:Xt(r).map(o=>new vg(o,t))}var qr=class{constructor(){}static registerCallbackConstructor(t,e){y.assert(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),qr.checkForDuplicate(e),qr.constructors[t]==null&&(qr.constructors[t]=[]),qr.constructors[t].push(e)}static checkForDuplicate(t){for(let e in qr.constructors)qr.constructors[+e].forEach(n=>{if(n===t)throw new L("Duplicate callback constructor.")})}static clear(){qr.constructors={}}static createCallbacks(t){let e=[];for(let o in qr.constructors){let n=+o;t>=n&&e.push(...qr.constructors[n])}return e.map(o=>new o)}};qr.constructors={};function kg(r,t,e,o,n,s,i,a,l){let u=new Sg,c=[new C0,...qr.createCallbacks(t)];r!=null&&c.push(...r),c.push(u);let p=new Ig(c);return p.setParams({epochs:e,initialEpoch:o,samples:n,steps:s,batchSize:i,verbose:t,doValidation:a,metrics:l}),{callbackList:p,history:u}}function no(r,t={},e=!1){return On(r,K.SerializationMap.getMap().classNameMap,t,"layer",e)}function Um(r,t){return M(()=>{r.dtype!=="float32"&&(r=X(r,"float32"));let e=st($l(r),t,!0),o=No(e.shape,Pe()),n=ee(Ur(e,o));return ot(r,n)})}function Fl(r,t){return M(()=>re($l(tt(t,r)),-1))}function Km(r,t){return M(()=>re(ie(tt(t,r)),-1))}function qm(r,t){return M(()=>{let e=tt(r,t),o=je(ie(r),Pe(),Number.MAX_VALUE),n=ie(ot(e,o));return A(100,re(n,-1))})}function zW(r,t){return M(()=>{let e=je(t,Pe(),Number.MAX_VALUE),o=Ye(U(1,e)),n=je(r,Pe(),Number.MAX_VALUE),s=Ye(U(1,n));return re($l(tt(o,s)),-1)})}function MW(r,t){return M(()=>{let e=Ur(0,tt(1,A(r,t)));return re($l(e),-1)})}function BW(r,t){return M(()=>{let e=Ur(0,tt(1,A(r,t)));return re(e,-1)})}function VW(r,t){return M(()=>{let e=st(A(r,t),-1),o=Xe(A(tt(1,r),t),-1);return Ur(0,U(1,tt(o,e)))})}function GW(r,t){return M(()=>{let e=Math.log(2),o=tt(t,r),n=tt(U(o,Yo(A(-2,o))),e);return re(n,-1)})}function _l(r,t,e=!1){return M(()=>{if(e)t=Ta(t);else{let o=st(t,t.shape.length-1,!0);t=ot(t,o)}return t=je(t,Pe(),1-Pe()),_t(st(A(X(r,"float32"),Ye(t)),t.shape.length-1))})}function hp(r,t,e=!1){return M(()=>{let o=X(En(lk(r)),"int32");t=je(t,Pe(),1-Pe());let n=t.shape,s=D(xl(o,n[n.length-1]),n);return _l(s,t,e)})}function WW(r,t){if(!y.arraysEqual(r.shape,t.shape))throw new L(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return M(()=>{let e=sr(t),o=_t(ie(t));return U(tt(e,A(t,r)),xa(Fe(o)))})}function dp(r,t){return M(()=>{let e;return e=je(t,Pe(),1-Pe()),e=Ye(ot(e,tt(1,e))),re(WW(r,e),-1)})}function UW(r,t){return M(()=>{let e=je(r,Pe(),1),o=je(t,Pe(),1);return st(A(r,Ye(ot(e,o))),-1)})}function HW(r,t){return M(()=>{let e=Ye(U(Pe(),t));return re(tt(t,A(r,e)),-1)})}function Eg(r,t){return M(()=>{let e=Um(r,-1),o=Um(t,-1),n=A(e,o);return _t(st(n,-1))})}var Hm={meanSquaredError:Fl,meanAbsoluteError:Km,meanAbsolutePercentageError:qm,meanSquaredLogarithmicError:zW,squaredHinge:MW,hinge:BW,categoricalHinge:VW,logcosh:GW,categoricalCrossentropy:_l,sparseCategoricalCrossentropy:hp,binaryCrossentropy:dp,kullbackLeiblerDivergence:UW,poisson:HW,cosineProximity:Eg};function $g(r){if(typeof r=="string"){if(r in Hm)return Hm[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new L(t)}else return r}function Dg(r,t){return M(()=>{let e=A(.5,He(t)),o=wr(ge(t,e),r.dtype);return re(br(r,o),-1)})}function Rg(r,t){return M(()=>wr(br(Cn(r,-1),Cn(t,-1)),"float32"))}function KW(r,t){return M(()=>X(st(pr(br(r,1),br(t,1))),"float32"))}function qW(r,t){return M(()=>X(st(pr(br(r,0),br(t,1))),"float32"))}function vk(r,t){return M(()=>{let e=KW(r,t),o=qW(r,t),n=U(e,o);return X(ue(ge(n,0),ot(e,n),0),"float32")})}function T0(r,t){return dp(r,t)}function I0(r,t){return r.rank===t.rank&&(r=oo(r,[r.rank-1])),t=Cn(t,-1),t.dtype!==r.dtype&&(t=X(t,r.dtype)),X(br(r,t),"float32")}var jW=Fl,XW=Fl,YW=Km,ZW=Km,JW=qm,QW=qm,Fg=_l,tU=Eg,S0=hp,Ag={binaryAccuracy:Dg,categoricalAccuracy:Rg,precision:vk,categoricalCrossentropy:Fg,sparseCategoricalCrossentropy:S0,mse:jW,MSE:XW,mae:YW,MAE:ZW,mape:JW,MAPE:QW,cosine:tU};function Nk(r){if(typeof r=="string"&&r in Ag)return Ag[r];if(typeof r!="string"&&r!=null)return r;throw new L(`Unknown metric ${r}`)}function jm(r){if(go(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(Hm))if(Hm[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(Ag))if(Ag[e]===r){t=e;break}return t!==void 0?t:r.name}}function Ek(r){let t={Adagrad:()=>kl.adagrad(.01),Adadelta:()=>kl.adadelta(1,.95,Pe()),Adam:()=>kl.adam(.001,.9,.999,Pe()),Adamax:()=>kl.adamax(.002,.9,.999,Pe(),0),RMSProp:()=>kl.rmsprop(.001,.9,0,Pe()),SGD:()=>kl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new L(`Unknown Optimizer ${r}`)}function N0(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!v0(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let o=JSON.stringify(r);o.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${o.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function v0(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!v0(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!v0(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function $k(r,t,e,o=console.log){let n=oU(r),s=["Layer (type)","Input Shape","Output shape","Param #"];n?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c)));let i;if(!n){s.push("Receives inputs"),i=[];for(let c in r.nodesByDepth)i.push(...r.nodesByDepth[c])}o("_".repeat(t)),_g(s,e,o),o("=".repeat(t));let a=r.layers;for(let c=0;c<a.length;++c)n?nU(a[c],e,o):sU(a[c],e,i,o),o((c===a.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let l=rU(r),u=mp(r.nonTrainableWeights);o(`Total params: ${l+u}`),o(`Trainable params: ${l}`),o(`Non-trainable params: ${u}`),o("_".repeat(t))}function rU(r){let t;return r.collectedTrainableWeights!=null?t=mp(r.collectedTrainableWeights):t=mp(r.trainableWeights),t}function oU(r){let t=!0,e=[],o=[];for(let n in r.nodesByDepth)e.push(r.nodesByDepth[n]);for(let n of e){if(n.length>1||n.length===1&&n[0].inboundLayers.length>1){t=!1;break}o.push(...n)}if(t)for(let n of r.layers){let s=!1;for(let i of n.inboundNodes)if(o.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function _g(r,t,e=console.log){let o="";for(let n=0;n<r.length;++n)n>0&&(o=o.slice(0,o.length-1)+" "),o+=r[n],o=o.slice(0,t[n]),o+=" ".repeat(t[n]-o.length);e(o)}function nU(r,t,e){let o,n;try{n=r.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{n="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,n,o,r.countParams().toString()];_g(a,t,e)}function sU(r,t,e,o){let n,s;try{s=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{s="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let i=[];for(let p of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let f=p.inboundLayers[m].name,h=p.nodeIndices[m],d=p.tensorIndices[m];i.push(`${f}[${h}][${d}]`)}let a=r.name,l=r.getClassName(),u=i.length===0?"":i[0],c=[`${a} (${l})`,s,n,r.countParams().toString(),u];_g(c,t,o);for(let p=1;p<i.length;++p)_g(["","","","",i[p]],t,o)}function Ak(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function Xm(r,t){if(r===null)return null;if(typeof r=="string")return Xs(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];Ak(t,n,s)?e.push(s):e.push(Xm(s,t))}return e}else{let e={};for(let o of Object.keys(r)){let n=r[o];if(o==="name"&&typeof n=="string")e[o]=n;else{let s=Xs(o);e[s]=Xm(n,s)}}return e}}function Og(r,t){if(r==null)return null;if(typeof r=="string")return Ro(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],o=r.length;for(let n=0;n<o;++n){let s=r[n];Ak(t,n,s)?e.push(s):e.push(Og(s,t))}return e}else{let e={};for(let o of Object.keys(r)){let n=r[o],s=Ro(o);(o==="name"||o==="className")&&typeof n=="string"?e[s]=n:e[s]=Og(n,o)}return e}}var gp="4.2.0";var so=class extends Ct{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=ka(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Fo(this.inputs).length!==this.inputs.length)throw new L(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Fo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let w=b.sourceLayer,C=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(C),this.outputLayersTensorIndices.push(v)}for(let b of this.inputs){let w=b.sourceLayer,C=b.nodeIndex,v=b.tensorIndex;go(C===0,"input layer has >1 nodes"),go(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(C),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let w=this.inputLayers[b];if(!(w instanceof Pn))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let e={},o={},n={},s={},i={},a=[],l=(b,w,C,v,$,R)=>{(v==null||$==null||R==null)&&(v=b.sourceLayer,$=b.nodeIndex,R=b.tensorIndex);let F=v.inboundNodes[$];if(C.indexOf(F)!==-1)throw new dr(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(F)!==-1)return;this.containerNodes.add(so.nodeKey(v,$)),v.id in i||(i[v.id]=Object.keys(i).length),C.indexOf(F)===-1&&C.push(F);let O=F.inboundLayers.length;for(let P=0;P<O;P++){let B=F.inputTensors[P],V=F.inboundLayers[P],G=F.nodeIndices[P],H=F.tensorIndices[P];l(B,w,C,V,G,H)}for(w.push(F);C.indexOf(F)>=0;)C.splice(C.indexOf(F),1);a.push(F)},u=[],c=[];for(let b of this.outputs)l(b,u,c);let p=a.slice().reverse();for(let b of p){o[b.id]=b,b.id in e||(e[b.id]=0);let w=e[b.id],C=n[b.outboundLayer.id]==null?0:n[b.outboundLayer.id];w=Math.max(w,C),n[b.outboundLayer.id]=w,s[b.outboundLayer.id]=b.outboundLayer,e[b.id]=w;for(let v=0;v<b.inboundLayers.length;v++){let $=b.inboundLayers[v],R=b.nodeIndices[v],F=$.inboundNodes[R],O=e[F.id]==null?0:e[F.id];e[F.id]=Math.max(w+1,O),o[F.id]=F}}let m={};for(let b in e){let w=e[b];w in m||(m[w]=[]),m[w].push(o[b])}let f={};for(let b in n){let w=n[b];w in f||(f[w]=[]),f[w].push(s[b])}let h=Object.keys(f).map(b=>parseInt(b,10)).sort(Em);this.layers=[];for(let b of h){let w=f[b];w.sort((C,v)=>{let $=i[C.id],R=i[v.id];return $<R?-1:$>R?1:0});for(let C of w)C instanceof so&&this.internalContainerRefs.push(C),this.layers.push(C)}this.layersByDepth=f,h=Object.keys(m).map(b=>parseInt(b,10)).sort(Em);let d=this.inputs.slice(),g=[];for(let b of h)for(let w of m[b]){let C=w.outboundLayer;if(C!=null){for(let v of w.inputTensors)if(d.indexOf(v)===-1)throw new dr(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${C.name}". The following previous layers were accessed without issue: ${g}`);for(let v of w.outputTensors)d.push(v);g.push(C.name)}}this.nodesByDepth=m;let x=this.layers.map(b=>b.name);for(let b of x){let w=x.filter(C=>C===b).length;if(w!==1)throw new dr(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Js({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(let e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(o=>o.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new L("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let o of this.layers)e.push(...o.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){let o={},n=0;for(let i of this.layers)for(let a of i.weights){if(o[a.originalName]!=null)throw new L(`Duplicate weight name: ${a.originalName}`);o[a.originalName]=a,n++}let s=[];for(let i in t){let a=i;if(o[i]==null){let l=i.split("/");a=l.slice(0,-2).concat([l[l.length-1]]).join("/")}if(o[a]!=null)s.push([o[a],t[i]]);else if(e)throw new L(`Provided weight data has no target variable: ${i}`);delete o[a]}if(e){let i=[];for(let a in o)i.push(a);if(i.length>0)throw new L(`${i.length} of ${n} weights are not set: ${i}`)}fp(s)}updatedConfig(){let t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${gp}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){let o=Og(this.updatedConfig());return e?JSON.stringify(o):o}call(t,e){return M(()=>{t=Xt(t);let o=new Lo;for(let n=0;n<this.inputs.length;++n)o.add(this.inputs[n],t[n]);return Dl(this.outputs,o,e)})}computeMask(t,e){return M(()=>{t=Xt(t);let o;return e==null?o=Do(null,t.length):o=Xt(e),this.runInternalGraph(t,o)[1]})}computeOutputShape(t){let e=pp(t);if(e.length!==this.inputLayers.length)throw new L(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let o={};for(let a=0;a<e.length;a++){let l=this.inputLayers[a],u=e[a],c=l.name+"_0_0";o[c]=u}let n=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Em);if(n.length>1)for(let a of n){let l=this.nodesByDepth[a];for(let u of l){let c=u.outboundLayer;if(this.inputLayers.map(d=>d.id).indexOf(c.id)!==-1)continue;let p=[];for(let d=0;d<u.inboundLayers.length;d++){let g=u.inboundLayers[d],x=u.nodeIndices[d],b=u.tensorIndices[d],w=`${g.name}_${x}_${b}`,C=o[w];p.push(C)}let m=c.computeOutputShape(Je(p)),f=pp(m),h=c.inboundNodes.indexOf(u);for(let d=0;d<f.length;d++){let g=`${c.name}_${h}_${d}`;o[g]=f[d]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],p=`${l.name}_${u}_${c}`;i.push(p)}for(let a=0;a<i.length;a++){let l=i[a];go(l in o),s.push(o[l])}return Je(s)}runInternalGraph(t,e){e==null&&(e=Do(null,t.length));let o={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],c=t[l],p=e[l];o[u.id]=[c,p]}let n=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Em);for(let l of n){let u=this.nodesByDepth[l];for(let c of u){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,h=new Array;for(let d of m)d.id in o&&h.push(o[d.id]);if(h.length===m.length){let d={},g,x,b,w;if(c.callArgs!=null&&(d=c.callArgs),h.length===1){let[C,v]=h[0];d.mask==null&&(d.mask=v),b=Xt(p.call(C,d)),w=Xt(p.computeMask(C,v)),g=[C],x=[v]}else g=h.map(C=>C[0]),x=h.map(C=>C[1]),d.mask==null&&(d.mask=x),b=Xt(p.call(g,d)),w=Xt(p.computeMask(g,x));if(p.activityRegularizer)throw new gt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let C=0;C<f.length;++C){let v=f[C],$=b[C],R=w[C];o[v.id]=[$,R]}}}}let s=[],i=[],a=[];for(let l of this.outputs){go(l.id in o,`Could not compute output ${l.name} : ${l.id}`);let[u,c]=o[l.id];a.push(u.shape),s.push(u),i.push(c)}return[s,i,a]}buildNodeConversionMap(t){let e={},o;for(let n of this.layers){o=n instanceof so?1:0;for(let s=0;s<n.inboundNodes.length;s++){let i=so.nodeKey(n,s);this.containerNodes.has(i)&&(e[i]=o,o+=1)}}return e}getLayer(t,e){if(e!=null){if(this.layers.length<=e)throw new L(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}else if(t==null)throw new L("Provide either a layer name or layer index");for(let o of this.layers)if(o.name===t)return o;throw new L(`No such layer: ${t}`)}calculateLosses(){return M(()=>{let t=[];for(let e of this.layers)for(let o=0;o<e.inboundNodes.length;++o){let n=so.nodeKey(e,o);this.containerNodes.has(n)&&t.push(...e.calculateLosses())}return t})}getConfig(){let t={name:this.name},e=this.buildNodeConversionMap(this.layers),o=[];for(let i of this.layers){let a=i.getClassName(),l=i.getConfig(),u=[];for(let p=0;p<i.inboundNodes.length;p++){let m=i.inboundNodes[p],f=so.nodeKey(i,p),h={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),h=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(m.inboundLayers.length>0){let d=[];for(let g=0;g<m.inboundLayers.length;g++){let x=m.inboundLayers[g],b=m.nodeIndices[g],w=m.tensorIndices[g],C=so.nodeKey(x,b),v=e[C];v==null&&(v=0),d.push([x.name,v,w,h])}u.push(d)}}}let c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,o.push(c)}t.layers=o;let n=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=so.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=e[u];c==null&&(c=0);let p=this.inputLayersTensorIndices[i];n.push([a.name,c,p])}t.inputLayers=n;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=so.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=e[u];c==null&&(c=0);let p=this.outputLayersTensorIndices[i];s.push([a.name,c,p])}return t.outputLayers=s,t}static fromConfig(t,e,o={},n=!1){let s={},i={};function a(g,x){g.name in i?i[g.name].push(x):i[g.name]=[x]}function l(g,x){let b=[],w;for(let C of x){let v=C[0],$=C[1],R=C[2];if(w=C[3]==null?{}:C[3],!(v in s)){a(g,x);return}let F=s[v];if(F.inboundNodes.length<=$){a(g,x);return}let O=F.inboundNodes[$];b.push(O.outputTensors[R])}b.length>0&&g.apply(Je(b),w)}function u(g){let x=g.name,b=no(g,e.customObjects!=null?e.customObjects:{});b.setFastWeightInitDuringBuild(n),s[x]=b,g.inboundNodes.forEach(C=>{if(!(C instanceof Array))throw new L(`Corrupted configuration, expected array for nodeData: ${C}`);a(b,C)})}let c=e.name,p=e.layers;for(let g of p)u(g);for(;!X1(i);)for(let g of p){let x=s[g.name];if(x.name in i){let b=i[x.name];delete i[x.name];for(let w of b)l(x,w)}}let m=[],f=[],h=e.inputLayers;for(let g of h){let x=g[0],b=g[1],w=g[2];go(x in s);let v=s[x].inboundNodes[b].outputTensors;m.push(v[w])}let d=e.outputLayers;for(let g of d){let x=g[0],b=g[1],w=g[2];go(x in s);let v=s[x].inboundNodes[b].outputTensors;f.push(v[w])}return new t({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new L("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){M(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function iU(r,t,e){let o=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>null);if(o===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==o)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${o} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let n=[];return t.forEach(s=>{s in r?n.push(r[s]):n.push(null)}),n}else throw new Error(`The model has multiple (${o}) outputs, so ${e} must be either an array with ${o} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function Lg(r,t){return iU(r,t,"classWeight")}async function Pg(r,t,e,o){if(t!=null||o!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let n=M(()=>{if(r.shape.length===1)return Nr(r);if(r.shape.length===2){if(r.shape[1]>1)return Cn(r,1);if(r.shape[1]===1)return D(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await n.data());yt(n);let i=[];return s.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),ke(i,"float32")}else return null}function Dk(r,t){return A(r,t)}var aU=32;function _k(r,t){let e,o,n=t;e=n.xs,o=n.ys,y.assert(e!=null&&o!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=Rk("input",r.inputNames,e),i=Rk("output",r.outputNames,o),a=s[0].shape[0];y.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),y.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)y.assert(s[l].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let l=0;l<i.length;l++)y.assert(i[l].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function Rk(r,t,e){if(e instanceof $t)return[e];if(Array.isArray(e))return y.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let o=[];for(let n of t){if(e[n]==null)throw new L(`The feature data generated by the dataset lacks the required ${r} key '${n}'.`);o.push(e[n])}return o}}function lU(r){if(r.length===3)throw new gt("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}async function Ok(r,t,e){let o=e.batchesPerEpoch!=null;if(y.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),y.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),y.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),y.assert(!o||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),y.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let n=e.validationData!=null,s,i;if(n)if(Fk(e.validationData))y.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let g=lU(e.validationData);s=g.xs,i=g.ys}let a=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),u;n?u=l.slice().concat(l.map(g=>"val_"+g)):u=l.slice();let c=Ng(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:f}=kg(c,p,e.epochs,null,null,uU(t,e),null,n,u);m.setModel(r),r.history=f,await m.onTrainBegin(),r.stopTraining_=!1;let h=e.initialEpoch==null?0:e.initialEpoch,d=await t.iterator();for(;h<e.epochs;){let g={};await m.onEpochBegin(h);let x=0,b=0;for(o||(d=await t.iterator());!o||x<e.batchesPerEpoch;){let w=await d.next();if(o&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){let{xs:C,ys:v}=_k(r,w.value),$={};$.batch=b,$.size=C[0].shape[0],await m.onBatchBegin(b,$);let R=[];if(e.classWeight!=null){let P=Lg(e.classWeight,r.outputNames);for(let B=0;B<P.length;++B)R.push(await Pg(v[B],null,P[B]))}let F=C.concat(v).concat(R),O=a(F);yt(F);for(let P=0;P<l.length;++P){let B=l[P],V=O[P];$[B]=V,le(V)}await m.onBatchEnd(b,$),Tg($),b++,x++}if(o?x>=e.batchesPerEpoch:w.done){if(n){let C;Fk(e.validationData)?C=Xt(await r.evaluateDataset(e.validationData,{batches:e.validationBatches})):C=Xt(r.evaluate(s,i,{batchSize:e.validationBatchSize==null?aU:e.validationBatchSize,verbose:0}));for(let v=0;v<r.metricsNames.length;++v)g[`val_${r.metricsNames[v]}`]=C[v]}break}if(r.stopTraining_)break}if(await m.onEpochEnd(h,g),h++,r.stopTraining_)break}return await m.onTrainEnd(),await r.history.syncData(),r.history}finally{r.isTraining=!1}}function uU(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function Fk(r){return typeof r.iterator=="function"}function cU(r){return typeof r.next=="function"}async function Lk(r,t,e){e=e||{};let o=e.batches!=null,n=r.testFunction,s=[];if(e.verbose>0)throw new gt("Verbose mode is not implemented yet.");y.assert(!o||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let i=cU(t)?t:await t.iterator(),a=0,l=0;for(;!o||l<e.batches;){let u=await i.next();if(s=M(()=>{if(u.value){let{xs:c,ys:p}=_k(r,u.value),m=c.concat(p),f=M(()=>n(m));if(yt(m),l===0)for(let d=0;d<f.length;++d)s.push(nt(0));let h=m[0].shape[0];for(let d=0;d<f.length;++d){let g=f[d],x=s[d];s[d]=M(()=>U(s[d],A(h,g))),l>0&&yt(x)}yt(f),a+=h,++l}return s}),u.done){o&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=ot(s[u],a),yt(c)}return Je(s)}function zg(r){y.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function xp(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(o=>Ys(o,t,e-t)):Ys(r,t,e-t)}function Mg(r,t){return M(()=>r==null?null:Array.isArray(r)?r.map(e=>Mg(e,t)):xg(r,t.dtype==="int32"?t:X(t,"int32")))}function Bg(r,t){let e=[],o=0,n=null;for(;o<r;)n=o+t,n>=r&&(n=r),e.push([o,n]),o=n;return e}function k0(r){let t=[];r instanceof $t&&(r=[r]);for(let e=0;e<r.length;++e){let o=r[e];if(o.rank===1)t.push(Zs(o,1));else{if(o.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(o)}}return t}function Po(r,t){if(r==null)return;let e=[];if(t instanceof $t)e.push(t.id);else if(Array.isArray(t))t.forEach(n=>e.push(n.id));else if(t!=null)for(let n in t){let s=t[n];e.push(s.id)}let o=[];if(r instanceof $t)e.indexOf(r.id)===-1&&o.push(r);else if(Array.isArray(r))r.forEach(n=>{e.indexOf(n.id)===-1&&o.push(n)});else if(r!=null)for(let n in r){let s=r[n];e.indexOf(s.id)===-1&&o.push(s)}o.forEach(n=>{n.isDisposed||n.dispose()})}function pU(r){return r instanceof $t}function E0(r){return Array.isArray(r)}function Pk(r){return!pU(r)&&!E0(r)}function zk(r,t,e,o=!0,n=""){if(t==null||t.length===0){if(r!=null){let i=!1;if(E0(r)&&r.length>0)i=!0;else if(Pk(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new L(`Error when checking model ${n} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(i=>null);let s;if(Pk(r)){r=r,s=[];for(let i of t){if(r[i]==null)throw new L(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(r[i])}}else if(E0(r)){if(r=r,r.length!==t.length)throw new L(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new L(`The model ${n} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=k0(s),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new L(`Error when checking ${n}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[i].length;++l){if(l===0&&!o)continue;let u=a.shape[l],c=e[i][l];if(c!=null&&c>=0&&u!==c)throw new L(`${n} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${n} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function mU(r,t,e){let o=Fo(r.map(s=>s.shape[0]));o.sort();let n=Fo(t.map(s=>s.shape[0]));if(n.sort(),o.length>1)throw new L(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(n.length>1)throw new L(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(o.length>0&&n.length>0&&!y.arraysEqual(o,n))throw new L(`Input Tensors should have the same number of samples as target Tensors. Found ${o[0]} input sample(s) and ${n[0]} target sample(s).`)}function fU(r,t,e){let o=[Fl,dp,_l];for(let n=0;n<r.length;++n){let s=r[n],i=t[n],a=e[n];if(i!=null){if(i===_l&&s.shape[s.shape.length-1]===1)throw new L(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(o.indexOf(i)!==-1){let l=s.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){let p=l[c],m=u[c];if(m!=null&&p!==m)throw new L(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Mk(r,t,e,o=!0,n=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new L(`Error when checking model ${n}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new L(`The model expects ${t.length} ${n} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new L(`Error when checking ${n}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[i].length;++l){if(l===0&&!o)continue;let u=a.shape[l],c=e[i][l];if(c!=null&&c!==u)throw new L(`Error when checking ${n}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function hU(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(o=>e);{let o=[];for(let n of t){let s=e.hasOwnProperty(n)?e[n]:[];Array.isArray(s)||(s=[s]),o.push(s)}return o}}var dU="layers-model",zo=class extends so{constructor(t){super(t),this.isTraining=!1}summary(t,e,o=console.log){if(!this.built)throw new L("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");$k(this,t,e,o)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=Ek(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof fr))throw new L("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(let i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new L(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(let i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push($g(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new L(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(a=>$g(a))}else{let i=$g(t.loss);this.outputs.forEach(a=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){let a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}let o=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],tn("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});let n=hU(t.metrics,this.outputNames),s=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};tn("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(o.indexOf(i)!==-1)continue;let a=n[i];(u=>{let c="",p,m,f;for(let h of u){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let g=this.internalOutputShapes[i];g[g.length-1]===1||this.lossFunctions[i]===dp?["accuracy","acc"].indexOf(h)!==-1?m=Dg:["crossentropy","ce"].indexOf(h)!==-1&&(m=T0):this.lossFunctions[i]===hp?["accuracy","acc"].indexOf(h)!==-1?m=I0:["crossentropy","ce"].indexOf(h)!==-1&&(m=S0):["accuracy","acc"].indexOf(h)!==-1?m=Rg:["crossentropy","ce"].indexOf(h)!==-1&&(m=Fg);let x;["accuracy","acc"].indexOf(h)!==-1?x="acc":["crossentropy","ce"].indexOf(h)!==-1&&(x="ce"),f=m,p=c+x}else f=Nk(h),p=c+jm(h);let d;tn(p,()=>{d=f}),s(i,p,d)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,o={}){let n=o.batchSize==null?32:o.batchSize;zg(n);let s=!0,i=this.standardizeUserDataXY(t,e,s,n);try{let a=i[0].concat(i[1]);this.makeTestFunction();let l=this.testFunction,u=this.testLoop(l,a,n,o.verbose,o.steps);return Je(u)}finally{Po(i[0],t),Po(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),Lk(this,t,e)}checkNumSamples(t,e,o,n="steps"){let s;if(o!=null){if(s=null,e!=null)throw new L(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?s=t[0].shape[0]:s=t.shape[0];else throw new L(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return s}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new L("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(e),n=o?e:[e],s=this.retrieveSymbolicTensors(n),i=new Lo;if(t instanceof $t&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new L(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],t[l])}else for(let l of this.inputs){let u=t[l.name];if(u==null)throw new L(`No value is provided for the model's input ${l.name}`);i.add(l,u)}let a=Dl(s,i);return o?a:a[0]}retrieveSymbolicTensors(t){let e=Do(null,t.length),o=t.length;for(let n of this.layers){let s=Array.isArray(n.output)?n.output:[n.output],i=s.map(a=>a.name);for(let a=0;a<t.length;++a){let l=i.indexOf(t[a]);if(l!==-1&&(e[a]=s[l],o--),o===0)break}if(o===0)break}if(o>0){let n=[];throw e.forEach((s,i)=>{s==null&&n.push(t[i])}),new L(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,o=!1){return M(()=>{let n=this.checkNumSamples(t);if(o)throw new gt("Verbose predictLoop() is not implemented yet.");let s=Bg(n,e),i=this.outputs.map(a=>[]);for(let a=0;a<s.length;++a)M(()=>{let u=s[a][0],c=s[a][1],p=xp(t,u,c),m=[];if(Array.isArray(p))for(let h=0;h<p.length;++h)m.push({key:this.inputs[h],value:p[h]});else m.push({key:this.inputs[0],value:p});let f=new Lo(m);return Dl(this.outputs,f)}).forEach((u,c)=>i[c].push(u));return Je(i.map(a=>Bt(a,0)))})}predict(t,e={}){let o=k0(t);Mk(o,this.inputNames,this.feedInputShapes,!1);try{let n=e.batchSize==null?32:e.batchSize;return zg(n),this.predictLoop(o,n)}finally{Po(o,t)}}predictOnBatch(t){Mk(t,this.inputNames,this.feedInputShapes,!0);let e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,o=!0,n){if(this.optimizer_==null)throw new dr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let s=[];for(let i=0;i<this.feedOutputShapes.length;++i){let a=this.feedOutputShapes[i];this.feedLossFns[i]===hp?s.push(a.slice(0,a.length-1).concat([1])):s.push(a)}if(t=zk(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=zk(e,this.feedOutputNames,s,!1,"target"),mU(t,e,null),fU(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&n!=null&&n>0&&t[0].shape[0]%n!==0)throw new L(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,o,n,s=!0,i){let[a,l]=this.standardizeUserDataXY(t,e,s,i);if(o!=null)throw new Error("sample weight is not supported yet.");let u=null;if(n!=null){let c=Lg(n,this.outputNames);u=[];for(let p=0;p<c.length;++p)u.push(await Pg(l[p],null,c[p]))}return[a,l,u]}testLoop(t,e,o,n=0,s){return M(()=>{let i=this.checkNumSamples(e,o,s,"steps"),a=[];if(n>0)throw new gt("Verbose mode is not implemented yet.");if(s!=null)throw new gt("steps mode in testLoop() is not implemented yet");{let l=Bg(i,o),u=ke(Dr(0,i));for(let c=0;c<l.length;++c){let p=l[c][0],m=l[c][1],f=Ys(u,p,m-p),h=Mg(e,f),d=t(h);if(c===0)for(let g=0;g<d.length;++g)a.push(nt(0));for(let g=0;g<d.length;++g){let x=d[g];a[g]=U(a[g],A(m-p,x))}}for(let c=0;c<a.length;++c)a[c]=ot(a[c],i)}return a})}getDedupedMetricsNames(){let t=this.metricsNames,e=[];for(let o=0;o<t.length;++o){let n=t[o],s=n;if(m0(t,n)>1){let i=m0(t.slice(0,o),n);s+=`_${i}`}e.push(s)}return e}makeTrainFunction(){return t=>{let e=[],o=t.slice(0,this.inputs.length),n=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{let p=[];for(let d=0;d<this.inputs.length;++d)p.push({key:this.inputs[d],value:o[d]});let m=new Lo(p),f=Dl(this.outputs,m,{training:!0}),h;for(let d=0;d<this.lossFunctions.length;++d){let g=this.lossFunctions[d],x=g(n[d],f[d]);s[d]!=null&&(x=Dk(x,s[d]));let b=re(x);e.push(b),d===0?h=x:h=U(h,x)}for(let d=0;d<this.metricsTensors.length;++d){let g;if(this.outputs.length>1&&d<this.outputs.length)g=e[d];else{let x=this.metricsTensors[d][0],b=this.metricsTensors[d][1];g=re(x(n[b],f[b]))}le(g),i.push(g)}return h=re(h),this.calculateLosses().forEach(d=>{h=U(h,d)}),h},l=this.collectedTrainableWeights.map(p=>p.read()),u=!0;return[this.optimizer_.minimize(a,u,l)].concat(i)}}makeTestFunction(){this.testFunction=t=>M(()=>{let e=[],o,n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let u=0;u<this.inputs.length;++u)i.push({key:this.inputs[u],value:n[u]});let a=new Lo(i),l=Dl(this.outputs,a);for(let u=0;u<this.lossFunctions.length;++u){let c=this.lossFunctions[u],p=re(c(s[u],l[u]));u===0?o=p:o=U(o,p),e.push(o)}for(let u=0;u<this.metricsTensors.length;++u){let c=this.metricsTensors[u][0],p=this.metricsTensors[u][1],m=re(c(s[p],l[p]));e.push(m)}return e})}async fit(t,e,o={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let n,s,i,a,l,u,c,p,m;try{let f=o.batchSize==null?32:o.batchSize;zg(f);let h=!1,d=await this.standardizeUserData(t,e,o.sampleWeight,o.classWeight,h,f);n=d[0],s=d[1],m=d[2];let g=!1,x;if(o.validationData!=null&&o.validationData.length>0){if(g=!0,o.validationData.length===2)l=o.validationData[0],u=o.validationData[1];else throw o.validationData.length===3?new gt("validationData including sample weights is not supported yet."):new L(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${o.validationData} is invalid.`);let O=!0,P=await this.standardizeUserData(l,u,null,null,O,f);c=P[0],p=P[1],x=c.concat(p)}else if(o.validationSplit!=null&&o.validationSplit>0&&o.validationSplit<1){g=!0;let O=Math.floor(n[0].shape[0]*(1-o.validationSplit)),P=n[0].shape[0];c=xp(n,O,P),i=n,n=xp(n,0,O),p=xp(s,O,P),a=s,s=xp(s,0,O),x=c.concat(p)}else o.validationSteps!=null&&(g=!0);let b=n.concat(s).concat(m);this.checkTrainableWeightsConsistency();let w=this.makeTrainFunction(),C=this.getDedupedMetricsNames(),v,$;g?(this.makeTestFunction(),v=this.testFunction,$=C.slice().concat(C.map(O=>"val_"+O))):(v=null,x=[],$=C.slice());let R=Ng(o.callbacks,o.yieldEvery);return await this.fitLoop(w,b,C,f,o.epochs,o.verbose,R,v,x,o.shuffle,$,o.initialEpoch,null,null)}finally{this.isTraining=!1,Po(n,t),Po(s,e),Po(i,t),Po(a,e),Po(c,l),Po(p,u),m!=null&&yt(m)}}async fitLoop(t,e,o,n,s,i,a,l,u,c,p,m,f,h){n==null&&(n=32),s==null&&(s=1),c==null&&(c=!0),m==null&&(m=0);let d=!1;if(l!=null&&u!=null&&(d=!0),h!=null&&(d=!0,f==null))throw new L("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(e,n,f,"steps_per_epoch"),x;g!=null&&(x=Dr(0,g)),i==null&&(i=1);let{callbackList:b,history:w}=kg(a,i,s,m,g,f,n,d,p);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let C=m;C<s;++C){await b.onEpochBegin(C);let v={};if(f!=null)throw new gt("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new gt("batch shuffling is not implemneted yet");c&&y.shuffle(x);let $=ke(x),R=Bg(g,n);for(let F=0;F<R.length;++F){let O={};if(await b.onBatchBegin(F,O),M(()=>{let P=R[F][0],B=R[F][1],V=Ys($,P,B-P);O.batch=F,O.size=B-P;let G=Mg(e,V),H=t(G);for(let W=0;W<o.length;++W){let j=o[W],Z=H[W];O[j]=Z,le(Z)}if(F===R.length-1&&d){let W=this.testLoop(l,u,n);for(let j=0;j<o.length;++j){let Z=o[j],q=W[j];le(q),v["val_"+Z]=q}}}),await b.onBatchEnd(F,O),Tg(O),this.stopTraining_)break}$.dispose()}if(await b.onEpochEnd(C,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return Ok(this,t,e)}async trainOnBatch(t,e){let o=await this.standardizeUserData(t,e),n=o[0],s=o[1],a=this.makeTrainFunction()(n.concat(s)),l=[];for(let u of a){let c=await u.data();l.push(c[0])}return yt(a),Po(o[0],t),Po(o[1],e),Je(l)}getNamedWeights(t){let e=[],o=t!=null&&t.trainableOnly,n=o?this.trainableWeights:this.weights,s=this.getWeights(o);for(let i=0;i<n.length;++i)o&&!n[i].trainable||e.push({name:n[i].originalName,tensor:s[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){let t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let e=hm().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-hm().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Ro(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Ro(e))}else{let e=Object.keys(this.loss);t={};let o=this.loss;for(let n of e)if(typeof o[n]=="string")t[n]=Ro(o[n]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ro(jm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ro(jm(t)));{let t={};for(let e in this.metrics)t[e]=Ro(jm(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let e=Xm(t.optimizer_config),o=no(e),n;if(typeof t.loss=="string")n=Xs(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(i=>Xs(i));else if(t.loss!=null){n={};for(let i in t.loss)n[i]=Xs(t.loss[i])}let s;if(Array.isArray(t.metrics))s=t.metrics.map(i=>Xs(i));else if(t.metrics!=null){s={};for(let i in t.metrics)s[i]=Xs(t.metrics[i])}this.compile({loss:n,metrics:s,optimizer:o})}async save(t,e){if(typeof t=="string"){let u=Jo.getSaveHandlers(t);if(u.length===0)throw new L(`Cannot find any save handlers for URL '${t}'`);if(u.length>1)throw new L(`Found more than one (${u.length}) save handlers for URL '${t}'`);t=u[0]}if(t.save==null)throw new L("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=await Jo.encodeWeights(this.getNamedWeights(e)),n=!1,s=null,a={modelTopology:this.toJSON(s,n),format:dU,generatedBy:`TensorFlow.js tfjs-layers v${gp}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:c,specs:p}=await Jo.encodeWeights(await this.optimizer.getWeights(),u);o.specs.push(...p),o.data=Jo.concatenateArrayBuffers([o.data,c])}return this.userDefinedMetadata!=null&&(N0(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=o.data,a.weightSpecs=o.specs,t.save(a)}setUserDefinedMetadata(t){N0(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}};zo.className="Model";K.registerClass(zo);var Vg=class extends zo{};Vg.className="Functional";K.registerClass(Vg);var ti=class extends zo{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:ka("sequential_"),t.layers!=null)for(let e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new L(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){let e=t instanceof ti||t instanceof zo,o;if(e){if(o=t,o.outputs.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new L("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new L("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let n=b0({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(n)}if(e)this.outputs=o.outputs,this.inputs=o.inputs;else{if(t.inboundNodes.length!==1)throw new L(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=y0(this.outputs[0])}this.inboundNodes=[],new Js({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Do(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(n=>n.shape),outputShapes:this.outputs[0].shape})}else{let n=t.apply(this.outputs[0]);if(Array.isArray(n))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[n],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Dt(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,o=console.log){this.built||this.build(),super.summary(t,e,o)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,o={}){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.evaluate(t,e,o)}async evaluateDataset(t,e){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,o={}){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.fit(t,e,o)}async fitDataset(t,e){if(!this.built)throw new dr("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,o={},n=!1){let s,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new L("Legacy serialization format not supported yet.");s=e}else y.assert(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),s=e.layers,delete e.layers,i=e;let a=new t(i);if(!(a instanceof ti))throw new gt(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(let l of s){let c=no(l,void 0,n);n&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(t){if(this.model==null)throw new L("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new L("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let t=[];for(let e of this.layers){let o={};o.className=e.getClassName(),o.config=e.getConfig(),t.push(o)}return{name:this.name,layers:t}}};ti.className="Sequential";K.registerClass(ti);var Ir=class extends K.Serializable{getConfig(){return{}}},Gg=class extends Ir{apply(t,e=1){return ck(t,e)}};Gg.className="elu";K.registerClass(Gg);var Wg=class extends Ir{apply(t){return Lc(t)}};Wg.className="selu";K.registerClass(Wg);var Ug=class extends Ir{apply(t){return sr(t)}};Ug.className="relu";K.registerClass(Ug);var Hg=class extends Ir{apply(t){return M(()=>An(6,sr(t)))}};Hg.className="relu6";K.registerClass(Hg);var Kg=class extends Ir{apply(t){return t}};Kg.className="linear";K.registerClass(Kg);var qg=class extends Ir{apply(t){return yr(t)}};qg.className="sigmoid";K.registerClass(qg);var jg=class extends Ir{apply(t){return mk(t)}};jg.className="hardSigmoid";K.registerClass(jg);var Xg=class extends Ir{apply(t){return Yo(t)}};Xg.className="softplus";K.registerClass(Xg);var Yg=class extends Ir{apply(t){return pk(t)}};Yg.className="softsign";K.registerClass(Yg);var Zg=class extends Ir{apply(t){return In(t)}};Zg.className="tanh";K.registerClass(Zg);var yp=class extends Ir{apply(t,e=-1){return Ta(t,e)}};yp.className="softmax";K.registerClass(yp);var Jg=class extends Ir{apply(t,e=-1){return Ac(t,e)}};Jg.className="logSoftmax";K.registerClass(Jg);var Qg=class extends Ir{apply(t,e=1){return M(()=>A(yr(A(t,e)),t))}};Qg.className="swish";K.registerClass(Qg);var tx=class extends Ir{apply(t){return M(()=>A(t,In(Yo(t))))}};tx.className="mish";K.registerClass(tx);function rn(r){return r.getClassName()}function $0(r,t={}){return On(r,K.SerializationMap.getMap().classNameMap,t,"activation")}function on(r){if(r==null){let t={};return t.className="linear",t.config={},$0(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},$0(t)}else return r instanceof Ir?r:$0(r)}function xU(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var ex=class extends K.Serializable{},Ym=class extends ex{constructor(t){super(),xU(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return M(()=>{let e=oe([1]);return this.hasL1&&(e=U(e,st(A(this.l1,ie(t))))),this.hasL2&&(e=U(e,st(A(this.l2,$l(t))))),D(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}};Ym.className="L1L2";K.registerClass(Ym);var Bk={l1l2:"L1L2"};function Ht(r){return ep(r)}function Vk(r,t={}){return On(r,K.SerializationMap.getMap().classNameMap,t,"regularizer")}function Zt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in Bk?Bk[r]:r,config:{}};return Vk(e)}else return r instanceof ex?r:Vk(r)}var Zm=class extends Ct{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=xt(t);let o=sr(t);return this.maxValue!=null&&(o=je(o,0,this.maxValue)),o}computeOutputShape(t){return t}getConfig(){let t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}};Zm.className="ReLU";K.registerClass(Zm);var Jm=class extends Ct{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let o=xt(t);return ga(o,this.alpha)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};Jm.className="LeakyReLU";K.registerClass(Jm);var Qm=class extends Ct{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=qt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Zt(t.alphaRegularizer),this.alphaConstraint=ye(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new L(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Dt(t);let e=t.slice(1);if(this.sharedAxes!=null)for(let n of this.sharedAxes)e[n-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let n=1;n<t.length;++n)o[n]=t[n];this.inputSpec=[new Yt({ndim:t.length,axes:o})],this.built=!0}call(t,e){return t=xt(t),Ca(t,this.alpha.read())}getConfig(){let t={alphaInitializer:ne(this.alphaInitializer),alphaRegularizer:Ht(this.alphaRegularizer),alphaConstraint:xe(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}};Qm.className="PReLU";K.registerClass(Qm);var tf=class extends Ct{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new gt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){let o=xt(t);return kn(o)}computeOutputShape(t){return t}getConfig(){let t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};tf.className="ELU";K.registerClass(tf);var ef=class extends Ct{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){let o=xt(t);return A(o,X(ge(o,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){let t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}};ef.className="ThresholdedReLU";K.registerClass(ef);var rf=class extends Ct{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new yp().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){let o=xt(t);return this.softmax(o,this.axis)}computeOutputShape(t){return t}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};rf.className="Softmax";K.registerClass(rf);function Aa(r,t,e){if(typeof r=="number")return Do(r,t);if(r.length!==t)throw new L(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let o=0;o<t;++o){let n=r[o];if(!ik(n))throw new L(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${n}`)}return r}function jr(r,t,e,o,n=1){if(r==null)return r;let s=t+(t-1)*(n-1),i;return e==="same"?i=r:i=r-s+1,Math.floor((i+o-1)/o)}function nn(r,t,e,o){if(r==null)return null;if(o==="valid")r=r*t+en([e-t,0]);else if(o==="same")r=r*t;else throw new L(`Unsupport padding mode: ${o}.`);return r}function uf(r,t){return M(()=>(ce(t),t==="channelsFirst"?kt(r,[0,2,3,1]):r))}function A0(r,t){return M(()=>(ce(t),t==="channelsFirst"?kt(r,[0,2,3,4,1]):r))}function bU(r,t,e,o=1,n="valid",s,i=1){return M(()=>{if(s==null&&(s=Rr()),ce(s),r.shape.length!==3)throw new L(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new L(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new L(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(r=kt(r,[0,2,1])),n==="causal")throw new gt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Sc(r,t,o,n==="same"?"same":"valid","NWC",i);return e!=null&&(a=Fr(a,e)),a})}function Gk(r,t,e,o=[1,1],n="valid",s,i,a=null){return M(()=>{if(s==null&&(s=Rr()),ce(s),r.rank!==3&&r.rank!==4)throw new L(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new L(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=uf(r,s);if(n==="causal")throw new gt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=va.conv2d({x:l,filter:t,strides:o,pad:n==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),s==="channelsFirst"&&(l=kt(l,[0,3,1,2])),l})}function wU(r,t,e,o=[1,1,1],n="valid",s,i){return M(()=>{if(s==null&&(s=Rr()),ce(s),r.rank!==4&&r.rank!==5)throw new L(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new L(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=A0(r,s);if(n==="causal")throw new gt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=cd(a,t,o,n==="same"?"same":"valid","NDHWC",i),e!=null&&(a=Fr(a,e)),s==="channelsFirst"&&(a=kt(a,[0,4,1,2,3])),a})}var Ol=class extends Ct{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ol.verifyArgs(e),this.rank=t,$e(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new gt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Aa(e.kernelSize,t,"kernelSize"),this.strides=Aa(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Ar(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,ce(this.dataFormat),this.activation=on(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=qt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ye(e.biasConstraint),this.biasRegularizer=Zt(e.biasRegularizer),this.activityRegularizer=Zt(e.activityRegularizer),this.dilationRate=Aa(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new L(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new L(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new L(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(go("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!ug(t.kernelSize,"number",1,3))throw new L(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:rn(this.activation),useBias:this.useBias,biasInitializer:ne(this.biasInitializer),biasRegularizer:Ht(this.biasRegularizer),activityRegularizer:Ht(this.activityRegularizer),biasConstraint:xe(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}},Da=class extends Ol{constructor(t,e){super(t,e),this.kernel=null,Da.verifyArgs(e),this.filters=e.filters,$e(this.filters,"filters"),this.kernelInitializer=qt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ye(e.kernelConstraint),this.kernelRegularizer=Zt(e.kernelRegularizer)}build(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new L(`The channel dimension of the input should be defined. Found ${t[e]}`);let o=t[e],n=this.kernelSize.concat([o,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:o}}],this.built=!0}call(t,e){return M(()=>{t=xt(t);let o,n=this.bias==null?null:this.bias.read(),s=cg(this.activation.getClassName());if(s!=null&&this.rank===2)o=Gk(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)o=bU(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)o=Gk(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)o=wU(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new gt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(o=this.activation.apply(o))}return o})}computeOutputShape(t){t=Dt(t);let e=[],o=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<o.length;++s){let i=jr(o[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);e.push(i)}let n=[t[0]];return this.dataFormat==="channelsLast"?(n=n.concat(e),n.push(this.filters)):(n.push(this.filters),n=n.concat(e)),n}getConfig(){let t={filters:this.filters,kernelInitializer:ne(this.kernelInitializer),kernelRegularizer:Ht(this.kernelRegularizer),kernelConstraint:xe(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new L(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},Ra=class extends Da{constructor(t){super(2,t),Ra.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!ug(t.kernelSize,"number",1,2))throw new L(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}};Ra.className="Conv2D";K.registerClass(Ra);var Fa=class extends Da{constructor(t){super(3,t),Fa.verifyArgs(t)}getConfig(){let t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new L(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}};Fa.className="Conv3D";K.registerClass(Fa);var of=class extends Ra{constructor(t){if(super(t),this.inputSpec=[new Yt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Dt(t),t.length!==4)throw new L("Input should have rank 4; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");let o=t[e],n=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:4,axes:{[e]:o}})],this.built=!0}call(t,e){return M(()=>{let o=xt(t);if(o.shape.length!==4)throw new L(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let n=o.shape,s=n[0],i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);let l=n[i],u=n[a],c=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],f=this.strides[1],h=nn(l,m,c,this.padding),d=nn(u,f,p,this.padding),g=[s,h,d,this.filters];this.dataFormat!=="channelsLast"&&(o=kt(o,[0,2,3,1]));let x=Nc(o,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=kt(x,[0,3,1,2])),this.bias!=null&&(x=Fr(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Dt(t);let e=t.slice(),o,n,s;this.dataFormat==="channelsFirst"?(o=1,n=2,s=3):(o=3,n=1,s=2);let i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return e[o]=this.filters,e[n]=nn(e[n],l,i,this.padding),e[s]=nn(e[s],u,a,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};of.className="Conv2DTranspose";K.registerClass(of);var nf=class extends Fa{constructor(t){if(super(t),this.inputSpec=[new Yt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Dt(t),t.length!==5)throw new L("Input should have rank 5; Received input shape: "+JSON.stringify(t));let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");let o=t[e],n=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Yt({ndim:5,axes:{[e]:o}})],this.built=!0}call(t,e){return M(()=>{let o=xt(t);if(o.shape.length!==5)throw new L(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let n=o.shape,s=n[0],i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);let u=n[l],c=n[i],p=n[a],m=this.kernelSize[0],f=this.kernelSize[1],h=this.kernelSize[2],d=this.strides[0],g=this.strides[1],x=this.strides[2],b=nn(u,d,m,this.padding),w=nn(c,g,f,this.padding),C=nn(p,x,h,this.padding),v=[s,b,w,C,this.filters];this.dataFormat!=="channelsLast"&&(o=kt(o,[0,2,3,4,1]));let $=md(o,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&($=kt($,[0,4,1,2,3])),this.bias!==null&&($=Fr($,this.bias.read(),this.dataFormat)),this.activation!==null&&($=this.activation.apply($)),$})}computeOutputShape(t){t=Dt(t);let e=t.slice(),o,n,s,i;this.dataFormat==="channelsFirst"?(o=1,n=2,s=3,i=4):(o=4,n=1,s=2,i=3);let a=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],p=this.strides[1],m=this.strides[2];return e[o]=this.filters,e[n]=nn(e[n],c,a,this.padding),e[s]=nn(e[s],p,l,this.padding),e[i]=nn(e[i],m,u,this.padding),e}getConfig(){let t=super.getConfig();return delete t.dilationRate,t}};nf.className="Conv3DTranspose";K.registerClass(nf);var rx=class extends Da{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new L("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new L("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new L(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=qt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Zt(e.depthwiseRegularizer),this.depthwiseConstraint=ye(e.depthwiseConstraint),this.pointwiseInitializer=qt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Zt(e.pointwiseRegularizer),this.pointwiseConstraint=ye(e.pointwiseConstraint)}build(t){if(t=Dt(t),t.length<this.rank+2)throw new L(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new L(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);let o=t[e],n=this.kernelSize.concat([o,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(o*this.depthMultiplier,this.filters);let i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Yt({ndim:this.rank+2,axes:{[e]:o}})],this.built=!0}call(t,e){return M(()=>{t=xt(t);let o;if(this.rank===1)throw new gt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=kt(t,[0,2,3,1])),o=Pc(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=Fr(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=kt(o,[0,3,1,2])),o})}getConfig(){let t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ne(this.depthwiseInitializer),t.pointwiseInitializer=ne(this.pointwiseInitializer),t.depthwiseRegularizer=Ht(this.depthwiseRegularizer),t.pointwiseRegularizer=Ht(this.pointwiseRegularizer),t.depthwiseConstraint=xe(this.depthwiseConstraint),t.pointwiseConstraint=xe(this.pointwiseConstraint),t}};rx.className="SeparableConv";var sf=class extends rx{constructor(t){super(2,t)}};sf.className="SeparableConv2D";K.registerClass(sf);var Ll=class extends Da{constructor(t){super(1,t),Ll.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){let t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!ug(t.kernelSize,"number",1,1))throw new L(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}};Ll.className="Conv1D";K.registerClass(Ll);var af=class extends Ct{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return M(()=>{if(t=xt(t),this.dataFormat==="channelsLast"){let o=Am(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Am(o,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=Am(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Am(o,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};af.className="Cropping2D";K.registerClass(af);var lf=class extends Ct{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,nk(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){let e=t[2]==null?null:this.size[0]*t[2],o=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,o]}else{let e=t[1]==null?null:this.size[0]*t[1],o=t[2]==null?null:this.size[1]*t[2];return[t[0],e,o,t[3]]}}call(t,e){return M(()=>{let o=xt(t),n=o.shape;if(this.dataFormat==="channelsFirst"){o=kt(o,[0,2,3,1]);let s=this.size[0]*n[2],i=this.size[1]*n[3],a=this.interpolation==="nearest"?Hr.resizeNearestNeighbor(o,[s,i]):Hr.resizeBilinear(o,[s,i]);return kt(a,[0,3,1,2])}else{let s=this.size[0]*n[1],i=this.size[1]*n[2];return this.interpolation==="nearest"?Hr.resizeNearestNeighbor(o,[s,i]):Hr.resizeBilinear(o,[s,i])}})}getConfig(){let t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}};lf.className="UpSampling2D";K.registerClass(lf);function CU(r,t,e=[1,1],o="valid",n,s){return M(()=>{n==null&&(n=Rr()),ce(n);let i=uf(r,n);if(r.rank!==4)throw new L(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new L(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Nn(i,t,e,o==="same"?"same":"valid","NHWC",s),n==="channelsFirst"&&(i=kt(i,[0,3,1,2])),i})}var cf=class extends Ol{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=qt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ye(t.depthwiseConstraint),this.depthwiseRegularizer=Zt(t.depthwiseRegularizer)}build(t){if(t=Dt(t),t.length<4)throw new L(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);let e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new L(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);let o=t[e],n=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return M(()=>{t=xt(t);let o=CU(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=Fr(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2],n=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=jr(e,this.kernelSize[0],this.padding,this.strides[0]),i=jr(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],n,s,i]:[t[0],s,i,n]}getConfig(){let t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ne(this.depthwiseInitializer),t.depthwiseRegularizer=Ht(this.depthwiseRegularizer),t.depthwiseConstraint=xe(this.depthwiseRegularizer),t}};cf.className="DepthwiseConv2D";K.registerClass(cf);function D0(r,t,e,o){if(Array.isArray(r)){if(t!=null||e!=null)throw new L("When inputs is an array, neither initialState or constants should be provided");o!=null&&(e=r.slice(r.length-o,r.length),r=r.slice(0,r.length-o)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function n(s){return s==null||Array.isArray(s)?s:[s]}return t=n(t),e=n(e),{inputs:r,initialState:t,constants:e}}function R0(r,t,e,o=!1,n,s,i=!1,a=!1){return M(()=>{let l=t.shape.length;if(l<3)throw new L(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(Dr(2,l));if(t=kt(t,u),s!=null)throw new gt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),n!=null&&(n=X(X(n,"bool"),"float32"),n.rank===l-1&&(n=Ne(n,-1)),n=kt(n,u)),o&&(t=Be(t,0),n!=null&&(n=Be(n,0)));let c=[],p,m=e,f=t.shape[0],h=Ge(t),d;n!=null&&(d=Ge(n));for(let x=0;x<f;++x){let b=h[x],w=M(()=>r(b,m));if(n==null)p=w[0],m=w[1];else{let C=M(()=>{let v=d[x],$=tt(He(v),v),R=U(A(w[0],v),A(m[0],$)),F=m.map((O,P)=>U(A(w[1][P],v),A(O,$)));return{output:R,newStates:F}});p=C.output,m=C.newStates}a&&c.push(p)}let g;return a&&(g=Ie(c,1)),[p,g,m]})}var xo=class extends Ct{constructor(t){super(t);let e;if(t.cell==null)throw new L("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new Cp({cells:t.cell}):e=t.cell,e.stateSize==null)throw new L("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Yt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Dr(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){bg(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);let o=e[0],n;if(this.returnSequences?n=[t[0],t[1],o]:n=[t[0],o],this.returnState){let s=[];for(let i of e)s.push([t[0],i]);return[n].concat(s)}else return n}computeMask(t,e){return M(()=>{Array.isArray(e)&&(e=e[0]);let o=this.returnSequences?e:null;if(this.returnState){let n=this.states.map(s=>null);return[o].concat(n)}else return o})}get states(){if(this.states_==null){let t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let o=0;o<t;++o)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new gt("Constants support is not implemented in RNN yet.");bg(t)&&(t=t[0]),t=t;let o=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Yt({shape:[o,null,...n]});let s=[t[0]].concat(t.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!y.arraysEqual(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new L(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Yt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){M(()=>{if(!this.stateful)throw new Kr("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>oe([o,n])):this.states_=[oe([o,this.cell.stateSize])];else if(t==null)yt(this.states_),this.keptStates!=null&&(yt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(n=>oe([o,n])):this.states_[0]=oe([o,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):yt(this.states_);for(let n=0;n<this.states_.length;++n){let s=t[n],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[n]:this.cell.stateSize,a=[o,i];if(!y.arraysEqual(s.shape,a))throw new L(`State ${n} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[n]=s}}this.states_=this.states_.map(n=>le(n.clone()))})}apply(t,e){let o=e==null?null:e.initialState,n=e==null?null:e.constants;e==null&&(e={});let s=D0(t,o,n,this.numConstants);t=s.inputs,o=s.initialState,n=s.constants;let i=[],a=[];if(o!=null){e.initialState=o,i=i.concat(o),this.stateSpec=[];for(let u of o)this.stateSpec.push(new Yt({shape:u.shape}));a=a.concat(this.stateSpec)}if(n!=null&&(e.constants=n,i=i.concat(n),this.numConstants=n.length),i[0]instanceof Tr){let u=[t].concat(i),c=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return M(()=>{let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;t=xt(t),s==null&&(this.stateful?s=this.states_:s=this.getInitialState(t));let i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new L(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let a={training:n},u=R0((h,d)=>{let g=this.cell.call([h].concat(d),a);return[g[0],g.slice(1)]},t,s,this.goBackwards,o,null,this.unroll,this.returnSequences),c=u[0],p=u[1],m=u[2];this.stateful&&this.resetStates(m,n);let f=this.returnSequences?p:c;return this.returnState?[f].concat(m):f})}getInitialState(t){return M(()=>{let e=oe(t.shape);return e=st(e,[1,2]),e=Zs(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?gg(e,[1,o]):e):this.cell.stateSize>1?[gg(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){let t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===xo.className&&(e.cell={className:this.cell.getClassName(),config:o}),Object.assign(Object.assign(Object.assign({},o),t),e)}static fromConfig(t,e,o={}){let n=e.cell,s=no(n,o);return new t(Object.assign(e,{cell:s}))}};xo.className="RNN";K.registerClass(xo);var _a=class extends Ct{},bp=class extends _a{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$e(this.units,"units"),this.activation=on(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=qt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Zt(t.kernelRegularizer),this.recurrentRegularizer=Zt(t.recurrentRegularizer),this.biasRegularizer=Zt(t.biasRegularizer),this.kernelConstraint=ye(t.kernelConstraint),this.recurrentConstraint=ye(t.recurrentConstraint),this.biasConstraint=ye(t.biasConstraint),this.dropout=El([1,en([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=El([1,en([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Dt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return M(()=>{if(t=t,t.length!==2)throw new L(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let o=t[1];t=t[0];let n=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ei({ones:()=>He(t),rate:this.dropout,training:n,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ei({ones:()=>He(o),rate:this.recurrentDropout,training:n,dropoutFunc:this.dropoutFunc}));let s,i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?s=Oo(A(t,i),this.kernel.read()):s=Oo(t,this.kernel.read()),this.bias!=null&&(s=Fr(s,this.bias.read())),a!=null&&(o=A(o,a));let l=U(s,Oo(o,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:rn(this.activation),useBias:this.useBias,kernelInitializer:ne(this.kernelInitializer),recurrentInitializer:ne(this.recurrentInitializer),biasInitializer:ne(this.biasInitializer),kernelRegularizer:Ht(this.kernelRegularizer),recurrentRegularizer:Ht(this.recurrentRegularizer),biasRegularizer:Ht(this.biasRegularizer),activityRegularizer:Ht(this.activityRegularizer),kernelConstraint:xe(this.kernelConstraint),recurrentConstraint:xe(this.recurrentConstraint),biasConstraint:xe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}};bp.className="SimpleRNNCell";K.registerClass(bp);var pf=class extends xo{constructor(t){t.cell=new bp(t),super(t)}call(t,e){return M(()=>{this.cell.dropoutMask!=null&&(yt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(yt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return new t(e)}};pf.className="SimpleRNN";K.registerClass(pf);var wp=class extends _a{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new L("GRUCell does not support reset_after parameter set to true.");this.units=t.units,$e(this.units,"units"),this.activation=on(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=on(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=qt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Zt(t.kernelRegularizer),this.recurrentRegularizer=Zt(t.recurrentRegularizer),this.biasRegularizer=Zt(t.biasRegularizer),this.kernelConstraint=ye(t.kernelConstraint),this.recurrentConstraint=ye(t.recurrentConstraint),this.biasConstraint=ye(t.biasConstraint),this.dropout=El([1,en([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=El([1,en([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Dt(t);let e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return M(()=>{if(t=t,t.length!==2)throw new L(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);let o=e.training==null?!1:e.training,n=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ei({ones:()=>He(t),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ei({ones:()=>He(n),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,a,l,u;0<this.dropout&&this.dropout<1&&(t=A(t,s[0]));let c=Oo(t,this.kernel.read());this.useBias&&(c=Fr(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(n=A(n,i[0]));let p=this.recurrentKernel.read(),[m,f]=Ve(p,[2*this.units,this.units],p.rank-1),h=Oo(n,m),[d,g,x]=Ve(c,3,c.rank-1),[b,w]=Ve(h,2,h.rank-1);a=this.recurrentActivation.apply(U(d,b)),l=this.recurrentActivation.apply(U(g,w));let C=Oo(A(l,n),f);u=this.activation.apply(U(x,C));let v=U(A(a,n),A(U(1,_t(a)),u));return[v,v]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:rn(this.activation),recurrentActivation:rn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ne(this.kernelInitializer),recurrentInitializer:ne(this.recurrentInitializer),biasInitializer:ne(this.biasInitializer),kernelRegularizer:Ht(this.kernelRegularizer),recurrentRegularizer:Ht(this.recurrentRegularizer),biasRegularizer:Ht(this.biasRegularizer),activityRegularizer:Ht(this.activityRegularizer),kernelConstraint:xe(this.kernelConstraint),recurrentConstraint:xe(this.recurrentConstraint),biasConstraint:xe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}};wp.className="GRUCell";K.registerClass(wp);var mf=class extends xo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new wp(t),super(t)}call(t,e){return M(()=>{this.cell.dropoutMask!=null&&(yt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(yt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};mf.className="GRU";K.registerClass(mf);var Oa=class extends _a{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,$e(this.units,"units"),this.activation=on(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=on(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=qt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Zt(t.kernelRegularizer),this.recurrentRegularizer=Zt(t.recurrentRegularizer),this.biasRegularizer=Zt(t.biasRegularizer),this.kernelConstraint=ye(t.kernelConstraint),this.recurrentConstraint=ye(t.recurrentConstraint),this.biasConstraint=ye(t.biasConstraint),this.dropout=El([1,en([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=El([1,en([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Dt(t);let o=t[t.length-1];this.kernel=this.addWeight("kernel",[o,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let n;if(this.useBias){if(this.unitForgetBias){let s=this.biasInitializer,i=this.units;n=new(e=class extends _r{apply(l,u){let c=s.apply([i]),p=new Al().apply([i]),m=s.apply([i*2]);return x0(x0(c,p),m)}},e.className="CustomInit",e)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return M(()=>{let o=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new L(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let n=t[1],s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ei({ones:()=>He(t),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ei({ones:()=>He(n),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,l,u,c,p;0<this.dropout&&this.dropout<1&&(t=A(t,i[0]));let m=Oo(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(n=A(n,a[0])),m=U(m,Oo(n,this.recurrentKernel.read())),this.useBias&&(m=Fr(m,this.bias.read()));let[f,h,d,g]=Ve(m,4,m.rank-1);l=this.recurrentActivation.apply(f),u=this.recurrentActivation.apply(h),c=U(A(u,s),A(l,this.activation.apply(d))),p=this.recurrentActivation.apply(g);let x=A(p,this.activation.apply(c));return[x,x,c]})}getConfig(){let t=super.getConfig(),e={units:this.units,activation:rn(this.activation),recurrentActivation:rn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ne(this.kernelInitializer),recurrentInitializer:ne(this.recurrentInitializer),biasInitializer:ne(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ht(this.kernelRegularizer),recurrentRegularizer:Ht(this.recurrentRegularizer),biasRegularizer:Ht(this.biasRegularizer),activityRegularizer:Ht(this.activityRegularizer),kernelConstraint:xe(this.kernelConstraint),recurrentConstraint:xe(this.recurrentConstraint),biasConstraint:xe(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}};Oa.className="LSTMCell";K.registerClass(Oa);var ff=class extends xo{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Oa(t),super(t)}call(t,e){return M(()=>{this.cell.dropoutMask!=null&&(yt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(yt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}};ff.className="LSTM";K.registerClass(ff);var Cp=class extends _a{constructor(t){super(t),this.cells=t.cells}get stateSize(){let t=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return M(()=>{t=t;let o=t.slice(1),n=[];for(let a of this.cells.slice().reverse())Array.isArray(a.stateSize)?n.push(o.splice(0,a.stateSize.length)):n.push(o.splice(0,1));n.reverse();let s=[],i;for(let a=0;a<this.cells.length;++a){let l=this.cells[a];o=n[a],a===0?i=[t[0]].concat(o):i=[i[0]].concat(o),i=l.call(i,e),s.push(i.slice(1))}o=[];for(let a of s.slice().reverse())o.push(...a);return[i[0]].concat(o)})}build(t){bg(t)&&(t=t[0]),t=t;let e;this.cells.forEach((o,n)=>{tn(`RNNCell_${n}`,()=>{o.build(t),Array.isArray(o.stateSize)?e=o.stateSize[0]:e=o.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){let t=super.getConfig(),e=s=>({className:s.getClassName(),config:s.getConfig()}),n={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),n)}static fromConfig(t,e,o={}){let n=[];for(let s of e.cells)n.push(no(s,o));return new t({cells:n})}get trainableWeights(){if(!this.trainable)return[];let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let o of this.cells)e.push(...o.trainableWeights);return e.concat(t)}return t}getWeights(){let t=[];for(let e of this.cells)t.push(...e.weights);return Mm(t)}setWeights(t){let e=[];for(let o of this.cells){let n=o.weights.length,s=t.splice(n);for(let i=0;i<o.weights.length;++i)e.push([o.weights[i],s[i]])}fp(e)}};Cp.className="StackedRNNCells";K.registerClass(Cp);function ei(r){let{ones:t,rate:e,training:o=!1,count:n=1,dropoutFunc:s}=r,i=()=>s!=null?s(t(),e):yg(t(),e),a=()=>Ea(i,t,o);return!n||n<=1?le(a().clone()):Array(n).fill(void 0).map(a).map(u=>le(u.clone()))}var TU=function(r,t){var e={};for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&t.indexOf(o)<0&&(e[o]=r[o]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var n=0,o=Object.getOwnPropertySymbols(r);n<o.length;n++)t.indexOf(o[n])<0&&Object.prototype.propertyIsEnumerable.call(r,o[n])&&(e[o[n]]=r[o[n]]);return e};var ox=class extends xo{constructor(t){if(t.unroll)throw new gt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new gt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Yt({ndim:5})]}call(t,e){return M(()=>{if(this.cell.dropoutMask!=null&&(yt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(yt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new L("ConvRNN2D cell does not support constants");let o=e==null?null:e.mask,n=e==null?null:e.training,s=e==null?null:e.initialState;return super.call(t,{mask:o,training:n,initialState:s})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return M(()=>{let{stateSize:e}=this.cell,o=t.shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)],i=oe(s);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){M(()=>{if(!this.stateful)throw new Kr("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,n=this.computeSingleOutputShape(o),s=[n[0],...n.slice(2)];if(o[0]==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>oe(s)):this.states_=[oe(s)];else if(t==null)yt(this.states_),this.keptStates!=null&&(yt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>oe(s)):this.states_[0]=oe(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):yt(this.states_);for(let a=0;a<this.states_.length;++a){let l=t[a],u=s;if(!y.arraysEqual(l.shape,u))throw new L(`State ${a} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>le(a.clone()))})}computeSingleOutputShape(t){let{dataFormat:e,filters:o,kernelSize:n,padding:s,strides:i,dilationRate:a}=this.cell,l=e==="channelsFirst",u=t[l?3:2],c=t[l?4:3],p=jr(u,n[0],s,i[0],a[0]),m=jr(c,n[1],s,i[1],a[1]);return[...t.slice(0,2),...l?[o,p,m]:[p,m,o]]}};ox.className="ConvRNN2D";var Tp=class extends Oa{constructor(t){let{filters:e,kernelSize:o,strides:n,padding:s,dataFormat:i,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,$e(this.filters,"filters"),this.kernelSize=Aa(o,2,"kernelSize"),this.kernelSize.forEach(l=>$e(l,"kernelSize")),this.strides=Aa(n||1,2,"strides"),this.strides.forEach(l=>$e(l,"strides")),this.padding=s||"valid",Ar(this.padding),this.dataFormat=i||"channelsLast",ce(this.dataFormat),this.dilationRate=Aa(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>$e(l,"dilationRate"))}build(t){var e;t=Dt(t);let o=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[o]==null)throw new L(`The channel dimension of the input should be defined. Found ${t[o]}`);let n=t[o],s=4,i=this.kernelSize.concat([n,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let a=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){let u=this.biasInitializer,c=this.filters;l=new(e=class extends _r{apply(m,f){let h=u.apply([c]),d=Me([c]),g=u.apply([c*2]);return op([h,d,g])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return M(()=>{if(t.length!==3)throw new L(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let o=e.training||!1,n=t[0],s=t[1],i=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ei({ones:()=>He(n),rate:this.dropout,training:o,count:a,dropoutFunc:this.dropoutFunc}));let l=this.dropoutMask,u=(et,rt,at)=>!rt||!rt[at]?et:A(rt[at],et),c=u(n,l,0),p=u(n,l,1),m=u(n,l,2),f=u(n,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ei({ones:()=>He(s),rate:this.recurrentDropout,training:o,count:a,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,d=u(s,h,0),g=u(s,h,1),x=u(s,h,2),b=u(s,h,3),w=3,[C,v,$,R]=Ve(this.kernel.read(),a,w),[F,O,P,B]=this.useBias?Ve(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,C,F,this.padding),p=this.inputConv(p,v,O,this.padding),m=this.inputConv(m,$,P,this.padding),f=this.inputConv(f,R,B,this.padding);let[V,G,H,W]=Ve(this.recurrentKernel.read(),a,w);d=this.recurrentConv(d,V),g=this.recurrentConv(g,G),x=this.recurrentConv(x,H),b=this.recurrentConv(b,W);let j=this.recurrentActivation.apply(U(c,d)),Z=this.recurrentActivation.apply(U(p,g)),q=U(A(Z,i),A(j,this.activation.apply(U(m,x)))),J=A(this.recurrentActivation.apply(U(f,b)),this.activation.apply(q));return[J,J,q]})}getConfig(){let t=super.getConfig(),{units:e}=t,o=TU(t,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},o),n)}inputConv(t,e,o,n){let s=Gr(t,e,this.strides,n||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?Fr(s,o,this.dataFormat):s}recurrentConv(t,e){return Gr(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};Tp.className="ConvLSTM2DCell";K.registerClass(Tp);var hf=class extends ox{constructor(t){let e=new Tp(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}};hf.className="ConvLSTM2D";K.registerClass(hf);var Ip=class extends Ct{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;let e=t.shape,o=[];for(let n=0;n<this.noiseShape.length;++n)o.push(this.noiseShape[n]==null?e[n]:this.noiseShape[n]);return o}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t);if(0<this.rate&&this.rate<1){let n=e.training==null?!1:e.training,s=this.getNoiseShape(o);return Ea(()=>yg(o,this.rate,s,this.seed),()=>o,n)}return t})}getConfig(){let t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}};Ip.className="Dropout";K.registerClass(Ip);var df=class extends Ip{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){let e=t.shape;return[e[0],1,e[2]]}};df.className="SpatialDropout1D";K.registerClass(df);var gf=class extends Ct{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,$e(this.units,"units"),this.activation=on(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=qt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=qt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ye(t.kernelConstraint),this.biasConstraint=ye(t.biasConstraint),this.kernelRegularizer=Zt(t.kernelRegularizer),this.biasRegularizer=Zt(t.biasRegularizer),this.activityRegularizer=Zt(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Dt(t);let e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Dt(t);let e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t),n=cg(this.activation.getClassName()),s;return n!=null?s=Oo(o,this.kernel.read(),n,this.bias?this.bias.read():null):(s=Oo(o,this.kernel.read()),this.bias!=null&&(s=Fr(s,this.bias.read())),this.activation!=null&&(s=this.activation.apply(s))),s})}getConfig(){let t={units:this.units,activation:rn(this.activation),useBias:this.useBias,kernelInitializer:ne(this.kernelInitializer),biasInitializer:ne(this.biasInitializer),kernelRegularizer:Ht(this.kernelRegularizer),biasRegularizer:Ht(this.biasRegularizer),activityRegularizer:Ht(this.activityRegularizer),kernelConstraint:xe(this.kernelConstraint),biasConstraint:xe(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}};gf.className="Dense";K.registerClass(gf);var xf=class extends Ct{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Dt(t);for(let e of t.slice(1))if(e==null)throw new L(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],_o(t,1)]}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t);if(this.dataFormat==="channelsFirst"&&o.rank>1){let n=[0];for(let s=2;s<o.rank;++s)n.push(s);n.push(1),o=kt(o,n)}return uk(o)})}getConfig(){let t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);let e=super.getConfig();return Object.assign(t,e),t}};xf.className="Flatten";K.registerClass(xf);var yf=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.activation=on(t.activation)}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t);return this.activation.apply(o)})}getConfig(){let t={activation:rn(this.activation)},e=super.getConfig();return Object.assign(t,e),t}};yf.className="Activation";K.registerClass(yf);var bf=class extends Ct{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return M(()=>(t=xt(t),ak(t,this.n)))}getConfig(){let t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}};bf.className="RepeatVector";K.registerClass(bf);var wf=class extends Ct{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){let o="Total size of new array must be unchanged.",n=e.slice(),s=1,i=null;for(let l=0;l<n.length;++l){let u=n[l];if(this.isUnknown(u))if(i===null)i=l;else throw new L("Can only specifiy one unknown dimension.");else s*=u}let a=_o(t);if(i!==null){if(s===0||a%s!==0)throw new L(o);n[i]=a/s}else if(a!==s)throw new L(o);return n}computeOutputShape(t){let e=!1;for(let o=0;o<t.length;++o)if(this.isUnknown(t[o])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t),n=o.shape,s=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return D(o,s)})}getConfig(){let t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}};wf.className="Reshape";K.registerClass(wf);var Cf=class extends Ct{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);let e=Dr(1,t.dims.length+1);if(!y.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Yt({ndim:this.dims.length+1})]}computeOutputShape(t){t=Dt(t);let e=t.slice();return this.dims.forEach((o,n)=>{e[n+1]=t[o]}),e}call(t,e){return kt(xt(t),this.dimsIncludingBatch)}getConfig(){let t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}};Cf.className="Permute";K.registerClass(Cf);var Tf=class extends Ct{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){let o=xt(t),n=-1;return ml(Zo(o,this.maskValue),n)}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t),n=-1,s=!0,i=ml(Zo(o,this.maskValue),n,s);return A(o,X(i,o.dtype))})}};Tf.className="Masking";K.registerClass(Tf);var If=class extends Ct{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Xt(t.inputLength))}this.inputDim=t.inputDim,$e(this.inputDim,"inputDim"),this.outputDim=t.outputDim,$e(this.outputDim,"outputDim"),this.embeddingsInitializer=qt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Zt(t.embeddingsRegularizer),this.activityRegularizer=Zt(t.activityRegularizer),this.embeddingsConstraint=ye(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return M(()=>this.maskZero?(t=xt(t),Zo(t,dt(t))):null)}computeOutputShape(t){if(t=Dt(t),this.inputLength==null)return[...t,this.outputDim];let e=Xt(this.inputLength);if(e.length!==t.length-1)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let o=0;for(let n=0;n<e.length;++n){let s=e[n],i=t[n+1];if(s!=null&&i!=null&&s!==i)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);s==null&&(e[o]=i),o++}}return[t[0],...e,this.outputDim]}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t);o.dtype!=="int32"&&(o=wr(o,"int32"));let n=xg(this.embeddings.read(),D(o,[o.size]));return D(n,Dt(this.computeOutputShape(o.shape)))})}getConfig(){let t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ne(this.embeddingsInitializer),embeddingsRegularizer:Ht(this.embeddingsRegularizer),activityRegularizer:Ht(this.activityRegularizer),embeddingsConstraint:xe(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}};If.className="Embedding";K.registerClass(If);var ri=class extends Ct{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new gt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;let o=t.slice(0,t.length-e.length);for(let n=0;n<e.length;++n){let s=t[t.length-e.length+n],i=e[n];if(s==null||i==null||s<0||i<0)o.push(null);else if(s===1)o.push(i);else if(i===1)o.push(s);else{if(s!==i)throw new L("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));o.push(s)}}return o}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Dt(t)]),t=t,t.length<2)throw new L(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(let s of t)s!=null&&s[0]!==null&&e.push(s[0]);if(e=Fo(e),e.length>1)throw new L(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let o=t[0]==null?null:t[0].slice(1);for(let s=1;s<t.length;++s){let i=t[s]==null?null:t[s].slice(1);o=this.computeElementwiseOpOutputShape(o,i)}let n=t.map(s=>s.length);t.indexOf(null)===-1&&Fo(n).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return M(()=>{if(t=t,this.reshapeRequired){let o=[],n=t.map(s=>s.rank);if(n.indexOf(null)===-1){let s=en(n);for(let i of t){let a=i.rank;for(let l=0;l<s-a;++l)i=Zs(i,1);o.push(i)}return this.mergeFunction(o)}else{let s=!1;for(let l of t){let u=l.rank;if(u==null){let c=l.shape,p=c[0],m=c.slice(1).concat([p]),f=D(l,[p].concat(_o(c.slice(1))));f=kt(f,[1,0]),f=D(f,m),o.push(f),s=!0}else if(u>1){let c=Dr(1,u).concat([0]);o.push(kt(l,c)),s=!0}else o.push(l)}let i=this.mergeFunction(o),a=i.rank;if(s){if(a==null){let l=i.shape,u=l.length,c=l[u-1],p=[c].concat(l.slice(0,l.length-1));i=D(kt(D(i,[-1,c]),[1,0]),p)}else if(a>1){let l=[a-1].concat(Dr(0,a-1));i=kt(i,l)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let n=1;n<t.length;++n){let s=t[n]==null?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let o=[];for(let n of t)n!=null&&n[0]!==null&&o.push(n[0]);return o=Fo(o),o.length===1?e=o.concat(e):e=[null].concat(e),e}computeMask(t,e){return M(()=>{if(e==null)return null;if(!Array.isArray(e))throw new L("`mask` should be an Array");if(!Array.isArray(t))throw new L("`inputs` should be an Array");if(e.length!==t.length)throw new L(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(n=>n==null))return null;e=e.map(n=>n==null?n:Ne(n,0));let o=e[0];for(let n=1;n<e.length-1;++n)o=pr(o,e[n]);return o})}},vf=class extends ri{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=U(e,t[o]);return e})}};vf.className="Add";K.registerClass(vf);var Nf=class extends ri{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=A(e,t[o]);return e})}};Nf.className="Multiply";K.registerClass(Nf);var kf=class extends ri{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0].clone();for(let o=1;o<t.length;++o)e=U(e,t[o]);return A(1/t.length,e)})}};kf.className="Average";K.registerClass(kf);var Ef=class extends ri{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0];for(let o=1;o<t.length;++o)e=Ur(e,t[o]);return e})}};Ef.className="Maximum";K.registerClass(Ef);var $f=class extends ri{constructor(t){super(t)}mergeFunction(t){return M(()=>{let e=t[0];for(let o=1;o<t.length;++o)e=An(e,t[o]);return e})}};$f.className="Minimum";K.registerClass($f);var Af=class extends ri{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new L("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(let n of t)if(n!=null){e=!1;break}if(e)return;let o=[];for(let n=0;n<t.length;++n){let s=t[n].slice();s.splice(this.axis,1);let i=!1;for(let a of o)if(y.arraysEqual(a,s)){i=!0;break}i||o.push(s)}if(o.length>1)throw new L("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return M(()=>op(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new L("A `Concatenate` layer should be called on a list of inputs.");let e=t,o=e[0].slice(),n=this.axis<0?o.length+this.axis:this.axis;for(let s of e.slice(1)){if(o[n]==null||s[n]==null){o[n]=null;break}o[n]+=s[n]}return o}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new L("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new L("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new L(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return M(()=>{let o=!0;if(e.forEach(i=>{if(i!=null){o=!1;return}}),o)return null;let n=[];for(let i=0;i<t.length;++i)e[i]==null?n.push(X(He(t[i]),"bool")):e[i].rank<t[i].rank?n.push(Ne(e[i],-1)):n.push(e[i]);let s=Bt(n,this.axis);return Tc(s,-1,!1)})}getConfig(){let t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}};Af.className="Concatenate";K.registerClass(Af);function Sf(r,t){for(;r<0;)r+=t;return r}function IU(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new gt("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),y.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new gt("batchDot is not implemented for complex64-type Tensors yet.");let o=r.shape.length,n=t.shape.length;e==null&&(e=[o-1,n-2]);let s=e;return M(()=>{let i;if(o>n){i=o-n;let l=[];for(let u=0;u<i;++u)l.push(1);t=D(t,t.shape.concat(l))}else if(n>o){i=n-o;let l=[];for(let u=0;u<i;++u)l.push(1);r=D(r,r.shape.concat(l))}else i=0;let a;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?a=st(A(r,t),s[0]):a=st(A(kt(r,[1,0]),t),s[1]);else{let l=s[0]!==r.shape.length-1,u=s[1]===t.shape.length-1;a=At(r,t,l,u)}if(i>0){let l;o>n?l=o+n-3:l=o-1;let u=[];for(let c=l;c<l+i;++c)u.push(c);a=oo(a,u)}return a.shape.length===1&&(a=Ne(a,1)),a})}var Df=class extends ri{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0],o=t[1];if(e.length>3||o.length>3)throw new gt("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(e,o);if(e[n[0]]!==o[n[1]])throw new L(`Dimension incompatibility: ${e[n[0]]} !== ${o[n[1]]}`)}mergeFunction(t){if(t.length!==2)throw new L(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],o=t[1],n;return Array.isArray(this.axes)?n=this.axes.map((s,i)=>Sf(s,t[i].shape.length)):n=[Sf(this.axes,e.shape.length),Sf(this.axes,o.shape.length)],this.normalize&&(e=Um(e,n[0]),o=Um(o,n[1])),IU(e,o,n)}interpretAxes(t,e){let o;return Array.isArray(this.axes)?o=this.axes:o=[Sf(this.axes,t.length),Sf(this.axes,e.length)],o}computeOutputShape(t){y.assert(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let e=t[0].slice(),o=t[1].slice();if(e.length>3||o.length>3)throw new gt("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(e,o);e.splice(n[0],1),o.splice(n[1],1),o.splice(0,1);let s=e.concat(o);return s.length===1&&s.push(1),s}computeMask(t,e){return null}getConfig(){let t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}};Df.className="Dot";K.registerClass(Df);var Rf=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t);return Ea(()=>U(np(o.shape,0,this.stddev),o),()=>o,e.training||!1)})}};Rf.className="GaussianNoise";K.registerClass(Rf);var Ff=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return M(()=>{this.invokeCallHook(t,e);let o=xt(t);return this.rate>0&&this.rate<1?Ea(()=>{let s=Math.sqrt(this.rate/(1-this.rate));return A(o,np(o.shape,1,s))},()=>o,e.training||!1):o})}};Ff.className="GaussianDropout";K.registerClass(Ff);var _f=class extends Ct{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||xt(t).shape}computeOutputShape(t){return t}getConfig(){let t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return M(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(t);return Ea(()=>{let s=xt(t),i=1.6732632423543772,a=1.0507009873554805,l=-i*a,u=Er(Dn(o),this.rate);u=wr(u,"float32");let c=((1-this.rate)*(1+this.rate*l**2))**-.5,p=-c*l*this.rate,m=U(A(s,u),A(U(u,-1),l));return U(A(m,c),p)},()=>xt(t),e.training||!1)}return t})}};_f.className="AlphaDropout";K.registerClass(_f);function Of(r,t,e,o,n,s=.001){let i;if(r.rank===2)i=ed(r,t,e,o,n,s);else if(r.rank===3)i=rd(r,t,e,o,n,s);else if(r.rank===4)i=od(r,t,e,o,n,s);else throw new gt(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function SU(r,t,e,o,n=.001){return M(()=>{let s=gl(r,o),i=s.mean,a=s.variance;return[Of(r,i,a,e,t,n),i,a]})}function vU(r,t,e,o,n=.001){return M(()=>{let s=gl(r,o),i=s.mean,a=s.variance,l=[];for(let h of Dr(0,r.rank))o.indexOf(h)!==-1?l.push(1):l.push(r.shape[h]);let u=D(i,l),c=D(a,l),p=t==null?null:D(t,l),m=e==null?null:D(e,l);return[Of(r,u,c,m,p,n),i,a]})}function NU(r,t,e,o,n=.001){return y.arraysEqual(o.slice().sort(),Dr(0,r.rank-1))?SU(r,t,e,o,n):vU(r,t,e,o,n)}var Lf=class extends Ct{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=qt(t.betaInitializer||"zeros"),this.gammaInitializer=qt(t.gammaInitializer||"ones"),this.movingMeanInitializer=qt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=qt(t.movingVarianceInitializer||"ones"),this.betaConstraint=ye(t.betaConstraint),this.gammaConstraint=ye(t.gammaConstraint),this.betaRegularizer=Zt(t.betaRegularizer),this.gammaRegularizer=Zt(t.gammaRegularizer)}build(t){t=Dt(t);let e=this.axis>=0?this.axis:this.axis+t.length,o=t[e];if(o==null)throw new L(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Yt({ndim:t.length,axes:{[e]:o}})];let n=[o];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return M(()=>{let o=e.training==null?!1:e.training,n=xt(t),s=n.shape,i=s.length,a=Dr(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);let u=Do(1,i);u[l]=s[l];let c=a.slice();c.sort();let p=!y.arraysEqual(c,Dr(0,i).slice(0,i-1)),m=()=>{if(p){let b=D(this.movingMean.read(),u),w=D(this.movingVariance.read(),u),C=this.center?D(this.beta.read(),u):null,v=this.scale?D(this.gamma.read(),u):null;return Of(n,b,w,C,v,this.epsilon)}else return Of(n,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return m();let[f,h,d]=NU(n,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,w,C)=>{M(()=>{let v=1-C,$=b.read(),R=A(tt($,w),v);b.write(tt($,R))})};return(()=>{g(this.movingMean,h,this.momentum),g(this.movingVariance,d,this.momentum)})(),f})}getConfig(){let t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ne(this.betaInitializer),gammaInitializer:ne(this.gammaInitializer),movingMeanInitializer:ne(this.movingMeanInitializer),movingVarianceInitializer:ne(this.movingVarianceInitializer),betaRegularizer:Ht(this.betaRegularizer),gammaRegularizer:Ht(this.gammaRegularizer),betaConstraint:xe(this.betaConstraint),gammaConstraint:xe(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}};Lf.className="BatchNormalization";K.registerClass(Lf);var Pf=class extends Ct{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=qt(t.betaInitializer||"zeros"),this.gammaInitializer=qt(t.gammaInitializer||"ones"),this.betaRegularizer=Zt(t.betaRegularizer),this.gammaRegularizer=Zt(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Dt(t);let e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(let s of this.axis)if(s<0||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==Fo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(s=>t[s]),n=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,n):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,n):this.beta=null,this.built=!0}call(t,e){let o=xt(t),n=o.shape,s=n.length;return M(()=>{let{mean:a,variance:l}=gl(o,this.axis,!0),u=Do(1,s);for(let d of this.axis)u[d]=n[d];let c=d=>d!=null&&d.shape.length!==s?D(d,u):d,p=this.scale?c(this.gamma.read()):null,m=this.center?c(this.beta.read()):null,f=[],h=[];for(let d=0;d<s;++d)this.axis.indexOf(d)!==-1?(f.push(n[d]),h.push(1)):(f.push(1),h.push(n[d]));return a=nr(a,f),l=nr(l,f),p!=null&&(p=nr(p,h)),m!=null&&(m=nr(m,h)),Of(o,a,l,m,p,this.epsilon)})}getConfig(){let t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ne(this.betaInitializer),gammaInitializer:ne(this.gammaInitializer),betaRegularizer:Ht(this.betaRegularizer),gammaRegularizer:Ht(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}};Pf.className="LayerNormalization";K.registerClass(Pf);function kU(r,t,e){return M(()=>{if(r.rank!==4)throw new L(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new L("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=Rr()),e!=="channelsLast"&&e!=="channelsFirst")throw new L(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let o;return e==="channelsFirst"?o=[[0,0],[0,0],t[0],t[1]]:o=[[0,0],t[0],t[1],[0,0]],$r(r,o)})}var zf=class extends Ct{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Rr():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new L(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,o;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],o=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new L(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new L(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);o=t.padding[1]}this.padding=[e,o]}this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(t){t=Dt(t);let e,o;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?o=t[3]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],t[1],e,o]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?o=t[2]+this.padding[1][0]+this.padding[1][1]:o=null,[t[0],e,o,t[3]])}call(t,e){return M(()=>kU(xt(t),this.padding,this.dataFormat))}getConfig(){let t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}};zf.className="ZeroPadding2D";K.registerClass(zf);function ux(r,t,e,o,n,s){return M(()=>{ce(n),f0(s),Ar(o),e==null&&(e=[1,1]),o==null&&(o="valid"),n==null&&(n=Rr()),s==null&&(s="max"),r=uf(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=ba(r,t,e,a):i=ma(r,t,e,a),n==="channelsFirst"&&(i=kt(i,[0,3,1,2])),i})}function Wk(r,t,e,o,n,s){return M(()=>{ce(n),f0(s),Ar(o),e==null&&(e=[1,1,1]),o==null&&(o="valid"),n==null&&(n=Rr()),s==null&&(s="max"),r=A0(r,n);let i,a=o==="same"?"same":"valid";return s==="max"?i=kd(r,t,e,a):i=td(r,t,e,a),n==="channelsFirst"&&(i=kt(i,[0,4,1,2,3])),i})}var nx=class extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new L(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if($e(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new L(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);$e(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Ar(this.padding),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(t){t=Dt(t);let e=jr(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return M(()=>{this.invokeCallHook(t,e),t=Zs(xt(t),2);let o=this.poolingFunction(xt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return oo(o,[2])})}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}},Mf=class extends nx{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Ar(n),ux(t,e,o,n,s,"max")}};Mf.className="MaxPooling1D";K.registerClass(Mf);var Bf=class extends nx{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Ar(n),ux(t,e,o,n,s,"avg")}};Bf.className="AveragePooling1D";K.registerClass(Bf);var sx=class extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new L(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];$e(this.poolSize,"poolSize"),$e(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),Ar(this.padding),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=jr(e,this.poolSize[0],this.padding,this.strides[0]),o=jr(o,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,o]:[t[0],e,o,t[3]]}call(t,e){return M(()=>(this.invokeCallHook(t,e),this.poolingFunction(xt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},Vf=class extends sx{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Ar(n),ux(t,e,o,n,s,"max")}};Vf.className="MaxPooling2D";K.registerClass(Vf);var Gf=class extends sx{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Ar(n),ux(t,e,o,n,s,"avg")}};Gf.className="AveragePooling2D";K.registerClass(Gf);var ix=class extends Ct{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new L(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];$e(this.poolSize,"poolSize"),$e(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),Ar(this.padding),this.inputSpec=[new Yt({ndim:5})]}computeOutputShape(t){t=Dt(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],o=this.dataFormat==="channelsFirst"?t[3]:t[2],n=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=jr(e,this.poolSize[0],this.padding,this.strides[0]),o=jr(o,this.poolSize[1],this.padding,this.strides[1]),n=jr(n,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,o,n]:[t[0],e,o,n,t[4]]}call(t,e){return M(()=>(this.invokeCallHook(t,e),this.poolingFunction(xt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},Wf=class extends ix{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Ar(n),Wk(t,e,o,n,s,"max")}};Wf.className="MaxPooling3D";K.registerClass(Wf);var Uf=class extends ix{constructor(t){super(t)}poolingFunction(t,e,o,n,s){return ce(s),Ar(n),Wk(t,e,o,n,s,"avg")}};Uf.className="AveragePooling3D";K.registerClass(Uf);var ax=class extends Ct{constructor(t){super(t),this.inputSpec=[new Yt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new gt}},Hf=class extends ax{constructor(t){super(t||{})}call(t,e){return M(()=>{let o=xt(t);return re(o,1)})}};Hf.className="GlobalAveragePooling1D";K.registerClass(Hf);var Kf=class extends ax{constructor(t){super(t||{})}call(t,e){return M(()=>{let o=xt(t);return Xe(o,1)})}};Kf.className="GlobalMaxPooling1D";K.registerClass(Kf);var lx=class extends Ct{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,ce(this.dataFormat),this.inputSpec=[new Yt({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new gt}getConfig(){let t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},qf=class extends lx{call(t,e){return M(()=>{let o=xt(t);return this.dataFormat==="channelsLast"?re(o,[1,2]):re(o,[2,3])})}};qf.className="GlobalAveragePooling2D";K.registerClass(qf);var jf=class extends lx{call(t,e){return M(()=>{let o=xt(t);return this.dataFormat==="channelsLast"?Xe(o,[1,2]):Xe(o,[2,3])})}};jf.className="GlobalMaxPooling2D";K.registerClass(jf);var cx=class extends Ct{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){let t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,o={}){let n=e.layer,s=no(n,o);delete e.layer;let i={layer:s};return Object.assign(i,e),new t(i)}},Xf=class extends cx{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Dt(t),t.length<3)throw new L(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];let e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Dt(t);let e=[t[0]].concat(t.slice(2)),o=this.layer.computeOutputShape(e),n=t[1];return[o[0],n].concat(o.slice(1))}call(t,e){return M(()=>(t=xt(t),R0((i,a)=>[xt(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}};Xf.className="TimeDistributed";K.registerClass(Xf);function EU(r){Ln(rk,"BidirectionalMergeMode",r)}var $U="concat",Yf=class extends cx{constructor(t){super(t);let e=t.layer.getConfig(),o={};o.className=t.layer.getClassName(),o.config=e,this.forwardLayer=no(o),e.goBackwards=e.goBackwards!==!0;let n={};if(n.className=t.layer.getClassName(),n.config=e,this.backwardLayer=no(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?$U:t.mergeMode,EU(this.mergeMode),t.weights)throw new gt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){let e=t.length,o=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,o)),this.backwardLayer.setWeights(t.slice(o))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let o,n,s;return this.returnState&&(s=e.slice(1)),o=e[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,n=[o]):this.mergeMode==null?n=[o,o.slice()]:n=[o],this.returnState?this.mergeMode==null?n.concat(s).concat(s.slice()):[o].concat(s).concat(s.slice()):Je(n)}apply(t,e){let o=e==null?null:e.initialState,n=e==null?null:e.constants;e==null&&(e={});let s=D0(t,o,n,this.numConstants);if(t=s.inputs,o=s.initialState,n=s.constants,Array.isArray(t)&&(o=t.slice(1),t=t[0]),(o==null||o.length===0)&&n==null)return super.apply(t,e);let i=[],a=[];if(o!=null){let u=o.length;if(u%2>0)throw new L("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=o,i.push(...o);let c=o.map(p=>new Yt({shape:p.shape}));this.forwardLayer.stateSpec=c.slice(0,u/2),this.backwardLayer.stateSpec=c.slice(u/2),a.push(...c)}if(n!=null)throw new gt("Support for constants in Bidirectional layers is not implemented yet.");let l=i[0]instanceof Tr;for(let u of i)if(u instanceof Tr!==l)throw new L("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){let u=[t].concat(i),c=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=c;let m=super.apply(u,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return M(()=>{let o=e.initialState,n,s;if(o==null)n=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{let l=o.slice(0,o.length/2),u=o.slice(o.length/2);n=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:u}))}let i;this.returnState&&(Array.isArray(n)&&(i=n.slice(1).concat(s.slice(1))),n=n[0],s=s[0]),this.returnSequences&&(s=Be(s,1));let a;return this.mergeMode==="concat"?a=op([n,s]):this.mergeMode==="sum"?a=U(n,s):this.mergeMode==="ave"?a=A(.5,U(n,s)):this.mergeMode==="mul"?a=A(n,s):this.mergeMode==null&&(a=[n,s]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){tn(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),tn(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[e,e]:o=e:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let s=this.forwardLayer.states.map(i=>null);return Array.isArray(o)?o.concat(s).concat(s):[o].concat(s).concat(s)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){let t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){let o=no(e.layer);if(delete e.layer,e.numConstants!=null)throw new gt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let n=e;return n.layer=o,new t(n)}};Yf.className="Bidirectional";K.registerClass(Yf);var Zf=class extends Ct{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){let t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return M(()=>(t=xt(t),t.dtype!=="float32"&&(t=wr(t,"float32")),U(A(t,this.scale),this.offset)))}};Zf.className="Rescaling";K.registerClass(Zf);var{resizeBilinear:AU,cropAndResize:DU}=Hr,Jf=class extends Ct{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,o,n,s,i,a,l){return M(()=>{let u,c=!1,p=e/i,m=o/a,f=(n+e)/i,h=(s+o)/a,d=[p,m,f,h],g=[];t.rank===3?(c=!0,u=Ie([t])):u=t;for(let v=0;v<u.shape[0];v++)g.push(d);let x=Ue(g,[g.length,4]),b=Rn(0,g.length,1,"int32"),C=DU(u,x,b,[n,s],"nearest");return c?wr(xt(Ge(C)),l):wr(C,l)})}upsize(t,e,o,n){return M(()=>{let s=AU(t,[e,o]);return wr(s,n)})}call(t,e){return M(()=>{let o=xt(t),n=o.dtype,s=o.shape,i=s[s.length-3],a=s[s.length-2],l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let u=0;return a!==this.width&&(u=Math.floor((a-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(o,l,u,this.height,this.width,i,a,n):this.upsize(t,this.height,this.width,n)})}getConfig(){let t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Dt(t);let e=t.length-3,o=t.length-2;return t[e]=this.height,t[o]=this.width,t}};Jf.className="CenterCrop";K.registerClass(Jf);function Uk(r,t,e,o){let n=xt(r);if(n.dtype!=="int32"&&(n=wr(n,"int32")),t==="int")return n;let s=n.shape;if(n.rank===0&&(n=Ne(n,-1)),t==="oneHot"&&n.shape[n.shape.length-1]!==1&&(n=Ne(n,-1)),n.rank>2)throw new L(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${n.rank}.`);let i=["multiHot","oneHot"].includes(t),a=n,l;if(typeof o<"u"&&t==="count"?l=xm(a,o,e,i):l=xm(a,[],e,i),t!=="tfIdf")return l;if(o)return A(l,o);throw new L("When outputMode is 'tfIdf', weights must be provided.")}var Qf=class extends Ct{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){let t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Dt(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return M(()=>{t=xt(t),t.dtype!=="int32"&&(t=wr(t,"int32"));let o;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new L(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);o=xt(e.countWeights)}let n=Xe(t),s=Ws(t),i=ge(this.numTokens,n).bufferSync().get(0),a=Er(s,0).bufferSync().get(0);if(!(i&&a))throw new L(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return Uk(t,this.outputMode,this.numTokens,o)})}};Qf.className="CategoryEncoding";K.registerClass(Qf);var FU=["bilinear","nearest"],Hk=new Set(FU),th=class extends Ct{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(Hk.has(t.interpolation))this.interpolation=t.interpolation;else throw new L(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Dt(t);let e=t[2];return[this.height,this.width,e]}getConfig(){let t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return M(()=>{let o=[this.height,this.width];if(this.interpolation==="bilinear")return Hr.resizeBilinear(t,o,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Hr.resizeNearestNeighbor(t,o,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Hk]} are supported`)})}};th.className="Resizing";K.registerClass(th);var MU=z();MU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var yo;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF"})(yo||(yo={}));var Kk;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(Kk||(Kk={}));var VU={};function px(r){return VU[r]}function T(r,t,e,o,n){let s=t.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd;if(s.type==="tensor")return Ke(t.inputNames[s.inputIndexStart],e,o,n);if(s.type==="tensors")return t.inputNames.slice(a,l).map(m=>Ke(m,e,o,n));let u=Ke(t.inputNames.slice(a)[0],e,o,n),c=u.dataSync();return s.type==="number"?c[0]:y.toNestedArray(u.shape,c)}let i=t.attrParams[r];return i&&i.value}function Ke(r,t,e,o){let[n,s]=Or(r);if(o!=null){let a=o.getHashTableHandleByName(n);if(a!=null)return a}let i=e.currentContextIds.find(a=>!!t[mx(n,a)]);return i!==void 0?t[mx(n,i)][s]:void 0}function qk(r,t,e){return t[mx(r,e.currentContextId)]}function sn(r,t){let[e,o,n]=Or(r);return[mx(e,t&&t.currentContextId),o,n]}function mx(r,t){return t?`${r}-${t}`:r}function Or(r){let t=r.split(":");if(t.length===1)return[r,0,void 0];let e=t[0],o=t.length===3?t[1]:void 0,n=Number(t[t.length-1]);return[e,n,o]}function eh(r,t,e){let o=T("pad",r,t,e);if(o==="explicit"){o=T("explicitPaddings",r,t,e);let n=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)n[s][0]=o[s*2],n[s][1]=o[s*2+1];return n}return o}function an(r){return r.kept?r:Nr(r)}var F0={};Kt(F0,{json:()=>GU});var GU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var _0={};Kt(_0,{json:()=>WU});var WU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var O0={};Kt(O0,{json:()=>UU});var UU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var L0={};Kt(L0,{json:()=>HU});var HU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var P0={};Kt(P0,{json:()=>KU});var KU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var z0={};Kt(z0,{json:()=>qU});var qU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var M0={};Kt(M0,{json:()=>jU});var jU=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var B0={};Kt(B0,{json:()=>XU});var XU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var V0={};Kt(V0,{json:()=>YU});var YU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var G0={};Kt(G0,{json:()=>ZU});var ZU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var W0={};Kt(W0,{json:()=>JU});var JU=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var U0={};Kt(U0,{json:()=>QU});var QU=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var H0={};Kt(H0,{json:()=>t4});var t4=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var K0={};Kt(K0,{json:()=>e4});var e4=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var q0={};Kt(q0,{json:()=>r4});var r4=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var j0={};Kt(j0,{json:()=>o4});var o4=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var X0={};Kt(X0,{json:()=>n4});var n4=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var Y0={};Kt(Y0,{json:()=>s4});var s4=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var Z0={};Kt(Z0,{json:()=>i4});var i4=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var rh=class{constructor(){let t=[F0,_0,O0,L0,P0,z0,M0,B0,V0,G0,W0,U0,H0,K0,q0,j0,X0,Y0,Z0],e=[].concat(...t.map(o=>o.json));this.opMappers=e.reduce((o,n)=>(o[n.tfOpName]=n,o),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(t,e={}){let o=t.node,n=[],s=[],i=[],a=o.reduce((d,g)=>(d[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?n.push(d[g.name]):g.op==="Const"?s.push(d[g.name]):(g.input==null||g.input.length===0)&&i.push(d[g.name]),d),{}),l=[],u=[],c={},p={};e!=null&&(c=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));let m=Object.keys(a);m.forEach(d=>{let g=a[d];g.inputNames.forEach((x,b)=>{let[w,,C]=sn(x),v=a[w];if(v.outputs!=null){let $=v.outputs.indexOf(C);if($!==-1){let R=`${w}:${$}`;g.inputNames[b]=R}}g.inputs.push(v),v.children.push(g)})}),Object.keys(p).length===0?m.forEach(d=>{let g=a[d];g.children.length===0&&u.push(g)}):Object.keys(p).forEach(d=>{let[g]=sn(d),x=a[g];x!=null&&(x.signatureKey=p[d],u.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(d=>{let[g]=sn(d),x=a[g];x&&(x.signatureKey=c[d],l.push(x))}):l=n;let f={};t.library!=null&&t.library.function!=null&&(f=t.library.function.reduce((d,g)=>(d[g.signature.name]=this.mapFunction(g),d),{}));let h={nodes:a,inputs:l,outputs:u,weights:s,placeholders:n,signature:e,functions:f};return i.length>0&&(h.initNodes=i),h}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,o)=>(e[t[o].name]=o,e),{})}mapNode(t){let e=px(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let o={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(o.inputParams=e.inputs.reduce((n,s)=>(n[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},n),{})),e.attrs!=null&&(o.attrParams=e.attrs.reduce((n,s)=>{let i=s.type,a;switch(s.type){case"string":a=fx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=fx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=wx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=wx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=dx(t.attr,s.tfName,s.defaultValue||0),a===void 0&&s.tfDeprecatedName&&(a=dx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=bx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=bx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=hx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=hx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=Tx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Tx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=yx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=yx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=Cx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Cx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=gx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=gx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=xx(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=xx(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=jk(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=jk(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return n[s.name]={value:a,type:i},n},{})),o}mapFunction(t){let e=t.nodeDef,o=[],n=[],s={};e!=null&&(s=e.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&n.push(p[m.name]),p),{}));let i=[],a=[];t.signature.inputArg.forEach(p=>{let[m]=sn(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:J0(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,i.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach((f,h)=>{let[d,,g]=sn(f),x=s[d];if(x.outputs!=null){let b=x.outputs.indexOf(g);if(b!==-1){let w=`${d}:${b}`;m.inputNames[h]=w}}m.inputs.push(x),x.children.push(m)})});let u=t.ret;t.signature.outputArg.forEach(p=>{let[m,f]=sn(u[p.name]),h=s[m];h!=null&&(h.defaultOutput=f,a.push(h))});let c=this.mapArgsToSignature(t);return{nodes:s,inputs:i,outputs:a,weights:n,placeholders:o,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o),e),{}),outputs:t.signature.outputArg.reduce((e,o)=>(e[o.name]=this.mapArgToTensorInfo(o,t.ret),e),{})}}mapArgToTensorInfo(t,e){let o=t.name;return e!=null&&(o=e[o]),{name:o,dtype:t.type}}};function a4(r){let t=z().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function Xk(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):a4(r);return t?e:e.toLowerCase()}function fx(r,t,e,o=!1){let n=r[t];return n!=null?Xk(n.s,o):e}function hx(r,t,e){let o=r[t];return o?o.b:e}function dx(r,t,e){let o=r[t]||{},n=o.i!=null?o.i:o.f!=null?o.f:e;return typeof n=="number"?n:parseInt(n,10)}function J0(r){switch(typeof r=="string"&&(r=yo[r]),r){case yo.DT_FLOAT:case yo.DT_HALF:return"float32";case yo.DT_INT32:case yo.DT_INT64:case yo.DT_INT8:case yo.DT_UINT8:return"int32";case yo.DT_BOOL:return"bool";case yo.DT_DOUBLE:return"float32";case yo.DT_STRING:return"string";default:return null}}function jk(r,t,e){let o=r[t];return o&&o.func?o.func.name:e}function gx(r,t,e){let o=r[t];return o&&o.type?J0(o.type):e}function xx(r,t,e){let o=r[t];return o&&o.list&&o.list.type?o.list.type.map(n=>J0(n)):e}function Yk(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function yx(r,t,e){let o=r[t];return o&&o.shape?Yk(o.shape):e}function bx(r,t,e){let o=r[t];return o?((o.list.f&&o.list.f.length?o.list.f:o.list.i)||[]).map(n=>typeof n=="number"?n:parseInt(n,10)):e}function wx(r,t,e,o=!1){let n=r[t];return n&&n.list&&n.list.s?n.list.s.map(s=>Xk(s,o)):e}function Cx(r,t,e){let o=r[t];return o&&o.list&&o.list.shape?o.list.shape.map(n=>Yk(n)):e}function Tx(r,t,e){let o=r[t];return o&&o.list&&o.list.b?o.list.b:e}var Ix=class{constructor(t,e,o){this.node=t,this.tensorMap=e,this.context=o,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(n=>this.getInput(n)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((n,s)=>(n[s]=this.getAttr(s),n),{}))}getInput(t){return Ke(t,this.tensorMap,this.context)}getAttr(t,e){let o=this.node.rawAttrs[t];if(o.tensor!=null)return Ke(t,this.tensorMap,this.context);if(o.i!=null||o.f!=null)return dx(this.node.rawAttrs,t,e);if(o.s!=null)return fx(this.node.rawAttrs,t,e);if(o.b!=null)return hx(this.node.rawAttrs,t,e);if(o.shape!=null)return yx(this.node.rawAttrs,t,e);if(o.type!=null)return gx(this.node.rawAttrs,t,e);if(o.list!=null){if(o.list.i!=null||o.list.f!=null)return bx(this.node.rawAttrs,t,e);if(o.list.s!=null)return wx(this.node.rawAttrs,t,e);if(o.list.shape!=null)return Cx(this.node.rawAttrs,t,e);if(o.list.b!=null)return Tx(this.node.rawAttrs,t,e);if(o.list.type!=null)return xx(this.node.rawAttrs,t,e)}return e}};var Vt={};Kt(Vt,{OP_SCOPE_SUFFIX:()=>bw,abs:()=>ie,acos:()=>Kh,acosh:()=>qh,add:()=>U,addN:()=>KI,all:()=>Tc,any:()=>ml,argMax:()=>Cn,argMin:()=>jh,asin:()=>Xh,asinh:()=>Yh,atan:()=>Zh,atan2:()=>Jh,atanh:()=>Qh,avgPool:()=>ma,avgPool3d:()=>td,basicLSTMCell:()=>XI,batchNorm:()=>Sn,batchNorm2d:()=>ed,batchNorm3d:()=>rd,batchNorm4d:()=>od,batchToSpaceND:()=>fa,bincount:()=>nd,booleanMaskAsync:()=>yB,broadcastArgs:()=>ZI,broadcastTo:()=>vn,buffer:()=>mt,cast:()=>X,ceil:()=>sd,clipByValue:()=>je,clone:()=>Nr,complex:()=>Br,concat:()=>Bt,concat1d:()=>id,concat2d:()=>ad,concat3d:()=>ld,concat4d:()=>ud,conv1d:()=>Sc,conv2d:()=>Gr,conv2dTranspose:()=>Nc,conv3d:()=>cd,conv3dTranspose:()=>md,cos:()=>ha,cosh:()=>kc,cosineWindow:()=>Tm,cumprod:()=>hl,cumsum:()=>Ec,denseBincount:()=>xm,depthToSpace:()=>fd,depthwiseConv2d:()=>Nn,diag:()=>JI,dilation2d:()=>hd,div:()=>ot,divNoNan:()=>dd,dot:()=>gd,dropout:()=>Uw,einsum:()=>tS,elu:()=>kn,enclosingPowerOfTwo:()=>Hw,equal:()=>br,erf:()=>xd,euclideanNorm:()=>yd,exp:()=>Fe,expandDims:()=>Ne,expm1:()=>bd,eye:()=>dl,fft:()=>Ia,fill:()=>No,floor:()=>En,floorDiv:()=>Cc,fused:()=>va,gather:()=>$n,gatherND:()=>AB,greater:()=>ge,greaterEqual:()=>Er,ifft:()=>Ks,imag:()=>da,image:()=>Hr,inTopKAsync:()=>FB,irfft:()=>Gc,isFinite:()=>wd,isInf:()=>Cd,isNaN:()=>Td,leakyRelu:()=>ga,less:()=>$c,lessEqual:()=>ro,linalg:()=>qw,linspace:()=>oS,localResponseNormalization:()=>Id,log:()=>Ye,log1p:()=>xa,logSigmoid:()=>Sd,logSoftmax:()=>Ac,logSumExp:()=>Dc,logicalAnd:()=>pr,logicalNot:()=>ya,logicalOr:()=>Rc,logicalXor:()=>vd,losses:()=>FV,lowerBound:()=>nS,matMul:()=>At,max:()=>Xe,maxPool:()=>ba,maxPool3d:()=>kd,maxPoolWithArgmax:()=>sS,maximum:()=>Ur,mean:()=>re,meshgrid:()=>iS,min:()=>Ws,minimum:()=>An,mirrorPad:()=>Ed,mod:()=>$d,moments:()=>gl,movingAverage:()=>CB,mul:()=>A,multiRNNCell:()=>aS,multinomial:()=>lS,neg:()=>_t,norm:()=>Us,notEqual:()=>Zo,oneHot:()=>xl,ones:()=>Me,onesLike:()=>He,op:()=>S,outerProduct:()=>uS,pad:()=>$r,pad1d:()=>cS,pad2d:()=>pS,pad3d:()=>mS,pad4d:()=>fS,pool:()=>Ad,pow:()=>kr,prelu:()=>Ca,print:()=>Wh,prod:()=>Dd,raggedGather:()=>hS,raggedRange:()=>dS,raggedTensorToTensor:()=>gS,rand:()=>xS,randomGamma:()=>_S,randomNormal:()=>wl,randomStandardNormal:()=>OS,randomUniform:()=>Dn,range:()=>Rn,real:()=>Hs,reciprocal:()=>Ld,relu:()=>sr,relu6:()=>Fc,reshape:()=>D,reverse:()=>Be,reverse1d:()=>LS,reverse2d:()=>PS,reverse3d:()=>zS,reverse4d:()=>MS,rfft:()=>Sa,round:()=>_c,rsqrt:()=>Oc,scalar:()=>nt,scatterND:()=>vB,searchSorted:()=>bm,selu:()=>Lc,separableConv2d:()=>Pc,setdiff1dAsync:()=>BS,sigmoid:()=>yr,sign:()=>Pd,signal:()=>RV,sin:()=>zc,sinh:()=>Mc,slice:()=>It,slice1d:()=>Bc,slice2d:()=>Cm,slice3d:()=>Vc,slice4d:()=>Cl,softmax:()=>Ta,softplus:()=>Yo,spaceToBatchND:()=>wa,sparse:()=>_V,sparseToDense:()=>EB,spectral:()=>DV,split:()=>Ve,sqrt:()=>ee,square:()=>Et,squaredDifference:()=>Wc,squeeze:()=>oo,stack:()=>Ie,step:()=>Eo,stridedSlice:()=>zd,string:()=>OV,sub:()=>tt,sum:()=>st,tan:()=>Md,tanh:()=>In,tensor:()=>Ue,tensor1d:()=>ke,tensor2d:()=>qs,tensor3d:()=>Bd,tensor4d:()=>VS,tensor5d:()=>GS,tensor6d:()=>WS,tile:()=>nr,topk:()=>Vd,transpose:()=>kt,truncatedNormal:()=>Uc,unique:()=>Gd,unsortedSegmentSum:()=>Hc,unstack:()=>Ge,upperBound:()=>US,variable:()=>Wd,where:()=>ue,whereAsync:()=>Hd,zeros:()=>oe,zerosLike:()=>dt});var Zk=(r,t,e,o=Vt)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[o.add(T("a",r,t,e),T("b",r,t,e))];case"AddN":return[o.addN(T("tensors",r,t,e))];case"FloorMod":case"Mod":return[o.mod(T("a",r,t,e),T("b",r,t,e))];case"Mul":return[o.mul(T("a",r,t,e),T("b",r,t,e))];case"RealDiv":case"Div":return[o.div(T("a",r,t,e),T("b",r,t,e))];case"DivNoNan":return[o.divNoNan(T("a",r,t,e),T("b",r,t,e))];case"FloorDiv":return[o.floorDiv(T("a",r,t,e),T("b",r,t,e))];case"Sub":return[o.sub(T("a",r,t,e),T("b",r,t,e))];case"Minimum":return[o.minimum(T("a",r,t,e),T("b",r,t,e))];case"Maximum":return[o.maximum(T("a",r,t,e),T("b",r,t,e))];case"Pow":return[o.pow(T("a",r,t,e),T("b",r,t,e))];case"SquaredDifference":return[o.squaredDifference(T("a",r,t,e),T("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Jk=(r,t,e,o=Vt)=>{switch(r.op){case"Abs":case"ComplexAbs":return[o.abs(T("x",r,t,e))];case"Acos":return[o.acos(T("x",r,t,e))];case"Acosh":return[o.acosh(T("x",r,t,e))];case"Asin":return[o.asin(T("x",r,t,e))];case"Asinh":return[o.asinh(T("x",r,t,e))];case"Atan":return[o.atan(T("x",r,t,e))];case"Atan2":return[o.atan2(T("x",r,t,e),T("y",r,t,e))];case"Atanh":return[o.atanh(T("x",r,t,e))];case"Ceil":return[o.ceil(T("x",r,t,e))];case"Complex":return[o.complex(T("real",r,t,e),T("imag",r,t,e))];case"Cos":return[o.cos(T("x",r,t,e))];case"Cosh":return[o.cosh(T("x",r,t,e))];case"Elu":return[o.elu(T("x",r,t,e))];case"Erf":return[o.erf(T("x",r,t,e))];case"Exp":return[o.exp(T("x",r,t,e))];case"Expm1":return[o.expm1(T("x",r,t,e))];case"Floor":return[o.floor(T("x",r,t,e))];case"Log":return[o.log(T("x",r,t,e))];case"Log1p":return[o.log1p(T("x",r,t,e))];case"Imag":return[o.imag(T("x",r,t,e))];case"Neg":return[o.neg(T("x",r,t,e))];case"Reciprocal":return[o.reciprocal(T("x",r,t,e))];case"Real":return[o.real(T("x",r,t,e))];case"Relu":return[o.relu(T("x",r,t,e))];case"Round":return[o.round(T("x",r,t,e))];case"Selu":return[o.selu(T("x",r,t,e))];case"Sigmoid":return[o.sigmoid(T("x",r,t,e))];case"Sin":return[o.sin(T("x",r,t,e))];case"Sign":return[o.sign(T("x",r,t,e))];case"Sinh":return[o.sinh(T("x",r,t,e))];case"Softplus":return[o.softplus(T("x",r,t,e))];case"Sqrt":return[o.sqrt(T("x",r,t,e))];case"Square":return[o.square(T("x",r,t,e))];case"Tanh":return[o.tanh(T("x",r,t,e))];case"Tan":return[o.tan(T("x",r,t,e))];case"ClipByValue":return[o.clipByValue(T("x",r,t,e),T("clipValueMin",r,t,e),T("clipValueMax",r,t,e))];case"Relu6":return[o.relu6(T("x",r,t,e))];case"Rsqrt":return[o.rsqrt(Ke(r.inputNames[0],t,e))];case"Prod":return[o.prod(T("x",r,t,e),T("axes",r,t,e))];case"LeakyRelu":return[o.leakyRelu(T("x",r,t,e),T("alpha",r,t,e))];case"Prelu":return[o.prelu(T("x",r,t,e),T("alpha",r,t,e))];case"IsNan":return[o.isNaN(Ke(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function io(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){y.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let o=0;o<r.length;o++){let n=r[o],s=t[o];y.assert(n<0||s<0||n===s,()=>e+` Shapes ${r} and ${t} must match`)}}}function Qk(r){return!(typeof r=="number"||r.some(t=>t<0))}function Sp(r,t,e){let o=Sx(r,e),n=!Qk(o);if(n&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${o}`);if(n&&t.forEach(s=>{o=Sx(s.shape,o)}),!Qk(o))throw new Error(`Non-fully-defined elementShape: ${o}`);return o}function Sx(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let o=0;o<r.length;++o){let n=r[o],s=t[o];if(n>=0&&s>=0&&n!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[o]=n>=0?n:s}return e}var vx=class{constructor(t,e,o,n,s,i,a){this.name=t,this.dtype=e,this.maxSize=o,this.elementShape=n,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=nt(0),le(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let o=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),io(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),o.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(o.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);o.tensor=e,le(e),o.written=!0,this.tensors[t]=o}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((o,n)=>this.write(o,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let n=0;n<this.size();n++)t.push(n)}if(t.length===0)return Ue([],[0].concat(this.elementShape));let o=this.readMany(t);return io(this.elementShape,o[0].shape,"TensorArray shape mismatch: "),Ie(o,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return Ue([],[0].concat(this.elementShape));let e=[];for(let n=0;n<this.size();n++)e.push(n);let o=this.readMany(e);return io(this.elementShape,o[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${o[0].shape})`),Bt(o,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let o=Math.max(...t);if(!this.dynamicSize&&o>=this.maxSize)throw new Error(`Max index must be < array size (${o}  vs. ${this.maxSize})`);this.writeMany(t,Ge(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let o=0,n=t.map(l=>(o+=l,o));if(o!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=o===0?0:e.size/o,i=[];M(()=>{e=D(e,[1,o,s]);for(let l=0;l<t.length;++l){let c=[0,l===0?0:n[l-1],0],p=[1,t[l],s];i[l]=D(It(e,c,p),this.elementShape)}return i});let a=[];for(let l=0;l<t.length;l++)a[l]=l;this.writeMany(a,i)}};var oi=class{constructor(t,e,o,n=-1){this.tensors=t,this.elementShape=e,this.elementDtype=o,t?.forEach(s=>{if(o!==s.dtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${s.dtype}`);io(e,s.shape,"TensorList shape mismatch: "),le(s)}),this.idTensor=nt(0),this.maxNumElements=n,le(this.idTensor)}get id(){return this.idTensor.id}copy(){return new oi([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,o=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(o!==-1&&this.tensors.length!==o)throw new Error(`Operation expected a list with ${o} elements but got a list with ${this.tensors.length} elements.`);io(t,this.elementShape,"TensorList shape mismatch: ");let n=Sp(this.elementShape,this.tensors,t);return M(()=>{let s=this.tensors.map(i=>D(i,n));return Ie(s,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let o=Sp(this.elementShape,this.tensors,t),n=this.tensors.pop();return n.kept=!1,io(n.shape,t,"TensorList shape mismatch: "),D(n,o)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(io(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");le(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new oi([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let o=0;o<Math.min(this.tensors.length,t);++o)e.tensors[o]=this.tensors[o];return e}getItem(t,e,o){if(o!==this.elementDtype)throw new Error(`Invalid data types; op elements ${o}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);io(this.tensors[t].shape,e,"TensorList shape mismatch: ");let n=Sp(this.elementShape,this.tensors,e);return D(this.tensors[t],n)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);io(this.elementShape,e.shape,"TensorList shape mismatch: "),le(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,o){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);io(this.elementShape,o,"TensorList shape mismatch: "),t=t.slice(0,this.size());let n=Sp(this.elementShape,this.tensors,o);return t.length===0?Ue([],[0].concat(n)):M(()=>{let s=t.map(i=>D(this.tensors[i],n));return Ie(s,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);io(this.elementShape,e,"TensorList shape mismatch: ");let o=Sp(this.elementShape,this.tensors,e);return this.size()===0?Ue([],[0].concat(o)):M(()=>{let n=this.tensors.map(s=>D(s,o));return Bt(n,0)})}};function tE(r,t,e){let o=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let n=r.shape.slice(1);io(n,t,"TensorList shape mismatch: ");let s=Ge(r);return new oi(s,t,o)}function eE(r,t,e,o){return new oi([],r,t,o)}function rE(r,t,e,o){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let n=Math.max(...t);if(o!=null&&o!==-1&&n>=o)throw new Error(`Max index must be < array size (${n}  vs. ${o})`);let s=new oi([],e,r.dtype,o),i=Ge(r,0);return t.forEach((a,l)=>{s.setItem(a,i[l])}),s}function oE(r,t,e){let o=0,n=t.map(c=>(o+=c,o));if(o!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${o}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=Sx(s,e),a=o===0?0:r.size/o,l=M(()=>{let c=[];r=D(r,[1,o,a]);for(let p=0;p<t.length;++p){let f=[0,p===0?0:n[p-1],0],h=[1,t[p],a];c[p]=D(It(r,f,h),i)}return r.dispose(),c}),u=new oi([],e,r.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var nE=async(r,t,e)=>{switch(r.op){case"If":case"StatelessIf":{let o=T("thenBranch",r,t,e),n=T("elseBranch",r,t,e),s=T("cond",r,t,e),i=T("args",r,t,e);return(await s.data())[0]?e.functionMap[o].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[n].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let o=T("body",r,t,e),n=T("cond",r,t,e),s=T("args",r,t,e),i=await e.functionMap[n].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),a=s.map(c=>c.id),l=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=await e.functionMap[o].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);let p=u.map(f=>f.id);c.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=await e.functionMap[n].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);l=await m[0].data(),m.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{let o=T("pred",r,t,e);return[an(o)]}case"Switch":{let o=T("pred",r,t,e),n=T("data",r,t,e);return n.kept||(n=an(n)),(await o.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let o=r.inputNames.find(n=>Ke(n,t,e)!==void 0);if(o){let n=Ke(o,t,e);return[an(n)]}return}case"Enter":{let o=T("frameName",r,t,e),n=T("tensor",r,t,e);return e.enterFrame(o),[an(n)]}case"Exit":{let o=T("tensor",r,t,e);return e.exitFrame(),[an(o)]}case"NextIteration":{let o=T("tensor",r,t,e);return e.nextIteration(),[an(o)]}case"TensorArrayV3":{let o=T("size",r,t,e),n=T("dtype",r,t,e),s=T("elementShape",r,t,e),i=T("dynamicSize",r,t,e),a=T("clearAfterRead",r,t,e),l=T("identicalElementShapes",r,t,e),u=T("name",r,t,e),c=new vx(u,n,o,s,l,i,a);return e.addTensorArray(c),[c.idTensor,nt(1)]}case"TensorArrayWriteV3":{let o=T("tensorArrayId",r,t,e),n=T("index",r,t,e),s=T("tensor",r,t,e),i=e.getTensorArray(o.id);return i.write(n,s),[i.idTensor]}case"TensorArrayReadV3":{let o=T("tensorArrayId",r,t,e),n=T("index",r,t,e);return[e.getTensorArray(o.id).read(n)]}case"TensorArrayGatherV3":{let o=T("tensorArrayId",r,t,e),n=T("indices",r,t,e),s=T("dtype",r,t,e);return[e.getTensorArray(o.id).gather(n,s)]}case"TensorArrayScatterV3":{let o=T("tensorArrayId",r,t,e),n=T("indices",r,t,e),s=T("tensor",r,t,e),i=e.getTensorArray(o.id);return i.scatter(n,s),[i.idTensor]}case"TensorArrayConcatV3":{let o=T("tensorArrayId",r,t,e),n=e.getTensorArray(o.id),s=T("dtype",r,t,e);return[n.concat(s)]}case"TensorArraySplitV3":{let o=T("tensorArrayId",r,t,e),n=T("tensor",r,t,e),s=T("lengths",r,t,e),i=e.getTensorArray(o.id);return i.split(s,n),[i.idTensor]}case"TensorArraySizeV3":{let o=T("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return[nt(n.size(),"int32")]}case"TensorArrayCloseV3":{let o=T("tensorArrayId",r,t,e),n=e.getTensorArray(o.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let o=T("tensorListId",r,t,e),n=T("index",r,t,e),s=T("tensor",r,t,e),i=e.getTensorList(o.id);return i.setItem(n,s),[i.idTensor]}case"TensorListGetItem":{let o=T("tensorListId",r,t,e),n=T("index",r,t,e),s=T("elementShape",r,t,e),i=T("elementDType",r,t,e);return[e.getTensorList(o.id).getItem(n,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let o=T("indices",r,t,e),n=T("tensor",r,t,e),s=T("elementShape",r,t,e),i=T("numElements",r,t,e),a=rE(n,o,s,i);return e.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let o=T("elementShape",r,t,e),n=T("elementDType",r,t,e),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=T(s,r,t,e),a=r.op==="TensorListReserve"?-1:i,l=eE(o,n,i,a);return e.addTensorList(l),[l.idTensor]}case"TensorListGather":{let o=T("tensorListId",r,t,e),n=T("indices",r,t,e),s=T("elementShape",r,t,e),i=T("elementDType",r,t,e);return[e.getTensorList(o.id).gather(n,i,s)]}case"TensorListStack":{let o=T("tensorListId",r,t,e),n=T("elementShape",r,t,e),s=T("elementDType",r,t,e),i=T("numElements",r,t,e);return[e.getTensorList(o.id).stack(n,s,i)]}case"TensorListFromTensor":{let o=T("tensor",r,t,e),n=T("elementShape",r,t,e),s=T("elementDType",r,t,e),i=tE(o,n,s);return e.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let o=T("tensorListId",r,t,e),n=e.getTensorList(o.id),s=T("dtype",r,t,e),i=T("elementShape",r,t,e);return[n.concat(s,i)]}case"TensorListPushBack":{let o=T("tensorListId",r,t,e),n=T("tensor",r,t,e),s=e.getTensorList(o.id);return s.pushBack(n),[s.idTensor]}case"TensorListPopBack":{let o=T("tensorListId",r,t,e),n=T("elementShape",r,t,e),s=T("elementDType",r,t,e);return[e.getTensorList(o.id).popBack(n,s)]}case"TensorListSplit":{let o=T("tensor",r,t,e),n=T("elementShape",r,t,e),s=T("lengths",r,t,e),i=oE(o,s,n);return e.addTensorList(i),[i.idTensor]}case"TensorListLength":{let o=T("tensorListId",r,t,e),n=e.getTensorList(o.id);return[nt(n.size(),"int32")]}case"TensorListResize":{let o=T("tensorListId",r,t,e),n=T("size",r,t,e),i=e.getTensorList(o.id).resize(n);return e.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};function sE(r,t,e){let[o,n]=T("fusedOps",r,t,e),s=o==="biasadd",i=!s,a=n==="prelu",l=o==="fusedbatchnorm",u=T("numArgs",r,t,e);if(s){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=T("strides",r,t,e),p=eh(r,t,e),m=T("dataFormat",r,t,e).toUpperCase(),f=T("dilations",r,t,e),[h,d]=T("args",r,t,e);i&&(d=h,h=void 0);let g=T("leakyreluAlpha",r,t,e);return{stride:c,pad:p,dataFormat:m,dilations:f,biasArg:h,preluArg:d,activationFunc:n,leakyreluAlpha:g}}var iE=(r,t,e,o=Vt)=>{switch(r.op){case"Conv1D":{let n=T("stride",r,t,e),s=T("pad",r,t,e),i=T("dataFormat",r,t,e).toUpperCase(),a=T("dilation",r,t,e);return[o.conv1d(T("x",r,t,e),T("filter",r,t,e),n,s,i,a)]}case"Conv2D":{let n=T("strides",r,t,e),s=eh(r,t,e),i=T("dataFormat",r,t,e).toUpperCase(),a=T("dilations",r,t,e);return[o.conv2d(T("x",r,t,e),T("filter",r,t,e),[n[1],n[2]],s,i,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:n,pad:s,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=sE(r,t,e);return[o.fused.conv2d({x:T("x",r,t,e),filter:T("filter",r,t,e),strides:[n[1],n[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:n,pad:s,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=sE(r,t,e);return[o.fused.depthwiseConv2d({x:T("x",r,t,e),filter:T("filter",r,t,e),strides:[n[1],n[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let n=T("outputShape",r,t,e),s=T("strides",r,t,e),i=eh(r,t,e);return[o.conv2dTranspose(T("x",r,t,e),T("filter",r,t,e),n,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let n=T("strides",r,t,e),s=eh(r,t,e),i=T("dilations",r,t,e),a=T("dataFormat",r,t,e).toUpperCase();return[o.depthwiseConv2d(T("input",r,t,e),T("filter",r,t,e),[n[1],n[2]],s,a,[i[1],i[2]])]}case"Conv3D":{let n=T("strides",r,t,e),s=T("pad",r,t,e),i=T("dataFormat",r,t,e).toUpperCase(),a=T("dilations",r,t,e);return[o.conv3d(T("x",r,t,e),T("filter",r,t,e),[n[1],n[2],n[3]],s,i,[a[1],a[2],a[3]])]}case"AvgPool":{let n=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[o.avgPool(T("x",r,t,e),[i[1],i[2]],[n[1],n[2]],s)]}case"MaxPool":{let n=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[o.maxPool(T("x",r,t,e),[i[1],i[2]],[n[1],n[2]],s)]}case"MaxPoolWithArgmax":{let n=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e),a=T("includeBatchInIndex",r,t,e),{result:l,indexes:u}=o.maxPoolWithArgmax(T("x",r,t,e),[i[1],i[2]],[n[1],n[2]],s,a);return[l,u]}case"AvgPool3D":{let n=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[o.avgPool3d(T("x",r,t,e),[i[1],i[2],i[3]],[n[1],n[2],n[3]],s)]}case"MaxPool3D":{let n=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[o.maxPool3d(T("x",r,t,e),[i[1],i[2],i[3]],[n[1],n[2],n[3]],s)]}case"Dilation2D":{let n=T("strides",r,t,e),s=T("pad",r,t,e),i=T("dilations",r,t,e),a=n[1],l=n[2],u=i[1],c=i[2];return[o.dilation2d(T("x",r,t,e),T("filter",r,t,e),[a,l],s,[u,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var aE=(r,t,e,o=Vt)=>{switch(r.op){case"Fill":{let n=T("shape",r,t,e),s=T("dtype",r,t,e),i=T("value",r,t,e);return[o.fill(n,i,s)]}case"LinSpace":{let n=T("start",r,t,e),s=T("stop",r,t,e),i=T("num",r,t,e);return[o.linspace(n,s,i)]}case"Multinomial":{let n=T("logits",r,t,e),s=T("numSamples",r,t,e),i=T("seed",r,t,e);return[o.multinomial(n,s,i)]}case"OneHot":{let n=T("indices",r,t,e),s=T("depth",r,t,e),i=T("onValue",r,t,e),a=T("offValue",r,t,e),l=T("dtype",r,t,e);return[o.oneHot(n,s,i,a,l)]}case"Ones":return[o.ones(T("shape",r,t,e),T("dtype",r,t,e))];case"OnesLike":return[o.onesLike(T("x",r,t,e))];case"RandomStandardNormal":return[o.randomStandardNormal(T("shape",r,t,e),T("dtype",r,t,e),T("seed",r,t,e))];case"RandomUniform":return[o.randomUniform(T("shape",r,t,e),T("minval",r,t,e),T("maxval",r,t,e),T("dtype",r,t,e))];case"Range":{let n=T("start",r,t,e),s=T("stop",r,t,e),i=T("step",r,t,e);return[o.range(n,s,i,T("dtype",r,t,e))]}case"TruncatedNormal":{let n=T("shape",r,t,e),s=T("mean",r,t,e),i=T("stdDev",r,t,e),a=T("seed",r,t,e);return[o.truncatedNormal(n,s,i,T("dtype",r,t,e),a)]}case"Zeros":return[o.zeros(T("shape",r,t,e),T("dtype",r,t,e))];case"ZerosLike":return[o.zerosLike(T("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Q0(r,t,e){let o=T("boxes",r,t,e),n=T("scores",r,t,e),s=T("maxOutputSize",r,t,e),i=T("iouThreshold",r,t,e),a=T("scoreThreshold",r,t,e),l=T("softNmsSigma",r,t,e);return{boxes:o,scores:n,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}var lE=async(r,t,e,o,n=Vt)=>{switch(r.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=Q0(r,t,e),p=await n.image.nonMaxSuppressionWithScoreAsync(s,i,a,l,u,c);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Q0(r,t,e),c=T("padToMaxOutputSize",r,t,e),p=await n.image.nonMaxSuppressionPaddedAsync(s,i,a,l,u,c);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=Q0(r,t,e);return[await n.image.nonMaxSuppressionAsync(s,i,a,l,u)]}case"Where":{let s=n.cast(T("condition",r,t,e),"bool"),i=[await n.whereAsync(s)];return s.dispose(),i}case"ListDiff":return n.setdiff1dAsync(T("x",r,t,e),T("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uE=(r,t,e,o=Vt)=>{switch(r.op){case"LowerBound":{let n=T("sortedSequence",r,t,e),s=T("values",r,t,e);return[o.lowerBound(n,s)]}case"TopKV2":{let n=T("x",r,t,e),s=T("k",r,t,e),i=T("sorted",r,t,e),a=o.topk(n,s,i);return[a.values,a.indices]}case"UpperBound":{let n=T("sortedSequence",r,t,e),s=T("values",r,t,e);return[o.upperBound(n,s)]}case"Unique":{let n=T("x",r,t,e),s=o.unique(n);return[s.values,s.indices]}case"UniqueV2":{let n=T("x",r,t,e),s=T("axis",r,t,e),i=o.unique(n,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cE=(r,t,e,o=Vt)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let n=T("default",r,t,e);return[Ke(r.name,t,e)||n];case"Placeholder":return[Ke(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=T("x",r,t,e);return[an(c)]}case"IdentityN":return T("x",r,t,e).map(c=>an(c));case"Snapshot":let s=T("x",r,t,e);return[an(s)];case"Shape":return[o.tensor1d(T("x",r,t,e).shape,"int32")];case"ShapeN":return T("x",r,t,e).map(c=>o.tensor1d(c.shape));case"Size":return[o.scalar(T("x",r,t,e).size,"int32")];case"Rank":return[o.scalar(T("x",r,t,e).rank,"int32")];case"NoOp":return[o.scalar(1)];case"Print":let i=T("x",r,t,e),a=T("data",r,t,e),l=T("message",r,t,e),u=T("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Nx=class{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=nt(0),this.tensorMap=new Map,le(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return nt(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);let o=await t.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),M(()=>{let n=Ge(e),s=o.length,i=n.length;y.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let l=o[a],u=n[a];le(u),this.tensorMap.set(l,u)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);let o=await t.data();return M(()=>{let n=[];for(let s=0;s<o.length;s++){let i=o[s],a=this.findWithDefault(i,e);n.push(a)}return Ie(n)})}findWithDefault(t,e){let o=this.tensorMap.get(t);return o??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var pE=async(r,t,e,o)=>{switch(r.op){case"HashTable":case"HashTableV2":{let n=o.getHashTableHandleByName(r.name);if(n!=null)return[n];{let s=T("keyDType",r,t,e),i=T("valueDType",r,t,e),a=new Nx(s,i);return o.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let n=T("tableHandle",r,t,e,o),s=T("keys",r,t,e),i=T("values",r,t,e);return[await o.getHashTableById(n.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let n=T("tableHandle",r,t,e,o),s=T("keys",r,t,e),i=T("defaultValue",r,t,e);return[await o.getHashTableById(n.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let n=T("tableHandle",r,t,e,o);return[o.getHashTableById(n.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mE=(r,t,e,o=Vt)=>{switch(r.op){case"ResizeBilinear":{let n=T("images",r,t,e),s=T("size",r,t,e),i=T("alignCorners",r,t,e),a=T("halfPixelCenters",r,t,e);return[o.image.resizeBilinear(n,[s[0],s[1]],i,a)]}case"ResizeNearestNeighbor":{let n=T("images",r,t,e),s=T("size",r,t,e),i=T("alignCorners",r,t,e),a=T("halfPixelCenters",r,t,e);return[o.image.resizeNearestNeighbor(n,[s[0],s[1]],i,a)]}case"CropAndResize":{let n=T("image",r,t,e),s=T("boxes",r,t,e),i=T("boxInd",r,t,e),a=T("cropSize",r,t,e),l=T("method",r,t,e),u=T("extrapolationValue",r,t,e);return[o.image.cropAndResize(n,s,i,a,l,u)]}case"ImageProjectiveTransformV3":{let n=T("images",r,t,e),s=T("transforms",r,t,e),i=T("outputShape",r,t,e),a=T("fillValue",r,t,e),l=T("interpolation",r,t,e),u=T("fillMode",r,t,e);return[o.image.transform(n,s,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fE=(r,t,e,o=Vt)=>{switch(r.op){case"Equal":return[o.equal(T("a",r,t,e),T("b",r,t,e))];case"NotEqual":return[o.notEqual(T("a",r,t,e),T("b",r,t,e))];case"Greater":return[o.greater(T("a",r,t,e),T("b",r,t,e))];case"GreaterEqual":return[o.greaterEqual(T("a",r,t,e),T("b",r,t,e))];case"Less":return[o.less(T("a",r,t,e),T("b",r,t,e))];case"LessEqual":return[o.lessEqual(T("a",r,t,e),T("b",r,t,e))];case"LogicalAnd":return[o.logicalAnd(T("a",r,t,e),T("b",r,t,e))];case"LogicalNot":return[o.logicalNot(T("a",r,t,e))];case"LogicalOr":return[o.logicalOr(T("a",r,t,e),T("b",r,t,e))];case"Select":case"SelectV2":return[o.where(T("condition",r,t,e),T("a",r,t,e),T("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hE=(r,t,e,o=Vt)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[o.matMul(T("a",r,t,e),T("b",r,t,e),T("transposeA",r,t,e),T("transposeB",r,t,e))];case"Einsum":return[o.einsum(T("equation",r,t,e),...T("tensors",r,t,e))];case"Transpose":return[o.transpose(T("x",r,t,e),T("perm",r,t,e))];case"_FusedMatMul":let[n,s]=T("fusedOps",r,t,e),i=n==="biasadd",a=s==="prelu",l=T("numArgs",r,t,e),u=T("leakyreluAlpha",r,t,e);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=T("args",r,t,e);return[o.fused.matMul({a:T("a",r,t,e),b:T("b",r,t,e),transposeA:T("transposeA",r,t,e),transposeB:T("transposeB",r,t,e),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dE=(r,t,e,o=Vt)=>{switch(r.op){case"EuclideanNorm":return[o.euclideanNorm(T("x",r,t,e),T("axis",r,t,e),T("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[o.batchNorm(T("x",r,t,e),T("mean",r,t,e),T("variance",r,t,e),T("offset",r,t,e),T("scale",r,t,e),T("epsilon",r,t,e))];case"FusedBatchNormV3":return[o.batchNorm(T("x",r,t,e),T("mean",r,t,e),T("variance",r,t,e),T("offset",r,t,e),T("scale",r,t,e),T("epsilon",r,t,e))];case"LRN":return[o.localResponseNormalization(T("x",r,t,e),T("radius",r,t,e),T("bias",r,t,e),T("alpha",r,t,e),T("beta",r,t,e))];case"Softmax":return[o.softmax(T("x",r,t,e))];case"LogSoftmax":return[o.logSoftmax(T("x",r,t,e))];case"SparseToDense":return[o.sparseToDense(T("sparseIndices",r,t,e),T("outputShape",r,t,e),T("sparseValues",r,t,e),T("defaultValue",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var gE=(r,t,e,o=Vt)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:n,outputDenseValues:s}=o.raggedGather(T("paramsNestedSplits",r,t,e),T("paramsDenseValues",r,t,e),T("indices",r,t,e),T("outputRaggedRank",r,t,e));return n.concat(s)}case"RaggedRange":{let{rtNestedSplits:n,rtDenseValues:s}=o.raggedRange(T("starts",r,t,e),T("limits",r,t,e),T("splits",r,t,e));return[n,s]}case"RaggedTensorToTensor":return[o.raggedTensorToTensor(T("shape",r,t,e),T("values",r,t,e),T("defaultValue",r,t,e),T("rowPartitionTensors",r,t,e),T("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var xE=(r,t,e,o=Vt)=>{switch(r.op){case"Max":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[o.max(T("x",r,t,e),a,l)]}case"Mean":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[o.mean(T("x",r,t,e),a,l)]}case"Min":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[o.min(T("x",r,t,e),a,l)]}case"Sum":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[o.sum(T("x",r,t,e),a,l)]}case"All":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[o.all(T("x",r,t,e),a,l)]}case"Any":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[o.any(T("x",r,t,e),a,l)]}case"ArgMax":{let a=T("axis",r,t,e);return[o.argMax(T("x",r,t,e),a)]}case"ArgMin":{let a=T("axis",r,t,e);return[o.argMin(T("x",r,t,e),a)]}case"Prod":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[o.prod(T("x",r,t,e),a,l)]}case"Cumprod":{let a=T("axis",r,t,e),l=T("exclusive",r,t,e),u=T("reverse",r,t,e);return[o.cumprod(T("x",r,t,e),a,l,u)]}case"Cumsum":{let a=T("axis",r,t,e),l=T("exclusive",r,t,e),u=T("reverse",r,t,e);return[o.cumsum(T("x",r,t,e),a,l,u)]}case"Bincount":let n=T("x",r,t,e),s=T("weights",r,t,e),i=T("size",r,t,e);return[o.bincount(n,s,i)];case"DenseBincount":{let a=T("x",r,t,e),l=T("weights",r,t,e),u=T("size",r,t,e),c=T("binaryOutput",r,t,e);return[o.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var yE=(r,t,e,o=Vt)=>{switch(r.op){case"ConcatV2":case"Concat":{let n=T("n",r,t,e),s=T("axis",r,t,e),i=T("tensors",r,t,e);return i=i.slice(0,n),[o.concat(i,s)]}case"Gather":{let n=T("x",r,t,e),s=T("indices",r,t,e);return[o.gather(n,o.cast(s,"int32"),0)]}case"GatherV2":{let n=T("axis",r,t,e),s=T("batchDims",r,t,e),i=T("x",r,t,e),a=T("indices",r,t,e);return[o.gather(i,o.cast(a,"int32"),n,s)]}case"Reverse":{let n=T("dims",r,t,e),s=[];for(let a=0;a<n.length;a++)n[a]&&s.push(a);let i=T("x",r,t,e);return[o.reverse(i,s)]}case"ReverseV2":{let n=T("axis",r,t,e),s=T("x",r,t,e);return[o.reverse(s,n)]}case"Slice":{let n=T("begin",r,t,e),s=T("size",r,t,e);return[o.slice(T("x",r,t,e),n,s)]}case"StridedSlice":{let n=T("begin",r,t,e),s=T("end",r,t,e),i=T("strides",r,t,e),a=T("beginMask",r,t,e),l=T("endMask",r,t,e),u=T("ellipsisMask",r,t,e),c=T("newAxisMask",r,t,e),p=T("shrinkAxisMask",r,t,e),m=T("x",r,t,e);return[o.stridedSlice(m,n,s,i,a,l,u,c,p)]}case"Pack":return M(()=>{let n=T("axis",r,t,e),s=T("tensors",r,t,e),i=s[0].shape,a=o.squeeze(s[0]).shape,l=s.map(u=>{let c=y.arraysEqual(u.shape,i);if(!c&&!y.arraysEqual(o.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:o.reshape(u,i)});return[o.stack(l,n)]});case"Unpack":{let n=T("axis",r,t,e),s=T("tensor",r,t,e);return o.unstack(s,n)}case"Tile":{let n=T("reps",r,t,e);return[o.tile(T("x",r,t,e),n)]}case"Split":case"SplitV":{let n=T("axis",r,t,e),s=T("numOrSizeSplits",r,t,e),i=T("x",r,t,e);return o.split(i,s,n)}case"ScatterNd":{let n=T("indices",r,t,e),s=T("values",r,t,e),i=T("shape",r,t,e);return[o.scatterND(n,s,i)]}case"GatherNd":{let n=T("x",r,t,e),s=T("indices",r,t,e);return[o.gatherND(n,s)]}case"SparseToDense":{let n=T("sparseIndices",r,t,e),s=T("outputShape",r,t,e),i=T("sparseValues",r,t,e),a=T("defaultValue",r,t,e);return[o.sparseToDense(n,i,s,i.dtype===a.dtype?a:o.cast(a,i.dtype))]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var bE=(r,t,e,o=Vt)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:n,outputValues:s,emptyRowIndicator:i,reverseIndexMap:a}=o.sparse.sparseFillEmptyRows(T("indices",r,t,e),T("values",r,t,e),T("denseShape",r,t,e),T("defaultValue",r,t,e));return[n,s,i,a]}case"SparseReshape":{let{outputIndices:n,outputShape:s}=o.sparse.sparseReshape(T("inputIndices",r,t,e),T("inputShape",r,t,e),T("newShape",r,t,e));return[n,s]}case"SparseSegmentMean":return[o.sparse.sparseSegmentMean(T("data",r,t,e),T("indices",r,t,e),T("segmentIds",r,t,e))];case"SparseSegmentSum":return[o.sparse.sparseSegmentSum(T("data",r,t,e),T("indices",r,t,e),T("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var wE=(r,t,e,o=Vt)=>{switch(r.op){case"FFT":return[o.fft(T("x",r,t,e))];case"IFFT":return[o.ifft(T("x",r,t,e))];case"RFFT":return[o.rfft(T("x",r,t,e))];case"IRFFT":return[o.irfft(T("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var CE=(r,t,e,o=Vt)=>{switch(r.op){case"StringNGrams":{let{nGrams:n,nGramsSplits:s}=o.string.stringNGrams(T("data",r,t,e),T("dataSplits",r,t,e),T("separator",r,t,e),T("nGramWidths",r,t,e),T("leftPad",r,t,e),T("rightPad",r,t,e),T("padWidth",r,t,e),T("preserveShortSequences",r,t,e));return[n,s]}case"StringSplit":{let{indices:n,values:s,shape:i}=o.string.stringSplit(T("input",r,t,e),T("delimiter",r,t,e),T("skipEmpty",r,t,e));return[n,s,i]}case"StringToHashBucketFast":return[o.string.stringToHashBucketFast(T("input",r,t,e),T("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var TE=(r,t,e,o=Vt)=>{switch(r.op){case"Cast":return[o.cast(T("x",r,t,e),T("dtype",r,t,e))];case"ExpandDims":{let n=T("axis",r,t,e);return[o.expandDims(T("x",r,t,e),n)]}case"Squeeze":{let n=T("axis",r,t,e);return[o.squeeze(T("x",r,t,e),n)]}case"Reshape":return[o.reshape(T("x",r,t,e),T("shape",r,t,e))];case"MirrorPad":return[o.mirrorPad(T("x",r,t,e),T("padding",r,t,e),T("mode",r,t,e))];case"PadV2":case"Pad":return[o.pad(T("x",r,t,e),T("padding",r,t,e),T("constantValue",r,t,e))];case"SpaceToBatchND":{let n=T("blockShape",r,t,e),s=T("paddings",r,t,e);return[o.spaceToBatchND(T("x",r,t,e),n,s)]}case"BatchToSpaceND":{let n=T("blockShape",r,t,e),s=T("crops",r,t,e);return[o.batchToSpaceND(T("x",r,t,e),n,s)]}case"DepthToSpace":{let n=T("blockSize",r,t,e),s=T("dataFormat",r,t,e).toUpperCase();return[o.depthToSpace(T("x",r,t,e),n,s)]}case"BroadcastTo":return[o.broadcastTo(T("x",r,t,e),T("shape",r,t,e))];case"BroadcastArgs":return[o.broadcastArgs(T("s0",r,t,e),T("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function tC(r,t,e,o,n=M){let s=((i,a,l)=>{switch(i.category){case"arithmetic":return n(()=>Zk(i,a,l));case"basic_math":return n(()=>Jk(i,a,l));case"control":return nE(i,a,l);case"convolution":return n(()=>iE(i,a,l));case"creation":return n(()=>aE(i,a,l));case"dynamic":return lE(i,a,l);case"evaluation":return n(()=>uE(i,a,l));case"image":return n(()=>mE(i,a,l));case"graph":return n(()=>cE(i,a,l));case"logical":return n(()=>fE(i,a,l));case"matrices":return n(()=>hE(i,a,l));case"normalization":return n(()=>dE(i,a,l));case"ragged":return n(()=>gE(i,a,l));case"reduction":return n(()=>xE(i,a,l));case"slice_join":return n(()=>yE(i,a,l));case"sparse":return n(()=>bE(i,a,l));case"spectral":return n(()=>wE(i,a,l));case"string":return n(()=>CE(i,a,l));case"transformation":return n(()=>TE(i,a,l));case"hash_table":return pE(i,a,l,o);case"custom":let u=px(i.op);if(u&&u.customExecutor)return u.customExecutor(new Ix(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return y.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var oh=class{constructor(t={},e={},o={},n={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=o,this.functionMap=n,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let o=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(o))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function eC(r,t,e,o){let n=new Set,s=[],i=null,a=null,l=new Set,u=Object.keys(r).map(m=>Or(m)[0]),c=[];o!=null&&(c=o.map(m=>Or(m.name)[0]));let p=[...t];for(;p.length>0;){let m=p.pop();if((rC(m)||D4(m)||R4(m))&&i==null&&(i=m,a=i.children.map(f=>f.name).filter(f=>n.has(f))),n.add(m.name),e[m.name]==null&&u.indexOf(m.name)===-1&&c.indexOf(m.name)===-1){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),p.push(f))})}}return{inputs:r,outputs:t,usedNodes:n,missingInputs:s,dynamicNode:i,syncInputs:a}}function IE(r,t,e){let{usedNodes:o,inputs:n}=e,s=[],i=Object.keys(n).map(c=>Or(c)[0]).map(c=>r.nodes[c]),a=r.initNodes;i.forEach(c=>{o.has(c.name)&&s.push(c)}),r.weights.forEach(c=>{o.has(c.name)&&s.push(c)}),a?.forEach(c=>{o.has(c.name)&&s.push(c)});let l=new Set,u=[];for(;s.length>0;){let c=s.pop();l.add(c.name),t[c.name]||u.push(c),c.children.forEach(p=>{!l.has(p.name)&&o.has(p.name)&&p.inputs.every(m=>l.has(m.name))&&s.push(p)})}return u}var E4=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],$4=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],A4=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function rC(r){return E4.indexOf(r.op)>=0}function D4(r){return $4.indexOf(r.op)>=0}function R4(r){return A4.indexOf(r.op)>=0}var Pl=class{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(o=>{this._functionExecutorMap[o]=new Pl(t.functions[o],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(o=>t[o].map(n=>n.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){let o=t.map(s=>s.name).sort(),n=e.map(s=>s.name).sort();return o.join(this.SEPERATOR)+"--"+n.join(this.SEPERATOR)}compile(t,e){let o=eC(t,e,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:s,syncInputs:i}=o;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(n.length>0){let a=e.map(u=>u.name),l=Object.keys(t);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${l}]. Missing the following inputs: [${n}]`)}return IE(this.graph,this.weightMap,o)}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return le(e),e}cloneTensorList(t){return t?t.map(o=>this.cloneAndKeepTensor(o)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,o])=>[e,this.cloneTensorList(o)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let o=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let n=o.map(p=>this.graph.nodes[Or(p)[0]]),s=e.map(p=>Or(p)[0]),i=s.map(p=>this.graph.nodes[p]);i.length===0&&(i=this._outputs);let a=this.getCompilationKey(n,i),l=this.compiledMap.get(a);l==null&&(l=this.compile(t,i),this.compiledMap.set(a,l));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let u={},c={};return M(()=>{let p=new oh(this.weightMap,u,c,this.functionExecutorMap),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(d=>{let[g,x]=Or(d),b=[];b[x]=t[d],m[g]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[g]=this.cloneTensorList(b))});let f=this.getFrozenTensorIds(m),h={};for(let d=0;d<l.length;d++){let g=l[d];if(!m[g.name]){let x=tC(g,m,p,this._resourceManager);if(y.isPromise(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);m[g.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(x)),this.checkTensorForDisposal(g.name,g,m,p,f,s,h)}}return this.parent==null&&p.dispose(f),e.map(d=>Ke(d,m,p))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(o=>t[o]).map(o=>o.map(n=>n.id)));return new Set(e)}checkTensorForDisposal(t,e,o,n,s,i,a){e.category==="control"||i.indexOf(t)!==-1||(o[t].forEach(l=>{l!=null&&(a[l.id]=(a[l.id]||0)+e.children.length)}),e.inputs.forEach(l=>{if(l.category!=="control"){let u=qk(l.name,o,n);u?.forEach(c=>{if(c&&!c.kept&&!s.has(c.id)){let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,o=!1,n={},s={}){this.disposeIntermediateTensors(),o||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}let i=new oh(this.weightMap,n,s,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let a=await this.executeWithControlFlow(t,i,e,o),l=e.map(m=>Ke(m,a,i)),u=l.map(m=>m.id),c=Object.keys(t).map(m=>t[m].id),p=new Set([...u,...c,...this.weightIds]);return Object.values(a).forEach(m=>{m.forEach(f=>{f&&!f.isDisposed&&!p.has(f.id)&&f.dispose()})}),this.parent==null&&i.dispose(p),l}async executeFunctionAsync(t,e,o){let n=t.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(n,this.outputNodes,!0,e,o)}async executeWithControlFlow(t,e,o,n){let s=Object.keys(t),i=s.map(w=>this.graph.nodes[Or(w)[0]]),a=o.map(w=>Or(w)[0]),l=a.map(w=>this.graph.nodes[w]);l.length===0&&(l=this._outputs);let{usedNodes:u,missingInputs:c,dynamicNode:p,syncInputs:m}=eC(t,l,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:e.currentContext})),h=Object.assign({},this.weightMap);Object.keys(t).forEach(w=>{let[C,v]=Or(w),$=[];$[v]=t[w],h[C]=$});let d={},g=this.getFrozenTensorIds(h),x={};for(;f.length>0;){let w=this.processStack(i,f,e,h,x,g,a,d,u);await Promise.all(w)}p==null&&!n&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=l.filter(w=>!rC(w)&&!Ke(w.name,h,e)).map(w=>w.name);if(b.length>0){let w="";throw p!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${w}`)}return h}processStack(t,e,o,n,s,i,a,l,u){let c=[];for(;e.length>0;){let p=e.pop();o.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&T("isConstant",p.node,n,o)&&([m]=sn(p.node.name,o)),n[p.node.name]==null){let f=tC(p.node,n,o,this._resourceManager);m||([m]=sn(p.node.name,o));let h=o.currentContext;y.isPromise(f)?c.push(f.then(d=>(n[m]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(d)),o.currentContext=h,this.checkTensorForDisposal(m,p.node,n,o,i,a,l),this.processChildNodes(p.node,e,o,n,s,u),d))):(n[m]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(f)),this.checkTensorForDisposal(m,p.node,n,o,i,a,l),this.processChildNodes(p.node,e,o,n,s,u))}else this.processChildNodes(p.node,e,o,n,s,u)}return c}processChildNodes(t,e,o,n,s,i){t.children.forEach(a=>{let[l]=sn(a.name,o);s[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!Ke(u,n,o))&&(s[l]=!0,e.push({contexts:o.currentContext,node:a})):a.inputNames.every(u=>!!Ke(u,n,o))&&(s[l]=!0,e.push({contexts:o.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let o=t[e],[n]=Or(e),s=this.graph.nodes[n];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===o.shape.length&&o.shape.every((l,u)=>i[u]===-1||i[u]===l);y.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${o.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&y.assert(o.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${o.dtype}`)})}mapInputs(t){var e,o;let n={};for(let s in t){let i=(o=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||o===void 0?void 0:o[s];i!=null?n[i.name]=t[s]:n[s]=t[s]}return n}checkInputs(t){let e=Object.keys(t).filter(o=>{let[n]=Or(o);return this.graph.nodes[n]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var o,n;let s=(n=(o=this._signature)===null||o===void 0?void 0:o.outputs)===null||n===void 0?void 0:n[e];return s!=null?s.name:e},{})}checkOutputs(t){t.forEach(e=>{let[o]=Or(e);if(!this.graph.nodes[o])throw new Error(`The output '${e}' is not found in the graph`)})}};var kx=class{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var F4="?tfjs-format=file",_4="model.json",Ex=class{constructor(t,e={},o=Jo){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=o,e==null&&(this.loadOptions={}),this.resourceManager=new kx}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return y.isPromise(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;let e=this.artifacts.modelTopology,o=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(o=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}this.signature=o,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;let n=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Pl(rh.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let s=rh.Instance.transformGraph(t.modelInitializer);this.initializer=new Pl(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){let o=this.io.getSaveHandlers(t);if(o.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(o.length>1)throw new Error(`Found more than one (${o.length}) save handlers for URL '${t}'`);t=o[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof $t?[t]:t,o={};return e.forEach((n,s)=>o[this.structuredOutputKeys[s]]=n),o}return t}predict(t,e){let o=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(o)}async predictAsync(t,e){let o=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(o)}normalizeInputs(t){var e;if(!(t instanceof $t)&&!Array.isArray(t)){let s=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(s!=null)for(let i in s){let a=s[i];a.resourceId!=null&&(t[i]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let o=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+o!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-o} non-resource placeholders, while there are ${t.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((s,i)=>{var a,l,u;let c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?s[i]=this.resourceIdToCapturedInput[c]:s[i]=t[n++],s},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,o=Object.keys(e);for(let n=0;n<o.length;n++){let s=o[n],i=e[s];this.resourceIdToCapturedInput[i.resourceId]=t[n]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=this.executor.execute(t,e);return o.length>1?o:o[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let o=await this.executor.executeAsync(t,e);return o.length>1?o:o[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,o)=>(e[o]=[t[o]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&yt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function oC(r,t={},e=Jo){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=O4(r));let o=new Ex(r,t,e);return await o.load(),o}function O4(r){return r.endsWith("/")||(r=r+"/"),`${r}${_4}${F4}`}var _E=tm(wm());var DE=tm(wm());function vE(r,t){return NE(r,t)}function NE(r,t,e=new Map,o=new Set){if(r==null)return null;if(typeof Blob=="function"&&r instanceof Blob)return r.slice();if(o.has(r))throw new Error("Circular references are not supported.");if(e.has(r))return e.get(r);let n=t(r);if(n.recurse&&n.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(n.recurse)if(vp(r)){let s=Array.isArray(r)?[]:{};o.add(r);for(let i in r){let a=r[i],l=NE(a,t,e,o);s[i]=l}return o.delete(r),r.__proto__&&(s.__proto__=r.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return e.set(r,n.value),n.value}function kE(r,t=nC){return EE(r,t)}function EE(r,t,e=new Set){let o=r[0];if(e.has(o))throw new Error("Circular references are not supported.");let n=t(r);if(n.recurse&&n.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(n.recurse)if(vp(o)){let s=Array.isArray(o)?[]:{};e.add(o);for(let i in o){let a=r.map(u=>u[i]),l=EE(a,t,e);s[i]=l}return e.delete(o),s}else throw new Error(`Can't recurse into non-iterable type: ${o}`);else return n.value}function nC(r){return r===null?null:vp(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}function vp(r){let t=!1;if(z().get("IS_BROWSER"))t=r instanceof TextDecoder;else{let{StringDecoder:e}=SE();t=r instanceof e}return r!=null&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||typeof r=="object"&&!(r instanceof $t)&&!(r instanceof Promise)&&!t)}function $E(r){return r==null||P4(r)||Array.isArray(r)||typeof r=="object"&&r instanceof $t||y.isTypedArray(r)}function P4(r){return r===null||typeof r!="object"&&typeof r!="function"}function AE(r){return vE(r,z4)}function z4(r){return r instanceof $t?{value:r.clone(),recurse:!1}:vp(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}var Np=class{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,t==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(let e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.wrap(this.begin+t),o=this.get(e);return this.set(e,this.pop()),o}};var zl=class extends Np{constructor(){super(zl.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){let t=this.capacity*2,e=new Array(t),o=this.length();for(let n=0;n<o;n++)e[n]=this.get(this.wrap(this.begin+n));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=o}};zl.INITIAL_CAPACITY=32;function RE(r){return new sC(r)}function xC(r){return new iC(r)}function FE(r,t){return new Ax(r,t)}var ir=class{async toArray(){let t=[],e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){let t=this.prefetch(100),e=[],o=await t.next();for(;!o.done;)e.push(o.value),o=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),o=t(e.value);for(;!e.done&&o;)e=await this.next(),o=t(e.value)}handleErrors(t){return new fC(this,t)}filter(t){return new pC(this,t)}map(t){return new mC(this,t)}mapAsync(t){return new $x(this,t)}serialMapAsync(t){return new $x(this,t).serial()}flatmap(t){return new hC(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>e===!0)}rowMajorBatch(t,e=!0){return new cC(this,t,e)}columnMajorBatch(t,e=!0,o=nC){return this.rowMajorBatch(t,e).map(s=>kE(s,o))}concatenate(t,e){return new Ax(RE([this,t]),e)}take(t){return t<0||t==null?this:new uC(this,t)}skip(t){return t<0||t==null?this:new lC(this,t)}prefetch(t){return new Dx(this,t)}shuffle(t,e){return new gC(this,t,e)}serial(){return new aC(this)}},sC=class extends ir{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let t=this.items[this.trav];return this.trav++,{value:AE(t),done:!1}}},iC=class extends ir{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}},aC=class extends ir{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},lC=class extends ir{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let t=await this.upstream.next();if(t.done)return t;yt(t.value)}return this.upstream.next()}},uC=class extends ir{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},cC=class extends ir{constructor(t,e,o=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=o,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let t=[];for(;t.length<this.batchSize;){let e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}},pC=class extends ir{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;yt(t.value)}}},mC=class extends ir{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=vo.getTensorsInContainer(t.value),o=this.transform(t.value),n=vo.getTensorsInContainer(o);for(let s of e)vo.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}}},fC=class extends ir{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}},$x=class extends ir{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let t=await this.upstream.next();if(t.done)return{value:null,done:!0};let e=vo.getTensorsInContainer(t.value),o=await this.transform(t.value),n=vo.getTensorsInContainer(o);for(let s of e)vo.isTensorInList(s,n)||s.dispose();return{value:o,done:!1}}},nh=class extends ir{constructor(){super(),this.outputQueue=new zl,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},hC=class extends nh{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let t=await this.upstream.next();if(t.done)return!1;let e=vo.getTensorsInContainer(t.value),o=this.transform(t.value),n=vo.getTensorsInContainer(o);this.outputQueue.pushAll(o);for(let s of e)vo.isTensorInList(s,n)||s.dispose();return!0}},Ax=class extends ir{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,this.iterator==null){let o=await this.moreIterators.next();if(o.done)return{value:null,done:!0};this.iterator=o.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}},dC;(function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"})(dC||(dC={}));var Dx=class extends ir{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Np(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}},gC=class extends Dx{constructor(t,e,o){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=DE.alea(o||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(e.done)this.upstreamExhausted=!0;else return this.refill(),e}return{value:null,done:!0}}};var Ml=class{constructor(){this.size=null}batch(t,e=!0){let o=this;y.assert(t>0,()=>`batchSize needs to be positive, but it is
      ${t}`);let n;return this.size===1/0||this.size==null?n=this.size:e?n=Math.ceil(this.size/t):n=Math.floor(this.size/t),ln(async()=>(await o.iterator()).columnMajorBatch(t,e,B4),n)}concatenate(t){let e=this,o;return this.size===1/0||t.size===1/0?o=1/0:this.size!=null&&t.size!=null?o=this.size+t.size:o=null,ln(async()=>(await e.iterator()).concatenate(await t.iterator()),o)}filter(t){let e=this,o;return this.size===1/0?o=1/0:o=null,ln(async()=>(await e.iterator()).filter(n=>M(()=>t(n))),o)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){let e=this;return ln(async()=>(await e.iterator()).map(o=>M(()=>t(o))),this.size)}mapAsync(t){let e=this;return ln(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(t==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let e=this;return ln(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){let e=this,o;return this.size!=null&&t>0?o=this.size*t:t===0?o=0:this.size!=null&&(t===void 0||t<0)?o=1/0:o=null,ln(async()=>{let n=xC(async()=>({value:await e.iterator(),done:!1}));return FE(n.take(t))},o)}skip(t){let e=this,o;return this.size!=null&&t>=0&&this.size>=t?o=this.size-t:this.size!=null&&(this.size<t||t===void 0||t<0)?o=0:o=null,ln(async()=>(await e.iterator()).skip(t),o)}shuffle(t,e,o=!0){if(t==null||t<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let n=this,s=_E.alea(e||y.now().toString());return ln(async()=>{let i=s.int32();return o&&(i+=s.int32()),(await n.iterator()).shuffle(t,i.toString())},this.size)}take(t){let e=this,o;return this.size!=null&&this.size>t?o=t:this.size!=null&&this.size<=t?o=this.size:o=null,ln(async()=>(await e.iterator()).take(t),o)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Ml.MAX_BUFFER_SIZE=1e4;function ln(r,t=null){return new class extends Ml{constructor(){super(...arguments),this.size=t}async iterator(){return r()}}}function B4(r){if(r===null)return null;let t=r[0];return $E(t)?{value:V4(r),recurse:!1}:{value:null,recurse:!0}}function V4(r){if(r.length===0)throw new Error("Can't make a batch of zero elements.");return r[0]instanceof $t?Ie(r):Ue(r)}var IZt=Symbol("out"),SZt=Symbol("field"),vZt=Symbol("quote"),NZt=Symbol("quoteafterquote"),kZt=Symbol("quoteinquote");function Y(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Z4=hr.whereImpl,Bl=class extends qn{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Wa(this,Vr())}nextDataId(){return Bl.nextDataId++}write(t,e,o){this.firstUse&&(this.firstUse=!1,z().get("IS_NODE")&&N.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let n={id:this.nextDataId()};return this.data.set(n,{values:t,dtype:o,refCount:1}),n}makeTensorInfo(t,e,o){let n;if(e==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let s=o.map(i=>y.encodeString(i));n=this.write(s,t,e)}else n=this.write(o,t,e);return{dataId:n,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){let e=this.data.get(t);e.refCount--}}move(t,e,o,n,s){this.data.set(t,{values:e,dtype:n,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:e,complexTensorInfos:o}=this.data.get(t);if(e==="complex64"){let n=this.readSync(o.real.dataId),s=this.readSync(o.imag.dataId);return N.mergeRealAndImagArrays(n,s)}return y.convertBackendValuesAndArrayBuffer(this.data.get(t).values,e)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let o=e.map(n=>y.decodeString(n));return mt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return mt(t.shape,t.dtype,e)}makeOutput(t,e,o){return Vr().makeTensorFromTensorInfo(this.makeTensorInfo(e,o,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(t);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let e=y.now();return t(),{kernelMs:y.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Y([t],"where");let e=this.readSync(t.dataId);return Z4(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Bl.nextDataId=0;var UC={};Kt(UC,{addImpl:()=>wC,bincountImpl:()=>$p,bincountReduceImpl:()=>Rx,castImpl:()=>bC,ceilImpl:()=>CC,concatImpl:()=>Fx,equalImpl:()=>TC,expImpl:()=>SC,expm1Impl:()=>NC,floorImpl:()=>kC,gatherNdImpl:()=>_x,gatherV2Impl:()=>Ox,greaterEqualImpl:()=>$C,greaterImpl:()=>EC,lessEqualImpl:()=>DC,lessImpl:()=>AC,linSpaceImpl:()=>Lx,logImpl:()=>RC,maxImpl:()=>Px,maximumImpl:()=>FC,minimumImpl:()=>_C,multiplyImpl:()=>sh,negImpl:()=>OC,notEqualImpl:()=>LC,prodImpl:()=>PC,raggedGatherImpl:()=>zx,raggedRangeImpl:()=>Mx,raggedTensorToTensorImpl:()=>Bx,rangeImpl:()=>Vx,rsqrtImpl:()=>zC,scatterImpl:()=>ni,sigmoidImpl:()=>u$,simpleAbsImpl:()=>yC,sliceImpl:()=>BC,sparseFillEmptyRowsImpl:()=>Gx,sparseReshapeImpl:()=>Wx,sparseSegmentReductionImpl:()=>Rp,sqrtImpl:()=>m$,squaredDifferenceImpl:()=>VC,stridedSliceImpl:()=>Ux,stringNGramsImpl:()=>Hx,stringSplitImpl:()=>Kx,stringToHashBucketFastImpl:()=>qx,subImpl:()=>WC,tileImpl:()=>jx,topKImpl:()=>Xx,transposeImpl:()=>Ap,uniqueImpl:()=>Yx});function yC(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var J4=r=>{let{x:t}=r.inputs,e=r.backend;Y(t,"abs");let o=new Float32Array(y.sizeFromShape(t.shape)),n=e.data.get(t.dataId).values;return o=yC(n),e.makeOutput(o,t.shape,t.dtype)},OE={kernelName:hi,backendName:"cpu",kernelFunc:J4};function zt(r){return(t,e,o,n,s)=>{let i=N.assertAndGetBroadcastShape(t,e),a=i.length,l=y.computeStrides(i),u=y.sizeFromShape(i),c=y.getTypedArrayFromDType(s,u),p=t.length,m=e.length,f=y.computeStrides(t),h=y.computeStrides(e),d=N.getBroadcastDims(t,i),g=N.getBroadcastDims(e,i);if(d.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=r(o[x%o.length],n[x%n.length]);else for(let x=0;x<c.length;++x){let b=y.indexToLoc(x,a,l),w=b.slice(-p);d.forEach(R=>w[R]=0);let C=y.locToIndex(w,p,f),v=b.slice(-m);g.forEach(R=>v[R]=0);let $=y.locToIndex(v,m,h);c[x]=r(o[C],n[$])}return[c,i]}}function qe(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,a=e.makeTensorInfo(o.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(o.shape,"float32",s),imag:e.makeTensorInfo(n.shape,"float32",i)},a}var LE={kernelName:hu,backendName:"cpu",kernelFunc:qe};function kp(r,t,e="float32"){if(e==="complex64"){let n=kp(r,t,"float32"),s=kp(r,t,"float32");return qe({inputs:{real:n,imag:s},backend:r})}let o=y.makeZerosTypedArray(y.sizeFromShape(t),e);return r.makeTensorInfo(t,e,o)}function gr(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var PE={kernelName:hn,backendName:"cpu",kernelFunc:gr};function Mo(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.real,s=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,s)}var zE={kernelName:Ku,backendName:"cpu",kernelFunc:Mo};function bC(r,t,e,o){if(o==="int32"){let n=Int32Array.from(r);return[t,"int32",n]}if(o==="bool"){let n=y.toTypedArray([0],e),[s,i]=zt((a,l)=>a!==l?1:0)(t,[],r,n,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${o}`)}function Bo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return gr({inputs:{x:n},backend:e});let c=kp(e,n.shape,n.dtype),p=Bo({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),m=qe({inputs:{real:p,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),m}if(n.dtype==="complex64"){let c=Mo({inputs:{input:n},backend:e}),p=Bo({inputs:{x:c},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(c),p}if(!y.hasEncodingLoss(n.dtype,s)){let c=gr({inputs:{x:n},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:s}}let i=e.data.get(n.dataId).values,[a,l,u]=bC(i,n.shape,n.dtype,s);return e.makeTensorInfo(a,l,u)}var ME={kernelName:fn,backendName:"cpu",kernelFunc:Bo};function Gt(r,t,e,o){return e==null?({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;Y([i,a],r);let u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,p=i.dtype==="string"?N.fromUint8ToStringArray(u):u,m=i.dtype==="string"?N.fromUint8ToStringArray(c):c,f=o||i.dtype,[h,d]=t(i.shape,a.shape,p,m,f);return l.makeTensorInfo(d,f,h)}:({inputs:n,backend:s})=>{let{a:i,b:a}=n,l=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let u=Bo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=l.data.get(p.dataId).values,h=l.data.get(m.dataId).values,d=Bo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(d.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=l.data.get(x.dataId).values,C=l.data.get(b.dataId).values,[v,$,R]=e(i.shape,a.shape,f,h,w,C),F=l.makeTensorInfo(R,"float32",v),O=l.makeTensorInfo(R,"float32",$),P=qe({inputs:{real:F,imag:O},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(F),l.disposeIntermediateTensorInfo(O),P}else{let u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,p=o||i.dtype,[m,f]=t(i.shape,a.shape,u,c,p);return l.makeTensorInfo(f,p,m)}}}function Ep(r){return(t,e,o,n,s,i)=>{let a=N.assertAndGetBroadcastShape(t,e),l=y.sizeFromShape(a),u=a.length,c=y.computeStrides(a),p=y.getTypedArrayFromDType("float32",l),m=y.getTypedArrayFromDType("float32",l),f=N.getBroadcastDims(t,a),h=N.getBroadcastDims(e,a),d=N.mergeRealAndImagArrays(o,n),g=N.mergeRealAndImagArrays(s,i),x=t.length,b=y.computeStrides(t),w=e.length,C=y.computeStrides(e);if(f.length+h.length===0)for(let v=0;v<p.length;v++){let $=v%d.length,R=v%g.length,F=r(d[$*2],d[$*2+1],g[R*2],g[R*2+1]);p[v]=F.real,m[v]=F.imag}else for(let v=0;v<p.length;v++){let $=y.indexToLoc(v,u,c),R=$.slice(-x);f.forEach(V=>R[V]=0);let F=y.locToIndex(R,x,b),O=$.slice(-w);h.forEach(V=>O[V]=0);let P=y.locToIndex(O,w,C),B=r(d[F*2],d[F*2+1],g[P*2],g[P*2+1]);p[v]=B.real,m[v]=B.imag}return[p,m,a]}}var wC=zt((r,t)=>r+t),Q4=Ep((r,t,e,o)=>({real:r+e,imag:t+o})),zn=Gt(qo,wC,Q4),BE={kernelName:qo,backendName:"cpu",kernelFunc:zn};function $p(r,t,e,o,n){let s=y.sizeFromShape(o),i=y.makeZerosTypedArray(n,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s>0?i[l]+=t[a]:i[l]+=1)}return i}function Rx(r,t,e,o=!1){let n=r.shape[0],s=r.shape[1],i=mt([n,e],t.dtype);for(let a=0;a<n;a++)for(let l=0;l<s;l++){let u=r.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(o?i.set(1,a,u):t.size>0?i.set(i.get(a,u)+t.get(a,l),a,u):i.set(i.get(a,u)+1,a,u))}return i}function Lr(r){return(t,e,o)=>{let n=y.getTypedArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)n[s]=r(t[s],o);return n}}function wt(r,t,e){return({inputs:o,attrs:n,backend:s})=>{let{x:i}=o;if(Y(i,r),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,l=a.data.get(i.dataId).values,u=y.sizeFromShape(i.shape),c=e||i.dtype,p=y.getArrayFromDType(c,u);for(let m=0;m<u;++m)p[m]=t(l[m],n);return a.makeTensorInfo(i.shape,c,p)}}function Vo(r,t,e){return({inputs:o,attrs:n,backend:s})=>{let{x:i}=o;if(Y(i,r),i.dtype==="string"||e==="string")throw new Error("unaryKernelFunc does not support string input/output");let a=s,l=a.data.get(i.dataId).values,u=e||i.dtype,c=t(l,u,n);return a.makeTensorInfo(i.shape,u,c)}}var CC=Lr(r=>Math.ceil(r)),tH=Vo(rs,CC),VE={kernelName:rs,backendName:"cpu",kernelFunc:tH};function Fx(r,t,e,o){let n=y.getArrayFromDType(e,y.sizeFromShape(t));if(o&&e!=="string"){let s=0;r.forEach(i=>{let a=y.sizeFromShape(i.shape);n.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=e==="string"?N.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let c=u*t[1]+s;for(let p=0;p<i.shape[1];++p)n[c+p]=a[l++]}s+=i.shape[1]})}return n}var TC=zt((r,t)=>r===t?1:0),IC=Gt(qa,TC,null,"bool"),GE={kernelName:qa,backendName:"cpu",kernelFunc:IC};var SC=Lr(r=>Math.exp(r)),vC=Vo(us,SC,"float32"),WE={kernelName:us,backendName:"cpu",kernelFunc:vC};var NC=Lr(r=>Math.expm1(r)),eH=Vo(cs,NC),UE={kernelName:cs,backendName:"cpu",kernelFunc:eH};var kC=Lr(r=>Math.floor(r)),rH=Vo(ps,kC),HE={kernelName:ps,backendName:"cpu",kernelFunc:rH};function _x(r,t,e,o,n,s,i,a,l){let u=mt([o,s],e);for(let c=0;c<o;c++){let p=[],m=0;for(let f=0;f<n;f++){let h=r[c*n+f];m+=h*i[f],p.push(h)}if(m<0||m>=l/s)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let f=0;f<s;f++)u.values[c*s+f]=t.get(...t.indexToLoc(m*s+f))}return u}function Ox(r,t,e){let o=mt(e,r.dtype);for(let n=0;n<o.size;++n){let i=o.indexToLoc(n).slice(),a=i[0],l=i[2],u=t.locToIndex([a,l]);i[2]=t.values[u];let c=r.locToIndex(i);0<=c&&c<r.values.length&&(o.values[n]=r.values[c])}return o}var EC=zt((r,t)=>r>t?1:0),oH=Gt(ja,EC,null,"bool"),KE={kernelName:ja,backendName:"cpu",kernelFunc:oH};var $C=zt((r,t)=>r>=t?1:0),nH=Gt(fs,$C,null,"bool"),qE={kernelName:fs,backendName:"cpu",kernelFunc:nH};var AC=zt((r,t)=>r<t?1:0),sH=Gt(Xa,AC,null,"bool"),jE={kernelName:Xa,backendName:"cpu",kernelFunc:sH};var DC=zt((r,t)=>r<=t?1:0),iH=Gt(Ya,DC,null,"bool"),XE={kernelName:Ya,backendName:"cpu",kernelFunc:iH};function Lx(r,t,e){let o=(t-r)/(e-1),n=y.makeZerosTypedArray(e,"float32");n[0]=r;for(let s=1;s<n.length;s++)n[s]=n[s-1]+o;return n}var RC=Lr(r=>Math.log(r)),aH=Vo(xs,RC),YE={kernelName:xs,backendName:"cpu",kernelFunc:aH};function Px(r,t,e,o){let n=y.getTypedArrayFromDType(o,y.sizeFromShape(e));for(let s=0;s<n.length;++s){let i=s*t,a=r[i];for(let l=0;l<t;++l){let u=r[i+l];(Number.isNaN(u)||u>a)&&(a=u)}n[s]=a}return n}var FC=zt((r,t)=>Math.max(r,t)),lH=Gt(bs,FC),ZE={kernelName:bs,backendName:"cpu",kernelFunc:lH};var _C=zt((r,t)=>Math.min(r,t)),uH=Gt(ws,_C),JE={kernelName:ws,backendName:"cpu",kernelFunc:uH};var sh=zt((r,t)=>r*t),cH=Ep((r,t,e,o)=>({real:r*e-t*o,imag:r*o+t*e})),Vl=Gt(Ts,sh,cH),QE={kernelName:Ts,backendName:"cpu",kernelFunc:Vl};function OC(r,t,e){let o=y.createScalarValue(-1,e);return sh([],t,o,r,e)}function pH(r){let{inputs:t,backend:e}=r,{x:o}=t;Y(o,"neg");let n=e.data.get(o.dataId).values,[s,i]=OC(n,o.shape,o.dtype);return e.makeTensorInfo(i,o.dtype,s)}var t$={kernelName:Vi,backendName:"cpu",kernelFunc:pH};var LC=zt((r,t)=>r!==t?1:0),mH=Gt(tl,LC,null,"bool"),e$={kernelName:tl,backendName:"cpu",kernelFunc:mH};function Ap(r,t,e,o,n){let s=t.length,i=y.sizeFromShape(t),a=y.computeStrides(t),l=y.computeStrides(n),u=y.getTypedArrayFromDType(e,y.sizeFromShape(n));for(let c=0;c<i;++c){let p=y.indexToLoc(c,s,a),m=new Array(p.length);for(let h=0;h<m.length;h++)m[h]=p[o[h]];let f=y.locToIndex(m,s,l);u[f]=r[c]}return u}function be(r){let{inputs:t,attrs:e,backend:o}=r,{x:n}=t,{perm:s}=e;Y(n,"transpose");let i=n.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=n.shape[s[p]];let l=o.data.get(n.dataId).values,u=Ap(l,n.shape,n.dtype,s,a);return{dataId:o.write(u,a,n.dtype),shape:a,dtype:n.dtype}}var r$={kernelName:gn,backendName:"cpu",kernelFunc:be};function PC(r,t,e,o){let[n,s]=N.computeOutAndReduceShapes(r,o),i=Le(t,"int32"),a=y.makeZerosTypedArray(y.sizeFromShape(n),i),l=y.sizeFromShape(s);for(let u=0;u<a.length;++u){let c=u*l,p=1;for(let m=0;m<l;++m)p*=e[c+m];a[u]=p}return{outVals:a,outShape:n,outDtype:i}}function fH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;Y(n,"prod");let a=n.shape.length,l=y.parseAxisParam(s,n.shape),u=N.getAxesPermutation(l,a),c=l,p=n,m=[];u!=null&&(p=be({inputs:{x:n},backend:e,attrs:{perm:u}}),m.push(p),c=N.getInnerMostAxes(c.length,a));let f=e.data.get(p.dataId).values,{outVals:h,outShape:d,outDtype:g}=PC(p.shape,p.dtype,f,c),x=d;return i&&(x=N.expandShapeToKeepDim(d,l)),m.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(x,g,h)}var o$={kernelName:qi,backendName:"cpu",kernelFunc:fH};function hH(r,t,e){r.forEach((o,n)=>{if(o<0||o>=e){let s=y.indexToLoc(n,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${o} is not in [0, ${e})`)}})}function dH(r,t){for(let e=0;e<r.length;++e){let o=r[e],n=e===r.length-1?t:r[e+1].length;if(o.length===0)throw new Error("Ragged splits may not be empty");if(o[0]<0)throw new Error("Ragged splits must be non-negative");if(o[o.length-1]>n)throw new Error("Ragged splits must not point past values");for(let s=1;s<o.length;++s)if(o[s-1]>o[s])throw new Error("Ragged splits must be sorted in ascending order")}}function gH(r,t,e,o){let n=[],s=0,i=t.length-1+e.length,a=new Array(i).fill(null).map(()=>[0]);dH(e,o);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let c=t[u+1];for(let p=1;p<l+1;++p)a[u].push(p*c)}for(let u=0;u<r.length;++u){let c=r[u],p=r[u]+1;for(let m=0;m<e.length;++m){let f=e[m],h=m+t.length-1;if(h>=0){let d=a[h],g=d[d.length-1]-f[c];for(let x=c;x<p;++x)a[h].push(f[x+1]+g)}c=f[c],p=f[p]}p!==c&&(n.push([c,p]),s+=p-c)}return{outSplits:a,valueSlices:n,numValues:s}}function xH(r){let t=[];for(let e=0;e<r.length;++e){let o=r[e].length,n=y.getArrayFromDType("int32",o);t.push(n),r[e].forEach((s,i)=>n[i]=s)}return t}function n$(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let o=t;o<r.length;o++)e[t-1]*=r[o];return e}function yH(r,t,e,o,n,s){let i=n$(t,2)[1],a=n$(s,2)[1],l=0;for(let u of e)for(let c=u[0];c<u[1];++c){for(let p=0;p<o;++p)n[l*a+p]=r[c*i+p];++l}}function bH(r,t,e,o,n){let s=t.slice();s[0]=n;let i=y.getArrayFromDType(e,y.sizeFromShape(s)),a=r.length,l=a===0?0:a/t[0];return yH(r,t,o,l,i,s),[i,s]}function zx(r,t,e,o,n,s,i,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(hH(s,i,l),o.length===0)throw new Error("params.rank must be nonzero");let u=o[0],{outSplits:c,valueSlices:p,numValues:m}=gH(s,i,r,u),f=xH(c),h=bH(e,o,n,p,m);return[f,h[0],h[1]]}var s$=2147483647;function Mx(r,t,e,o,n,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(n.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=n.length===0,u=i.length===0,c=[];a||c.push(t[0]),l||c.push(n[0]),u||c.push(i[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],m=y.getArrayFromDType("int32",p+1);m[0]=0;for(let g=0;g<p;++g){let x=a?r[0]:r[g],b=l?o[0]:o[g],w=u?s[0]:s[g];if(w===0)throw new Error("Requires delta != 0");let C;if(w>0&&b<x||w<0&&b>x)C=0;else if(C=Math.ceil(Math.abs((b-x)/w)),C>s$)throw new Error(`Requires ((limit - start) / delta) <= ${s$}`);m[g+1]=m[g]+C}let f=m[p],h=y.getArrayFromDType(e,f),d=0;for(let g=0;g<p;++g){let x=m[g+1]-m[g],b=a?r[0]:r[g],w=u?s[0]:s[g];for(let C=0;C<x;++C)h[d++]=b,b+=w}return[m,h]}var Go=N.RowPartitionType,Dp=class{constructor(t,e,o,n,s,i,a,l,u,c){this.shape=t,this.shapeShape=e,this.values=o,this.valuesShape=n,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=N.getRowPartitionTypesHelper(c),this.raggedRank=N.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Go.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Go.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Go.VALUE_ROWIDS:return Dp.getMaxWidthValueRowID(e);case Go.ROW_SPLITS:return Dp.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Go[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let o=0;for(let n=0;n<e-1;++n){let s=t[n+1]-t[n];s>o&&(o=s)}return o}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let o=0,n=t[0],s=0;for(let i=1;i<e;++i){let a=t[i];a!==n&&(n=a,s=Math.max(i-o,s),o=i)}return Math.max(e-o,s)}tensorShapeFromTensor(t,e,o=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return a$(t,o)}calculateOutputSize(t){let e=this.valuesShape,o=this.defaultValueShape;N.validateDefaultValueShape(o,e);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=N.combineRaggedTensorToTensorShapes(this.raggedRank,n,e);i[0]<0&&(i[0]=t);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(t,e,o){let n=Math.min(t,o),s=[],i=0;for(let a=0;a<n;++a,i+=e)s.push(i);for(let a=n;a<t;++a)s.push(-1);return y.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,o,n){let s=t.length,i=[];for(let a=0;a<s-1;++a){let l=t[a+1]-t[a],u=Math.min(n,l),c=e[a];c===-1&&(u=0);for(let p=0;p<u;++p)i.push(c),c+=o;for(let p=0;p<l-u;++p)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,o,n){let s=t.length,i=[];if(s===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];i.push(u);for(let c=1;c<s;++c){let p=t[c];if(p===l)u>=0&&(++a,a<n?u+=o:u=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);u=e[p]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,o,n){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case Go.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,o,n);case Go.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,o,n);default:throw new Error(`Unsupported partition type: ${Go[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case Go.FIRST_DIM_SIZE:return t[0];case Go.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Go.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Go[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),o=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let l=n.length-2;l>=0;--l)n[l]=n[l+1]*o[l+1];let s=a$(o,!1),i=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(s));if(n[0]*o[0]>0){let l=this.calculateFirstParentOutputIndex(e,n[0],o[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,n[u],o[u]);this.setOutput(this.raggedRank,l,i,s)}return[s,i]}setOutput(t,e,o,n){if(o.length===0)return;let s=this.values,i=o,a=n.slice();a=a.slice(t+1);let l=y.sizeFromShape(a),u=e.length,c=this.defaultValue;if(c.length!==l&&c.length!==1){let h=this.defaultValueShape;M(()=>{let d=D(c,h);c=vn(d,a).dataSync()})}let p=0,m=0,f=0;for(let h=0;h<=u;++h){let d=h<u?e[h]:-1;if(d===f){++f;continue}if(m<f){let g=s.subarray(p*l),x=i.subarray(m*l),b=(f-m)*l;i$(x,g,b)}if(h>=u){let g=o.length;d=Math.floor(g/l)}if(d>f)if(this.defaultValue.length===1)i.subarray(f*l,d*l).fill(this.defaultValue[0]),f=d;else for(;d>f;){let g=i.slice(f*l);i$(g,c,l),++f}d<0?(p=h+1,m=f):(p=h,m=f,f=m+1)}}};function i$(r,t,e){for(let o=0;o<e;o++)r[o]=t[o]}function a$(r,t){let e=[];for(let o of r){if(o<0){if(!t)throw new Error(`Dimension ${o} must be >= 0`);if(o<-1)throw new Error(`Dimension ${o} must be >= -1`);o=-1}e.push(o)}return e}function Bx(r,t,e,o,n,s,i,a,l,u){return new Dp(r,t,e,o,n,s,i,a,l,u).compute()}function Vx(r,t,e,o){let n=r===t,s=r<t&&e<0,i=t<r&&e>1;if(n||s||i)return y.makeZerosTypedArray(0,o);let a=Math.abs(Math.ceil((t-r)/e)),l=y.makeZerosTypedArray(a,o);t<r&&e===1&&(e=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}var zC=Lr(r=>1/Math.sqrt(r)),wH=Vo(Es,zC),l$={kernelName:Es,backendName:"cpu",kernelFunc:wH};function ni(r,t,e,o,n,s,i,a,l,u){let c=[o/n,n],p=r.values,m=t.values;if(o===0)return mt(e,t.dtype);let f=mt(c,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let h=0;h<s;h++){let d=[],g=0;for(let x=0;x<i;x++){let b=p[h*i+x];d.push(b),g+=b*a[x]}if(g<0||g>=o/n)throw new Error(`Invalid indices: ${d} does not index into ${e}`);for(let x=0;x<n;x++)u?f.values[g*n+x]+=m[h*n+x]:f.values[g*n+x]=t.rank===0?m[0]:m[h*n+x]}return f}var u$=Lr(r=>1/(1+Math.exp(-r))),MC=wt(Fs,r=>1/(1+Math.exp(-r))),c$={kernelName:Fs,backendName:"cpu",kernelFunc:MC};function BC(r,t,e,o,n){let s=Ze.isSliceContinous(o,t,e),i=y.sizeFromShape(e),a=y.computeStrides(o);if(s){let p=Ze.computeFlatOffset(t,a);return n==="string"?r.slice(p,p+i):r.subarray(p,p+i)}let l=n==="string"?N.fromUint8ToStringArray(r):r,u=mt(o,n,l),c=mt(e,n);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((h,d)=>h+t[d]);c.set(u.get(...f),...m)}return n==="string"?N.fromStringArrayToUint8(c.values):c.values}function Wo(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,size:i}=o;Y(n,"slice");let[a,l]=Ze.parseSliceParams(n,s,i);Ze.assertParamsValid(n,a,l);let u=e.data.get(n.dataId).values,c=BC(u,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,c)}var p$={kernelName:Qi,backendName:"cpu",kernelFunc:Wo};function Gx(r,t,e,o,n,s,i){let a=t[0],l=s[0],u=new Array(l),c=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let g=y.getArrayFromDType(e,0),x=y.getArrayFromDType(n,0);return[g,[0,p],x,u,c]}let m=!0,f=0,h=new Array(l).fill(0);for(let g=0;g<a;++g){let x=r[g*p];if(x<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,x));if(x>=l)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,x,l));++h[x],m=m&&x>=f,f=x}let d=!0;for(let g=0;g<l;++g){let x=h[g]===0;u[g]=x,d=d&&!x,h[g]=Math.max(h[g],1),g>0&&(h[g]+=h[g-1])}if(d&&m){let g=r,x=o;for(let b=0;b<a;++b)c[b]=b;return[g,[a,p],x,u,c]}else{let g=h[l-1],x=y.getArrayFromDType(e,g*p),b=y.getArrayFromDType(n,g),w=new Array(l).fill(0);for(let C=0;C<a;++C){let v=r[C*p],$=w[v],R=(v===0?0:h[v-1])+$;w[v]++;for(let F=0;F<p;++F)x[R*p+F]=r[C*p+F];b[R]=o[C],c[C]=R}for(let C=0;C<l;++C)if(w[C]===0){let $=C===0?0:h[C-1];x[$*p+0]=C;for(let R=1;R<p;++R)x[$*p+R]=0;b[$]=i}return[x,[g,p],b,u,c]}}function Wx(r,t,e,o,n){let s=y.sizeFromShape(o),i=t[0],a=n.length,l=[],u=1,c=-1;for(let g=0;g<a;++g){let x=n[g];if(x===-1){if(c!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,l.push(1)}else{if(x<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(g,x));u*=x,l.push(x)}}if(c!==-1){if(u<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(s/u);if(u*g!==s)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(o,l));l[c]=g}if(y.sizeFromShape(l)!==s)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(o,l));let m=o.length,f=[];if(m>0){f[m-1]=1;for(let g=m-2;g>=0;--g)f[g]=f[g+1]*o[g+1]}let h=[];if(a>0){h[a-1]=1;for(let g=a-2;g>=0;--g)h[g]=h[g+1]*l[g+1]}let d=y.getArrayFromDType(e,i*a);for(let g=0;g<i;++g){let x=0;for(let b=0;b<m;++b)x+=r[g*m+b]*f[b];for(let b=0;b<a;++b)d[g*a+b]=Math.trunc(x/h[b]),x%=h[b]}return[d,[i,a],l]}function Rp(r,t,e,o,n,s=!1,i=0){let a=o.length,l=[t[0],r.length/t[0]],u=l[1],p=a>0?n[a-1]+1:0;if(p<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=t.slice();m[0]=p;let f=m.reduce((w,C)=>w*C,1),h=y.getArrayFromDType(e,f);if(a===0)return p>0&&h.fill(i),[h,m];if(p<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=0,g=1,x=0,b=n[d];for(;;){let w=0;if(g<a){if(w=n[g],b===w){++g;continue}if(b>=w)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>x&&h.fill(i,x*u,b*u);for(let C=d;C<g;++C){let v=o[C];if(v<0||v>=l[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(C,o[C],l[0]));for(let $=0;$<u;$++)h[b*u+$]+=r[v*u+$]}if(s)for(let C=0;C<u;C++)h[b*u+C]/=g-d;if(d=g,++g,x=b+1,b=w,g>a)break}return x<p&&h.fill(i,x*u,p*u),[h,m]}var m$=Lr(r=>Math.sqrt(r)),CH=wt(Os,r=>Math.sqrt(r)),f$={kernelName:Os,backendName:"cpu",kernelFunc:CH};var VC=zt((r,t)=>{let e=r-t;return e*e}),TH=Gt(Ls,VC),h$={kernelName:Ls,backendName:"cpu",kernelFunc:TH};function Ux(r,t,e,o){let n=mt(r,t.dtype);for(let s=0;s<n.size;s++){let i=n.indexToLoc(s),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*e[l]+o[l];n.set(t.get(...a),...i)}return n}var GC=class{constructor(t,e,o,n,s,i){this.separator=y.encodeString(t),this.nGramWidths=e,this.leftPad=y.encodeString(o),this.rightPad=y.encodeString(n),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let o=this.getPadWidth(e);return Math.max(0,t+2*o-e+1)}createNGrams(t,e,o,n,s,i){for(let a=0;a<s;++a){let l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(s-(a+1))),p=i-(u+c),m=e+(u>0?0:a-l),f=0;f+=u*this.leftPad.length;for(let b=0;b<p;++b)f+=t[m+b].length;f+=c*this.rightPad.length;let h=u+c+p-1;f+=h*this.separator.length,o[n+a]=new Uint8Array(f);let d=o[n+a],g=0,x=b=>b.forEach(w=>d[g++]=w);for(let b=0;b<u;++b)x(this.leftPad),x(this.separator);for(let b=0;b<p-1;++b)x(t[m+b]),x(this.separator);if(p>0){x(t[m+p-1]);for(let b=0;b<c;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<c-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){let o=t.length,n=e.length;if(n>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<n;++u){let c=e[u]>=l;if(c=c&&e[u]<=o,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${o}]`);l=e[u]}if(l!==o)throw new Error(`Last split value must be data size. Expected ${o}, got ${l}`)}let s=n-1,i=y.getArrayFromDType("int32",n);if(o===0||n===0){let l=new Array(o);for(let u=0;u<=s;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=s;++l){let u=e[l]-e[l-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(u,p)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}let a=new Array(i[s]);for(let l=0;l<s;++l){let u=e[l],c=i[l];if(this.nGramWidths.forEach(p=>{let m=e[l+1]-e[l],f=this.getNumNGrams(m,p);this.createNGrams(t,u,a,c,f,p),c+=f}),this.preserveShort&&c===i[l]){let p=e[l+1]-e[l];if(p===0)continue;let m=p+2*this.padWidth,f=1;this.createNGrams(t,u,a,c,f,m)}}return[a,i]}};function Hx(r,t,e,o,n,s,i,a){return new GC(e,o,n,s,i,a).compute(r,t)}function IH(r,t,e,o){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)o.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!e||a.length!==0)&&o.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!e||r.length!==0)&&o.push(r);return}let n=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let i=r.subarray(n,s);(!e||i.length!==0)&&o.push(i),n=s+1}}function Kx(r,t,e){let o=r.length,n=[],s=0,i=0,a=new Array(o);for(let m=0;m<o;++m){let f=n.length;IH(r[m],t,e,n);let h=n.length-f;a[m]=h,s+=h,i=Math.max(i,h)}let l=y.getArrayFromDType("int32",s*2),u=new Array(s),c=[o,i],p=0;for(let m=0;m<o;++m)for(let f=0;f<a[m];++f)l[p*2]=m,l[p*2+1]=f,u[p]=n[p],++p;return[l,u,c]}function qx(r,t){let e=y.getArrayFromDType("int32",r.length);for(let o=0;o<r.length;++o)e[o]=y.fingerPrint64(r[o]).modulo(t).getLowBitsUnsigned();return e}var WC=zt((r,t)=>r-t),SH=Ep((r,t,e,o)=>({real:r-e,imag:t-o})),ih=Gt(Ps,WC,SH),d$={kernelName:Ps,backendName:"cpu",kernelFunc:ih};function jx(r,t){let e=new Array(r.rank);for(let n=0;n<e.length;n++)e[n]=r.shape[n]*t[n];let o=mt(e,r.dtype);for(let n=0;n<o.values.length;++n){let s=o.indexToLoc(n),i=new Array(r.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%r.shape[l];let a=r.locToIndex(i);o.values[n]=r.values[a]}return o}var ah=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function g$(r,t,e=0,o=r.length-1){for(;o>e;){if(o-e>600){let a=o-e+1,l=t-e+1,u=Math.log(a),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),m=Math.max(e,Math.floor(t-l*c/a+p)),f=Math.min(o,Math.floor(t+(a-l)*c/a+p));g$(r,t,m,f)}let n=r[t],s=e,i=o;for(y.swap(r,e,t),ah(r[o],n)>0&&y.swap(r,e,o);s<i;){for(y.swap(r,s,i),s++,i--;ah(r[s],n)<0;)s=s+1;for(;ah(r[i],n)>0;)i=i-1}ah(r[e],n)===0?y.swap(r,e,i):(i=i+1,y.swap(r,i,o)),i<=t&&(e=i+1),t<=i&&(o=i-1)}}function Xx(r,t,e,o,n){let s=t[t.length-1],[i,a]=[r.length/s,s],l=y.getTypedArrayFromDType(e,i*o),u=y.getTypedArrayFromDType("int32",i*o);for(let p=0;p<i;p++){let m=p*a,f=r.subarray(m,m+a),h=new Array(f.length);f.forEach((b,w)=>h[w]={value:b,index:w}),o<h.length&&(g$(h,o),h=h.slice(0,o)),n&&h.sort(ah);let d=p*o,g=l.subarray(d,d+o),x=u.subarray(d,d+o);for(let b=0;b<o;b++)g[b]=h[b].value,x[b]=h[b].index}let c=t.slice();return c[c.length-1]=o,[mt(c,e,l),mt(c,"int32",u)]}function Yx(r,t,e,o){let n=y.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let h=0;h<n;h++)s[0]*=e[h];s[1]=e[n];for(let h=n+1;h<e.length;h++)s[2]*=e[h];let i={},a=new Int32Array(e[n]),l=new Ut(s,o,r),u=[],c=s[0]===1&&s[2]===1;for(let h=0;h<e[n];h++){let d;if(c)d=r[h].toString();else{let g=[];for(let x=0;x<s[0];x++)for(let b=0;b<s[2];b++)g.push(l.get(x,h,b));d=g.join(",")}if(i[d]!==void 0)a[h]=i[d];else{let g=Object.keys(i).length;i[d]=g,a[h]=g,u.push(h)}}let p=s.slice();p[1]=Object.keys(i).length;let m=new Ut(p,o);u.forEach((h,d)=>{for(let g=0;g<s[0];g++)for(let x=0;x<s[2];x++)m.set(l.get(g,h,x),g,d,x)});let f=e.slice();return f[n]=p[1],{outputValues:m.values,outputShape:f,indices:a}}Hh("cpu",()=>new Bl,1);var HC=wt(as,r=>r>=0?r:Math.exp(r)-1),x$={kernelName:as,backendName:"cpu",kernelFunc:HC};function KC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:s}=o;Y([n],"leakyRelu");let i=y.sizeFromShape(n.shape),a=e.data.get(n.dataId).values,l=y.getTypedArrayFromDType("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?s*a[u]:a[u];return e.makeTensorInfo(n.shape,"float32",l)}var y$={kernelName:Fi,backendName:"cpu",kernelFunc:KC};var vH=zt((r,t)=>r<0?t*r:r);function qC(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t;Y([o,n],"prelu");let s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,[a,l]=vH(o.shape,n.shape,s,i,"float32");return e.makeTensorInfo(l,"float32",a)}var b$={kernelName:Ki,backendName:"cpu",kernelFunc:qC};var jC=wt(vs,r=>Math.max(0,r)),w$={kernelName:vs,backendName:"cpu",kernelFunc:jC};var XC=wt(Ns,r=>Math.min(Math.max(0,r),6)),C$={kernelName:Ns,backendName:"cpu",kernelFunc:XC};function Gl(r,t,e,o,n){if(e==="linear")return gr({inputs:{x:t},backend:r});if(e==="relu")return jC({inputs:{x:t},backend:r});if(e==="elu")return HC({inputs:{x:t},backend:r});if(e==="relu6")return XC({inputs:{x:t},backend:r});if(e==="prelu")return qC({inputs:{x:t,alpha:o},backend:r});if(e==="leakyrelu")return KC({inputs:{x:t},backend:r,attrs:{alpha:n}});if(e==="sigmoid")return MC({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function Ot(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:s}=o,i=y.sizeFromShape(n.shape),a=y.inferFromImplicitShape(s,i),l=y.sizeFromShape(a);y.assert(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(n.dataId);let u=e.data.get(n.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=a,p.shape=a}return{dataId:n.dataId,shape:a,dtype:n.dtype}}var T$={kernelName:ji,backendName:"cpu",kernelFunc:Ot};function YC(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s}=t,{transposeA:i,transposeB:a}=o;Y([n,s],"matMul");let l=n.shape.length,u=s.shape.length,c=i?n.shape[l-2]:n.shape[l-1],p=a?s.shape[u-1]:s.shape[u-2],m=i?n.shape[l-1]:n.shape[l-2],f=a?s.shape[u-2]:s.shape[u-1],h=n.shape.slice(0,-2),d=s.shape.slice(0,-2),g=y.sizeFromShape(h),x=y.sizeFromShape(d),w=eo.assertAndGetBroadcastShape(n.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);y.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${n.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let C=i?[g,c,m]:[g,m,c],v=a?[x,f,p]:[x,p,f],$=Ot({inputs:{x:n},backend:e,attrs:{shape:C}}),R=Ot({inputs:{x:s},backend:e,attrs:{shape:v}}),F=i?$.shape[1]:$.shape[2],O=i?$.shape[2]:$.shape[1],P=a?R.shape[1]:R.shape[2],B=Math.max(g,x),V=e.data.get($.dataId).values,G=e.data.get(R.dataId).values,H=y.computeStrides($.shape),W=y.computeStrides(R.shape),[j,Z,q]=i?[H[0],1,H[1]]:[H[0],H[1],1],[J,et,rt]=a?[1,W[1],W[0]]:[W[1],1,W[0]],at=O*P,it=mt([B,O,P],$.dtype),ct=it.values,lt=e.blockSize;for(let ft=0;ft<B;ft++){let Tt=ft%g,Nt=ft%x;for(let St=0;St<O;St+=lt){let Pt=Math.min(St+lt,O);for(let Mt=0;Mt<P;Mt+=lt){let se=Math.min(Mt+lt,P);for(let me=0;me<F;me+=lt){let Oe=Math.min(me+lt,F);for(let fe=St;fe<Pt;fe++)for(let ae=Mt;ae<se;ae++){let Re=0;for(let Se=me;Se<Oe;Se++){let Hn=V[Tt*j+fe*Z+Se*q],cr=G[Se*J+ae*et+Nt*rt];Re+=Hn*cr}ct[ft*at+(fe*P+ae)]+=Re}}}}}return e.disposeIntermediateTensorInfo($),e.disposeIntermediateTensorInfo(R),e.makeTensorInfo(w,it.dtype,it.values)}var I$={kernelName:wi,backendName:"cpu",kernelFunc:YC};function NH(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o,m,f,h,d=[];m=YC({inputs:{a:n,b:s},attrs:{transposeA:l,transposeB:u},backend:e}),i&&(f=zn({inputs:{a:m,b:i},backend:e}),d.push(m),m=f),c&&(h=Gl(e,m,c,a,p),d.push(m),m=h);for(let x of d)e.disposeIntermediateTensorInfo(x);return m}var S$={kernelName:el,backendName:"cpu",kernelFunc:NH};var kH=wt(Xn,r=>Math.acos(r)),v$={kernelName:Xn,backendName:"cpu",kernelFunc:kH};var EH=wt(Yn,r=>Math.acosh(r)),N$={kernelName:Yn,backendName:"cpu",kernelFunc:EH};function $H(r){let{inputs:t,backend:e}=r,o=t;Y(t,"addN");let n=o.map(a=>e.data.get(a.dataId).values),s=mt(o[0].shape,o[0].dtype),i=s.values;for(let a=0;a<o.length;a++){let l=n[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var k$={kernelName:di,backendName:"cpu",kernelFunc:$H};function AH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;Y(n,"all");let a=y.parseAxisParam(s,n.shape),l=a,u=N.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=be({inputs:{x:n},backend:e,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),d=e.data.get(c.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,w=d[b];for(let C=0;C<f;++C){let v=d[b+C];w=w&&v}h[x]=w}u!=null&&e.disposeIntermediateTensorInfo(c);let g=e.makeTensorInfo(p,c.dtype,h);if(i){let x=N.expandShapeToKeepDim(p,a),b=Ot({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var E$={kernelName:lu,backendName:"cpu",kernelFunc:AH};function DH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;Y(n,"any");let a=y.parseAxisParam(s,n.shape),l=a,u=N.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=be({inputs:{x:n},backend:e,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),d=e.data.get(c.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,w=d[b];for(let C=0;C<f;++C){let v=d[b+C];w=w||v}h[x]=w}u!=null&&e.disposeIntermediateTensorInfo(c);let g=e.makeTensorInfo(p,c.dtype,h);if(i){let x=N.expandShapeToKeepDim(p,a),b=Ot({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var $$={kernelName:uu,backendName:"cpu",kernelFunc:DH};function RH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o;Y(n,"argMax");let i=y.parseAxisParam(s,n.shape),a=N.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=be({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,i),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),h=y.sizeFromShape(p),d=e.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*h,b=d[x],w=0;for(let C=0;C<h;++C){let v=d[x+C];v>b&&(b=v,w=C)}f[g]=w}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(c,"int32",f)}var A$={kernelName:gi,backendName:"cpu",kernelFunc:RH};function FH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o;Y(n,"argMin");let i=y.parseAxisParam(s,n.shape),a=N.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=be({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,i),m=y.sizeFromShape(c),f=y.makeZerosTypedArray(m,"int32"),h=y.sizeFromShape(p),d=e.data.get(l.dataId).values;for(let g=0;g<f.length;++g){let x=g*h,b=d[x],w=0;for(let C=0;C<h;++C){let v=d[x+C];v<b&&(b=v,w=C)}f[g]=w}return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(c,"int32",f)}var D$={kernelName:xi,backendName:"cpu",kernelFunc:FH};var _H=wt(Zn,r=>Math.asin(r)),R$={kernelName:Zn,backendName:"cpu",kernelFunc:_H};var OH=wt(Jn,r=>Math.asinh(r)),F$={kernelName:Jn,backendName:"cpu",kernelFunc:OH};var LH=wt(Qn,r=>Math.atan(r)),_$={kernelName:Qn,backendName:"cpu",kernelFunc:LH};var PH=zt((r,t)=>Math.atan2(r,t)),zH=Gt(es,PH),O$={kernelName:es,backendName:"cpu",kernelFunc:zH};var MH=wt(ts,r=>Math.atanh(r)),L$={kernelName:ts,backendName:"cpu",kernelFunc:MH};function Fp(r,t,e,o,n,s){let i=n.strideHeight,a=n.strideWidth,l=n.dilationHeight,u=n.dilationWidth,c=n.effectiveFilterHeight,p=n.effectiveFilterWidth,m=n.padInfo.top,f=n.padInfo.left,h=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,d=mt(n.outShape,e),g=d.values,x=n.outShape[1]*n.outShape[2]*n.outShape[3],b=n.outShape[2]*n.outShape[3],w=n.outShape[3];for(let C=0;C<n.batchSize;++C){let v=C*x,$=C*o[0];for(let R=0;R<n.inChannels;++R)for(let F=0;F<n.outHeight;++F){let O=F*i-m,P=Math.max(0,O),B=Math.min(n.inHeight,c+O),V=v+F*b;for(let G=0;G<n.outWidth;++G){let H=G*a-f,W=Math.max(0,H),j=Math.min(n.inWidth,p+H),Z=h,q=0,J=0;for(let rt=P;rt<B;rt+=l){let at=$+rt*o[1];for(let it=W;it<j;it+=u){let ct=at+it*o[2],lt=r[ct+R];s==="max"&&lt>Z?Z=lt:s==="avg"&&(q+=lt,J++)}if(isNaN(Z))break}let et=V+G*w+R;g[et]=s==="avg"?q/J:Z}}}return d}function Zx(r,t,e,o,n=!1,s=!1){let i=mt(o.outShape,"int32"),a=o.strideHeight,l=o.strideWidth,u=o.dilationHeight,c=o.dilationWidth,p=o.effectiveFilterHeight,m=o.effectiveFilterWidth,f=o.padInfo.top,h=o.padInfo.left,d=mt(t,e,r);for(let g=0;g<o.batchSize;++g)for(let x=0;x<o.inChannels;++x)for(let b=0;b<o.outHeight;++b){let w=b*a-f,C=w;for(;C<0;)C+=u;let v=Math.min(o.inHeight,p+w);for(let $=0;$<o.outWidth;++$){let R=$*l-h,F=R;for(;F<0;)F+=c;let O=Math.min(o.inWidth,m+R),P=Number.NEGATIVE_INFINITY,B=-1;for(let V=C;V<v;V+=u){let G=V-w;for(let H=F;H<O;H+=c){let W=H-R,j=d.get(g,V,H,x);j>P&&(P=j,n?B=s?((g*o.inHeight+V)*o.inWidth+H)*o.inChannels+x:(V*o.inWidth+H)*o.inChannels+x:B=G*m+W)}}i.set(B,g,b,$,x)}}return i}function Jx(r,t,e,o,n,s){let i=n.strideDepth,a=n.strideHeight,l=n.strideWidth,u=n.dilationDepth,c=n.dilationHeight,p=n.dilationWidth,m=n.effectiveFilterDepth,f=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=n.padInfo.front,g=n.padInfo.top,x=n.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=mt(n.outShape,e),C=w.values,v=n.outShape[1]*n.outShape[2]*n.outShape[3]*n.outShape[4],$=n.outShape[2]*n.outShape[3]*n.outShape[4],R=n.outShape[3]*n.outShape[4],F=n.outShape[4];for(let O=0;O<n.batchSize;++O){let P=O*v,B=O*o[0];for(let V=0;V<n.inChannels;++V)for(let G=0;G<n.outDepth;++G){let H=G*i-d,W=H;for(;W<0;)W+=u;let j=Math.min(n.inDepth,m+H),Z=P+G*$;for(let q=0;q<n.outHeight;++q){let J=q*a-g,et=J;for(;et<0;)et+=c;let rt=Math.min(n.inHeight,f+J),at=Z+q*R;for(let it=0;it<n.outWidth;++it){let ct=it*l-x,lt=ct;for(;lt<0;)lt+=p;let ft=Math.min(n.inWidth,h+ct),Tt=at+it*F,Nt=b,St=0,Pt=0;for(let se=W;se<j;se+=u){let me=B+se*o[1];for(let Oe=et;Oe<rt;Oe+=c){let fe=me+Oe*o[2];for(let ae=lt;ae<ft;ae+=p){let Re=fe+ae*o[3],Se=r[Re+V];if(s==="max"&&Se>Nt?Nt=Se:s==="avg"&&(St+=Se,Pt++),isNaN(Nt))break}if(isNaN(Nt))break}if(isNaN(Nt))break}let Mt=Tt+V;C[Mt]=s==="avg"?St/Math.max(Pt,1):Nt}}}}return w}function P$(r,t){let e=mt(t.outShape,"int32"),o=t.strideDepth,n=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,f=t.padInfo.top,h=t.padInfo.left;for(let d=0;d<t.batchSize;++d)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){let b=x*o-m,w=b;for(;w<0;)w+=i;let C=Math.min(t.inDepth,u+b);for(let v=0;v<t.outHeight;++v){let $=v*n-f,R=$;for(;R<0;)R+=a;let F=Math.min(t.inHeight,c+$);for(let O=0;O<t.outWidth;++O){let P=O*s-h,B=P;for(;B<0;)B+=l;let V=Math.min(t.inWidth,p+P),G=Number.NEGATIVE_INFINITY,H=-1;for(let W=w;W<C;W+=i){let j=W-b;for(let Z=R;Z<F;Z+=a){let q=Z-$;for(let J=B;J<V;J+=l){let et=J-P,rt=r.get(d,W,Z,J,g);rt>=G&&(G=rt,H=j*c*p+q*c+et)}}}e.set(H,d,x,v,O,g)}}}return e}function BH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Y(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;y.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,i,u,a,l),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=gr({inputs:{x:n},backend:e});else{let m=e.data.get(n.dataId).values,f=y.computeStrides(n.shape),h=Fp(m,n.shape,n.dtype,f,c,"avg");p=e.makeTensorInfo(c.outShape,n.dtype,h.values)}return p}var z$={kernelName:yi,backendName:"cpu",kernelFunc:BH};function VH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=o;Y(n,"avgPool3d");let c=N.computePool3DInfo(n.shape,s,i,1,a,l,u),p=e.data.get(n.dataId).values,m=Jx(p,n.shape,n.dtype,y.computeStrides(n.shape),c,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}var M$={kernelName:bi,backendName:"cpu",kernelFunc:VH};function GH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=o;Y([n,s],"avgPool3DGrad");let c=N.computePool3DInfo(s.shape,i,a,1,l,u),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,h=c.filterDepth,d=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,C=c.effectiveFilterDepth,v=c.effectiveFilterHeight,$=c.effectiveFilterWidth,R=C-1-c.padInfo.front,F=$-1-c.padInfo.left,O=v-1-c.padInfo.top,P=mt(s.shape,"float32"),B=1/(h*d*g),V=e.bufferSync(n);for(let G=0;G<c.batchSize;++G)for(let H=0;H<c.inChannels;++H)for(let W=0;W<c.inDepth;++W)for(let j=0;j<c.inHeight;++j)for(let Z=0;Z<c.inWidth;++Z){let q=W-R,J=j-O,et=Z-F,rt=0;for(let at=0;at<C;at+=x){let it=(q+at)/p;if(!(it<0||it>=c.outDepth||Math.floor(it)!==it))for(let ct=0;ct<v;ct+=b){let lt=(J+ct)/m;if(!(lt<0||lt>=c.outHeight||Math.floor(lt)!==lt))for(let ft=0;ft<$;ft+=w){let Tt=(et+ft)/f;if(Tt<0||Tt>=c.outWidth||Math.floor(Tt)!==Tt)continue;let Nt=V.get(G,it,lt,Tt,H);rt+=Nt}}}P.set(rt*B,G,W,j,Z,H)}return e.makeTensorInfo(P.shape,P.dtype,P.values)}var B$={kernelName:pu,backendName:"cpu",kernelFunc:GH};function WH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s;Y([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=N.computePool2DInfo(i.shape,a,l,1,u),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,h=c.filterWidth,d=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,C=x-1-c.padInfo.top,v=mt(i.shape,"float32"),$=1/(f*h),R=e.data.get(n.dataId).values,F=mt(n.shape,"float32",R);for(let O=0;O<c.batchSize;++O)for(let P=0;P<c.inChannels;++P)for(let B=0;B<c.inHeight;++B)for(let V=0;V<c.inWidth;++V){let G=B-C,H=V-w,W=0;for(let j=0;j<x;j+=d){let Z=(G+j)/p;if(!(Z<0||Z>=c.outHeight||Math.floor(Z)!==Z))for(let q=0;q<b;q+=g){let J=(H+q)/m;if(J<0||J>=c.outWidth||Math.floor(J)!==J)continue;let et=F.get(O,Z,J,P);W+=et}}v.set(W*$,O,B,V,P)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}var V$={kernelName:cu,backendName:"cpu",kernelFunc:WH};function UH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,scale:s,offset:i,mean:a,variance:l}=t;y.assert(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Y([n,a,l,s,i],"batchNorm");let{varianceEpsilon:u}=o;u==null&&(u=.001);let c=e.data.get(n.dataId).values,p=e.data.get(a.dataId).values,m=e.data.get(l.dataId).values,f=s?e.data.get(s.dataId).values:new Float32Array([1]),h=i?e.data.get(i.dataId).values:new Float32Array([0]),d=new Float32Array(c.length),g=h.length,x=f.length,b=m.length,w=p.length,C=0,v=0,$=0,R=0;for(let F=0;F<c.length;++F)d[F]=h[C++]+(c[F]-p[v++])*f[$++]/Math.sqrt(m[R++]+u),C>=g&&(C=0),v>=w&&(v=0),$>=x&&($=0),R>=b&&(R=0);return e.makeTensorInfo(n.shape,n.dtype,d)}var G$={kernelName:Di,backendName:"cpu",kernelFunc:UH};function HH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,crops:i}=o;Y([n],"batchToSpaceND");let a=s.reduce((x,b)=>x*b),l=N.getReshaped(n.shape,s,a),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(n.shape,s,a),p=N.getSliceBeginCoords(i,s.length),m=N.getSliceSize(c,i,s.length),f=Ot({inputs:{x:n},backend:e,attrs:{shape:l}}),h=be({inputs:{x:f},backend:e,attrs:{perm:u}}),d=Ot({inputs:{x:h},backend:e,attrs:{shape:c}}),g=Wo({inputs:{x:d},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),g}var W$={kernelName:Ci,backendName:"cpu",kernelFunc:HH};function KH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i}=o,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,u=$p(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}var U$={kernelName:mu,backendName:"cpu",kernelFunc:KH};function qH(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,s=e.data.get(o.dataId).values,i=e.data.get(n.dataId).values,a=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var H$={kernelName:fu,backendName:"cpu",kernelFunc:qH};var jH=wt(os,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),K$={kernelName:os,backendName:"cpu",kernelFunc:jH};var XH=r=>{let{x:t}=r.inputs,e=r.backend,o=new Float32Array(y.sizeFromShape(t.shape)),n=e.data.get(t.dataId),s=n.complexTensorInfos.real,i=n.complexTensorInfos.imag,a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values;for(let u=0;u<a.length;u++){let c=a[u],p=l[u];o[u]=Math.hypot(c,p)}return e.makeOutput(o,t.shape,"float32")},q$={kernelName:Ti,backendName:"cpu",kernelFunc:XH};function Mn(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.data.get(o.dataId).complexTensorInfos.imag,s=e.data.get(n.dataId).values;return e.makeTensorInfo(n.shape,n.dtype,s)}var j$={kernelName:Ru,backendName:"cpu",kernelFunc:Mn};function La(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,s=y.parseAxisParam(n,t[0].shape)[0],i=t.map(d=>d.shape);N.assertParamsConsistent(i,s);let a=N.computeOutShape(t.map(d=>d.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(d=>y.sizeFromShape(d.shape)>0);if(l.length===1)return gr({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){let d=l.map(C=>Mo({inputs:{input:C},backend:e})),g=l.map(C=>Mn({inputs:{input:C},backend:e})),x=La({inputs:d,backend:e,attrs:{axis:s}}),b=La({inputs:g,backend:e,attrs:{axis:s}}),w=qe({inputs:{real:x,imag:b},backend:e});return d.forEach(C=>e.disposeIntermediateTensorInfo(C)),g.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),w}let u=l.map(d=>{let x=[-1,y.sizeFromShape(d.shape.slice(s))];return Ot({inputs:{x:d},backend:e,attrs:{shape:x}})}),c=u.map(d=>({vals:e.data.get(d.dataId).values,shape:d.shape}));a=N.computeOutShape(u.map(d=>d.shape),1);let p=u[0].shape[0]===1,m=Fx(c,a,t[0].dtype,p),f=N.computeOutShape(l.map(d=>d.shape),s),h=e.makeTensorInfo(f,t[0].dtype,m);return u.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}var X$={kernelName:Ii,backendName:"cpu",kernelFunc:La};function ZC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o;Y([n,s],"conv2d");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,s.shape,i,u,a,c,!1,p),f=m.filterHeight,h=m.filterWidth,d=m.dilationHeight,g=m.dilationWidth,x=m.padInfo.left,b=m.padInfo.top,w=m.dataFormat==="channelsLast",C=new Ut(m.outShape,n.dtype),v=y.computeStrides(n.shape),$=y.computeStrides(s.shape),R=v[0],F=w?v[1]:v[2],O=w?v[2]:1,P=w?1:v[1],B=C.strides[0],V=w?C.strides[1]:C.strides[2],G=w?C.strides[2]:1,H=w?1:C.strides[1],W=e.data.get(n.dataId).values,j=e.data.get(s.dataId).values,Z=C.values;for(let q=0;q<m.batchSize;++q){let J=q*R,et=q*B;for(let rt=0;rt<m.outHeight;++rt){let at=et+rt*V,it=rt*m.strideHeight-b;for(let ct=0;ct<f;++ct){let lt=it+ct*d;if(lt<0||lt>=m.inHeight)continue;let ft=ct*$[0],Tt=J+lt*F;for(let Nt=0;Nt<m.outWidth;++Nt){let St=at+Nt*G,Pt=Nt*m.strideWidth-x;for(let Mt=0;Mt<h;++Mt){let se=Pt+Mt*g;if(se<0||se>=m.inWidth)continue;let me=ft+Mt*$[1],Oe=Tt+se*O,fe=me;for(let ae=0;ae<m.inChannels;++ae){let Re=W[Oe+ae*P];for(let Se=0;Se<m.outChannels;++Se)Z[St+Se*H]+=Re*j[fe+Se];fe+=m.outChannels}}}}}}return e.makeTensorInfo(C.shape,C.dtype,Z)}var Y$={kernelName:Si,backendName:"cpu",kernelFunc:ZC};function YH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o;Y([n,s],"conv2dBackpropFilter");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,c,i,1,a,u,!1,p),{strideHeight:f,strideWidth:h,filterHeight:d,filterWidth:g}=m,x=m.dataFormat==="channelsLast",b=new Ut(m.filterShape,"float32"),w=m.padInfo.left,C=m.padInfo.top,v=e.data.get(n.dataId).values,$=e.data.get(s.dataId).values,R=new Ut(n.shape,n.dtype,v),F=new Ut(s.shape,s.dtype,$);for(let O=0;O<d;++O){let P=Math.max(0,Math.ceil((C-O)/f)),B=Math.min(m.outHeight,(m.inHeight+C-O)/f);for(let V=0;V<g;++V){let G=Math.max(0,Math.ceil((w-V)/h)),H=Math.min(m.outWidth,(m.inWidth+w-V)/h);for(let W=0;W<m.inChannels;++W)for(let j=0;j<m.outChannels;++j){let Z=0;for(let q=0;q<m.batchSize;++q)for(let J=P;J<B;++J){let et=O+J*f-C;for(let rt=G;rt<H;++rt){let at=V+rt*h-w;x?Z+=R.get(q,et,at,W)*F.get(q,J,rt,j):Z+=R.get(q,W,et,at)*F.get(q,j,J,rt)}}b.set(Z,O,V,W,j)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var Z$={kernelName:du,backendName:"cpu",kernelFunc:YH};function ZH(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o;Y([n,s],"conv2dBackpropInput");let p=y.computeStrides(s.shape),m=y.computeStrides(n.shape),f=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(i,s.shape,a,1,l,c,!1,f),d=new Ut(h.inShape,"float32"),g=d.values,x=e.data.get(n.dataId).values,b=e.data.get(s.dataId).values,[w,C,v]=p,{batchSize:$,filterHeight:R,filterWidth:F,inChannels:O,inHeight:P,inWidth:B,outChannels:V,outHeight:G,outWidth:H,strideHeight:W,strideWidth:j}=h;f=h.dataFormat;let Z=R-1-h.padInfo.top,q=F-1-h.padInfo.left,J=f==="channelsLast",et=d.strides[0],rt=J?d.strides[1]:d.strides[2],at=J?d.strides[2]:1,it=J?1:d.strides[1],ct=m[0],lt=J?m[1]:m[2],ft=J?m[2]:1,Tt=J?1:m[1];for(let Nt=0;Nt<$;++Nt)for(let St=0;St<O;++St)for(let Pt=0;Pt<P;++Pt){let Mt=Pt-Z,se=Math.max(0,Math.ceil(Mt/W)),me=Math.min(G,(R+Mt)/W);for(let Oe=0;Oe<B;++Oe){let fe=Oe-q,ae=Math.max(0,Math.ceil(fe/j)),Re=Math.min(H,(F+fe)/j),Se=0;for(let cr=se;cr<me;++cr){let ci=cr*W-Mt;for(let uo=ae;uo<Re;++uo){let Ga=uo*j-fe,Ko=ct*Nt+lt*cr+ft*uo,Kn=w*(R-1-ci)+C*(F-1-Ga)+v*St;for(let pi=0;pi<V;++pi){let mi=x[Ko+Tt*pi],fi=b[Kn+pi];Se+=mi*fi}}}let Hn=et*Nt+rt*Pt+at*Oe+it*St;g[Hn]=Se}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}var J$={kernelName:vi,backendName:"cpu",kernelFunc:ZH};function JH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o;Y([n,s],"conv3d");let u=N.computeConv3DInfo(n.shape,s.shape,i,l,a),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:h,dilationWidth:d,padInfo:g}=u,x=g.front,b=g.left,w=g.top,C=new Ut(u.outShape,n.dtype),v=e.data.get(n.dataId).values,$=e.data.get(s.dataId).values,R=C.values,F=y.computeStrides(n.shape),O=y.computeStrides(s.shape);for(let P=0;P<u.batchSize;++P){let B=P*F[0],V=P*C.strides[0];for(let G=0;G<u.outDepth;++G){let H=V+G*C.strides[1],W=G*u.strideDepth-x;for(let j=0;j<c;++j){let Z=W+j*f;if(Z<0||Z>=u.inDepth)continue;let q=j*O[0],J=B+Z*F[1];for(let et=0;et<u.outHeight;++et){let rt=H+et*C.strides[2],at=et*u.strideHeight-w;for(let it=0;it<p;++it){let ct=at+it*h;if(ct<0||ct>=u.inHeight)continue;let lt=q+it*O[1],ft=J+ct*F[2];for(let Tt=0;Tt<u.outWidth;++Tt){let Nt=rt+Tt*u.outChannels,St=Tt*u.strideWidth-b;for(let Pt=0;Pt<m;++Pt){let Mt=St+Pt*d;if(Mt<0||Mt>=u.inWidth)continue;let se=lt+Pt*O[2],me=ft+Mt*u.inChannels,Oe=se;for(let fe=0;fe<u.inChannels;++fe){let ae=v[me+fe];for(let Re=0;Re<u.outChannels;++Re)R[Nt+Re]+=ae*$[Oe+Re];Oe+=u.outChannels}}}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}var Q$={kernelName:Ni,backendName:"cpu",kernelFunc:JH};function QH(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,filterShape:l}=o;Y([n,s],"conv3dBackpropFilterV2");let u=y.computeStrides(n.shape),c=y.computeStrides(s.shape),p=N.computeConv3DInfo(n.shape,l,i,1,a),m=p.strideDepth,f=p.strideHeight,h=p.strideWidth,d=p.filterDepth,g=p.filterHeight,x=p.filterWidth,b=new Ut(p.filterShape,"float32"),w=b.values,[C,v,$,R]=b.strides,F=e.data.get(s.dataId).values,[O,P,B,V]=c,G=e.data.get(n.dataId).values,[H,W,j,Z]=u,q=p.padInfo.front,J=p.padInfo.left,et=p.padInfo.top;for(let rt=0;rt<d;++rt){let at=Math.max(0,Math.ceil((q-rt)/m)),it=Math.min(p.outDepth,(p.inDepth+q-rt)/m),ct=rt*C;for(let lt=0;lt<g;++lt){let ft=Math.max(0,Math.ceil((et-lt)/f)),Tt=Math.min(p.outHeight,(p.inHeight+et-lt)/f),Nt=lt*v+ct;for(let St=0;St<x;++St){let Pt=Math.max(0,Math.ceil((J-St)/h)),Mt=Math.min(p.outWidth,(p.inWidth+J-St)/h),se=St*$+Nt;for(let me=0;me<p.inChannels;++me){let Oe=me*R+se;for(let fe=0;fe<p.outChannels;++fe){let ae=0;for(let Re=0;Re<p.batchSize;++Re){let Se=Re*H,Hn=Re*O;for(let cr=at;cr<it;++cr){let uo=(rt+cr*m-q)*W+Se,Ga=cr*P+Hn;for(let Ko=ft;Ko<Tt;++Ko){let pi=(lt+Ko*f-et)*j+uo,mi=Ko*B+Ga;for(let fi=Pt;fi<Mt;++fi){let Gb=(St+fi*h-J)*Z+pi,Wb=fi*V+mi;ae+=G[Gb+me]*F[Wb+fe]}}}}w[Oe+fe]=ae}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}var tA={kernelName:gu,backendName:"cpu",kernelFunc:QH};function tK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{pad:i,strides:a,inputShape:l}=o;Y([n],"conv3dBackpropInputV2");let u=y.computeStrides(n.shape),c=y.computeStrides(s.shape),p=N.computeConv3DInfo(l,s.shape,a,1,i),m=new Ut(p.inShape,"float32"),f=m.values,[h,d,g,x]=m.strides,b=e.data.get(n.dataId).values,[w,C,v,$]=u,R=e.data.get(s.dataId).values,[F,O,P,B]=c,{batchSize:V,filterDepth:G,filterHeight:H,filterWidth:W,inChannels:j,inDepth:Z,inHeight:q,inWidth:J,outChannels:et,outDepth:rt,outHeight:at,outWidth:it,strideDepth:ct,strideHeight:lt,strideWidth:ft}=p,Tt=G-1-p.padInfo.front,Nt=H-1-p.padInfo.top,St=W-1-p.padInfo.left;for(let Pt=0;Pt<V;++Pt)for(let Mt=0;Mt<j;++Mt)for(let se=0;se<Z;++se){let me=se-Tt,Oe=Math.max(0,Math.ceil(me/ct)),fe=Math.min(rt,(G+me)/ct);for(let ae=0;ae<q;++ae){let Re=ae-Nt,Se=Math.max(0,Math.ceil(Re/lt)),Hn=Math.min(at,(H+Re)/lt);for(let cr=0;cr<J;++cr){let ci=cr-St,uo=Math.max(0,Math.ceil(ci/ft)),Ga=Math.min(it,(W+ci)/ft),Ko=0;for(let Kn=Oe;Kn<fe;++Kn){let pi=Kn*ct-me;for(let mi=Se;mi<Hn;++mi){let fi=mi*lt-Re;for(let Qp=uo;Qp<Ga;++Qp){let Gb=Qp*ft-ci,Wb=w*Pt+C*Kn+v*mi+$*Qp,kL=F*(G-1-pi)+O*(H-1-fi)+P*(W-1-Gb)+B*Mt;for(let kh=0;kh<et;++kh){let EL=b[Wb+kh],$L=R[kL+kh];Ko+=EL*$L}}}}f[h*Pt+d*se+g*ae+x*cr+Mt]=Ko}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}var eA={kernelName:xu,backendName:"cpu",kernelFunc:tK};var eK=wt(ns,r=>Math.cos(r)),rA={kernelName:ns,backendName:"cpu",kernelFunc:eK};var rK=wt(ss,r=>Math.cosh(r)),oA={kernelName:ss,backendName:"cpu",kernelFunc:rK};function oK(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:u}=o,[c,p,m,f]=n.shape,h=s.shape[0],[d,g]=a,x=mt([h,d,g,f],"float32"),b=e.data.get(s.dataId).values,w=e.data.get(i.dataId).values,C=e.data.get(n.dataId).values,v=y.computeStrides(n.shape),$=y.computeStrides(x.shape);for(let R=0;R<h;R++){let F=R*4,O=b[F],P=b[F+1],B=b[F+2],V=b[F+3],G=w[R];if(G>=c)continue;let H=d>1?(B-O)*(p-1)/(d-1):0,W=g>1?(V-P)*(m-1)/(g-1):0;for(let j=0;j<d;j++){let Z=d>1?O*(p-1)+j*H:.5*(O+B)*(p-1);if(Z<0||Z>p-1){for(let q=0;q<g;q++)for(let J=0;J<f;J++){let et=J+q*$[2]+j*$[1]+R*$[0];x.values[et]=u}continue}if(l==="bilinear"){let q=Math.floor(Z),J=Math.ceil(Z),et=Z-q;for(let rt=0;rt<g;rt++){let at=g>1?P*(m-1)+rt*W:.5*(P+V)*(m-1);if(at<0||at>m-1){for(let ft=0;ft<f;ft++){let Tt=ft+rt*$[2]+j*$[1]+R*$[0];x.values[Tt]=u}continue}let it=Math.floor(at),ct=Math.ceil(at),lt=at-it;for(let ft=0;ft<f;ft++){let Tt=ft+it*v[2]+q*v[1]+G*v[0],Nt=C[Tt];Tt=ft+ct*v[2]+q*v[1]+G*v[0];let St=C[Tt];Tt=ft+it*v[2]+J*v[1]+G*v[0];let Pt=C[Tt];Tt=ft+ct*v[2]+J*v[1]+G*v[0];let Mt=C[Tt],se=Nt+(St-Nt)*lt,me=Pt+(Mt-Pt)*lt;Tt=ft+rt*$[2]+j*$[1]+R*$[0],x.values[Tt]=se+(me-se)*et}}}else for(let q=0;q<g;++q){let J=g>1?P*(m-1)+q*W:.5*(P+V)*(m-1);if(J<0||J>m-1){for(let at=0;at<f;at++){let it=at+q*$[2]+j*$[1]+R*$[0];x.values[it]=u}continue}let et=Math.round(J),rt=Math.round(Z);for(let at=0;at<f;at++){let it=at+et*v[2]+rt*v[1]+G*v[0],ct=at+q*$[2]+j*$[1]+R*$[0];x.values[ct]=C[it]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}var nA={kernelName:bu,backendName:"cpu",kernelFunc:oK};function nK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;Y(n,"cumprod");let l=N.getAxesPermutation([s],n.shape.length),u=n;l!=null&&(u=be({inputs:{x:n},backend:e,attrs:{perm:l}}));let c=N.getInnerMostAxes(1,n.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=Le(u.dtype,"int32"),m=y.makeOnesTypedArray(y.sizeFromShape(u.shape),p),f=e.data.get(u.dataId).values,h=u.shape[u.shape.length-1],d=a?(x,b)=>x+h-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=h)for(let b=0;b<h;b++){let w=d(x,b);if(b===0)m[w]=i?1:f[w];else{let C=d(x,b-1);m[w]=i?f[C]*m[C]:f[w]*m[C]}}let g=e.makeTensorInfo(u.shape,p,m);if(l!=null){let x=N.getUndoAxesPermutation(l),b=be({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(u),b}return g}var sA={kernelName:yu,backendName:"cpu",kernelFunc:nK};function sK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;Y(n,"cumsum");let l=N.getAxesPermutation([s],n.shape.length),u=n;l!=null&&(u=be({inputs:{x:n},backend:e,attrs:{perm:l}}));let c=N.getInnerMostAxes(1,n.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=Le(u.dtype,"int32"),m=y.makeZerosTypedArray(y.sizeFromShape(u.shape),p),f=e.data.get(u.dataId).values,h=u.shape[u.shape.length-1],d=a?(x,b)=>x+h-b-1:(x,b)=>x+b;for(let x=0;x<f.length;x+=h)for(let b=0;b<h;b++){let w=d(x,b);if(b===0)m[w]=i?0:f[w];else{let C=d(x,b-1);m[w]=i?f[C]+m[C]:f[w]+m[C]}}let g=e.makeTensorInfo(u.shape,p,m);if(l!=null){let x=N.getUndoAxesPermutation(l),b=be({inputs:{x:g},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(u),b}return g}var iA={kernelName:ki,backendName:"cpu",kernelFunc:sK};function iK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=e.data.get(n.dataId).values,u=e.data.get(s.dataId).values,c=$p(l,u,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}else if(n.shape.length===2){let l=e.bufferSync(n),u=e.bufferSync(s),c=Rx(l,u,i,a);return e.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var aA={kernelName:wu,backendName:"cpu",kernelFunc:iK};function aK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:s,dataFormat:i}=o;y.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=n.shape[0],l=n.shape[1],u=n.shape[2],c=n.shape[3],p=l*s,m=u*s,f=c/(s*s),h=e.data.get(n.dataId).values,d=new Float32Array(a*p*m*f),g=0;for(let x=0;x<a;++x)for(let b=0;b<p;++b){let w=Math.floor(b/s),C=b%s;for(let v=0;v<m;++v){let $=Math.floor(v/s),R=v%s,F=(C*s+R)*f;for(let O=0;O<f;++O){let B=O+F+c*($+u*(w+l*x));d[g++]=h[B]}}}return e.makeTensorInfo([a,p,m,f],n.dtype,d)}var lA={kernelName:Cu,backendName:"cpu",kernelFunc:aK};function JC(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=o;Y([n,s],"depthwiseConv2DNative");let c=y.computeStrides(n.shape),p=y.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=N.computeConv2DInfo(n.shape,s.shape,i,m,a,u,!0),{filterHeight:h,filterWidth:d,dilationHeight:g,dilationWidth:x,padInfo:b}=f,w=b.left,C=b.top,v=f.outChannels/f.inChannels,$=new Ut(f.outShape,n.dtype),R=e.data.get(n.dataId).values,F=e.data.get(s.dataId).values,O=$.values;for(let P=0;P<f.batchSize;++P){let B=P*c[0],V=P*$.strides[0];for(let G=0;G<f.outHeight;++G){let H=V+G*$.strides[1],W=G*f.strideHeight-C;for(let j=0;j<h;++j){let Z=W+j*g;if(Z<0||Z>=f.inHeight)continue;let q=j*p[0],J=B+Z*c[1];for(let et=0;et<f.outWidth;++et){let rt=H+et*$.strides[2],at=et*f.strideWidth-w;for(let it=0;it<d;++it){let ct=at+it*x;if(ct<0||ct>=f.inWidth)continue;let lt=q+it*p[1],ft=J+ct*f.inChannels,Tt=rt,Nt=lt;for(let St=0;St<f.inChannels;++St){let Pt=R[ft+St];for(let Mt=0;Mt<v;++Mt)O[Tt+Mt]+=Pt*F[Nt+Mt];Tt+=v,Nt+=v}}}}}}return e.makeTensorInfo($.shape,$.dtype,$.values)}var uA={kernelName:Ei,backendName:"cpu",kernelFunc:JC};function lK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o;Y([n,s],"depthwiseConv2dNativeBackpropFilter");let p=N.computeConv2DInfo(n.shape,c,i,a,l,u,!0),{strideHeight:m,strideWidth:f,filterHeight:h,filterWidth:d}=p,g=new Ut(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,w=p.outChannels/p.inChannels,C=e.data.get(n.dataId).values,v=new Ut(n.shape,n.dtype,C),$=e.data.get(s.dataId).values,R=new Ut(s.shape,s.dtype,$);for(let F=0;F<h;++F){let O=Math.max(0,Math.ceil((b-F)/m)),P=Math.min(p.outHeight,(p.inHeight+b-F)/m);for(let B=0;B<d;++B){let V=Math.max(0,Math.ceil((x-B)/f)),G=Math.min(p.outWidth,(p.inWidth+x-B)/f);for(let H=0;H<p.outChannels;++H){let W=Math.trunc(H/w),j=H%w,Z=0;for(let q=0;q<p.batchSize;++q)for(let J=O;J<P;++J){let et=F+J*m-b;for(let rt=V;rt<G;++rt){let at=B+rt*f-x;Z+=v.get(q,et,at,W)*R.get(q,J,rt,H)}}g.set(Z,F,B,W,j)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var cA={kernelName:Tu,backendName:"cpu",kernelFunc:lK};function uK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o;Y([n,s],"depthwiseConv2DNativeBackpropInput");let p=y.computeStrides(n.shape),m=y.computeStrides(s.shape),f=N.computeConv2DInfo(c,s.shape,i,a,l,u,!0),h=new Ut(f.inShape,"float32"),d=h.values,[g,x,b]=h.strides,w=e.data.get(n.dataId).values,[C,v,$]=p,R=e.data.get(s.dataId).values,[F,O,P]=m,{batchSize:B,filterHeight:V,filterWidth:G,inChannels:H,inHeight:W,inWidth:j,outChannels:Z,outHeight:q,outWidth:J,strideHeight:et,strideWidth:rt}=f,at=V-1-f.padInfo.top,it=G-1-f.padInfo.left,ct=Z/H;for(let lt=0;lt<B;++lt)for(let ft=0;ft<H;++ft)for(let Tt=0;Tt<W;++Tt){let Nt=Tt-at,St=Math.max(0,Math.ceil(Nt/et)),Pt=Math.min(q,(V+Nt)/et);for(let Mt=0;Mt<j;++Mt){let se=Mt-it,me=Math.max(0,Math.ceil(se/rt)),Oe=Math.min(J,(G+se)/rt),fe=0;for(let ae=St;ae<Pt;++ae){let Re=ae*et-Nt;for(let Se=me;Se<Oe;++Se){let Hn=Se*rt-se,cr=C*lt+v*ae+$*Se,ci=F*(V-1-Re)+O*(G-1-Hn)+P*ft;for(let uo=0;uo<ct;++uo){let Ga=ft*ct+uo,Ko=w[cr+Ga],Kn=R[ci+uo];fe+=Ko*Kn}}}d[g*lt+x*Tt+b*Mt+ft]=fe}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var pA={kernelName:Iu,backendName:"cpu",kernelFunc:uK};function cK(r){let{inputs:t,backend:e}=r,{x:o}=t,n=y.sizeFromShape(o.shape),s=e.data.get(o.dataId).values,i=mt([n,n],o.dtype),a=i.values;for(let u=0;u<s.length;u++)a[u*n+u]=s[u];let l=[...o.shape,...o.shape];return e.makeTensorInfo(l,i.dtype,i.values)}var mA={kernelName:Su,backendName:"cpu",kernelFunc:cK};var fA={kernelName:$i,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n}=r,{strides:s,pad:i,dilations:a}=e,l=t,u=l.data.get(o.dataId).values,c=o.shape.length,p=l.data.get(n.dataId).values,m=n.shape.length,{batchSize:f,inHeight:h,inWidth:d,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:C,strideWidth:v,filterHeight:$,filterWidth:R,dilationHeight:F,dilationWidth:O,outShape:P}=N.computeDilation2DInfo(o.shape,n.shape,s,i,"NHWC",a),B=y.sizeFromShape(P),V=P.length,G=y.getArrayFromDType(o.dtype,B);for(let W=0;W<f;++W)for(let j=0;j<x;++j){let Z=j*C-w.top;for(let q=0;q<b;++q){let J=q*v-w.left;for(let et=0;et<g;++et){let rt=Number.MIN_SAFE_INTEGER;for(let it=0;it<$;++it){let ct=Z+it*F;if(ct>=0&&ct<h)for(let lt=0;lt<R;++lt){let ft=J+lt*O;if(ft>=0&&ft<d){let Tt=y.locToIndex([W,ct,ft,et],c,y.computeStrides(o.shape)),Nt=y.locToIndex([it,lt,et],m,y.computeStrides(n.shape)),St=u[Tt]+p[Nt];St>rt&&(rt=St)}}}let at=y.locToIndex([W,j,q,et],V,y.computeStrides(P));G[at]=rt}}}return{dataId:l.write(y.toTypedArray(G,o.dtype),P,o.dtype),shape:P,dtype:o.dtype}}};var hA={kernelName:sm,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=e,u=t,c=y.toNestedArray(o.shape,u.data.get(o.dataId).values),p=y.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:d,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:C,filterHeight:v,filterWidth:$,dilationHeight:R,dilationWidth:F,outShape:O}=N.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);y.assert(s.rank===O.length,()=>`Error in ${sm}, dy must have the same rank as output ${O.length}, but got ${s.rank}`);let P=y.toNestedArray(O,u.data.get(s.dataId).values),B=y.makeZerosNestedTypedArray(n.shape,n.dtype);for(let G=0;G<m;++G)for(let H=0;H<g;++H){let W=H*w-b.top;for(let j=0;j<x;++j){let Z=j*C-b.left;for(let q=0;q<d;++q){let J=Number.MIN_SAFE_INTEGER,et=0,rt=0;for(let at=0;at<v;++at){let it=W+at*R;if(it>=0&&it<f)for(let ct=0;ct<$;++ct){let lt=Z+ct*F;if(lt>=0&&lt<h){let ft=c[G][it][lt][q]+p[at][ct][q];ft>J&&(J=ft,et=at,rt=ct)}}}B[et][rt][q]+=P[G][H][j][q]}}}return{dataId:u.write(y.toTypedArray(B,o.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var dA={kernelName:nm,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:o,filter:n,dy:s}=r,{strides:i,pad:a,dilations:l}=e,u=t,c=y.toNestedArray(o.shape,u.data.get(o.dataId).values),p=y.toNestedArray(n.shape,u.data.get(n.dataId).values),{batchSize:m,inHeight:f,inWidth:h,inChannels:d,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:C,filterHeight:v,filterWidth:$,dilationHeight:R,dilationWidth:F,outShape:O}=N.computeDilation2DInfo(o.shape,n.shape,i,a,"NHWC",l);y.assert(s.rank===O.length,()=>`Error in ${nm}, dy must have the same rank as output ${O.length}, but got ${s.rank}`);let P=y.toNestedArray(O,u.data.get(s.dataId).values),B=y.makeZerosNestedTypedArray(o.shape,o.dtype);for(let G=0;G<m;++G)for(let H=0;H<g;++H){let W=H*w-b.top;for(let j=0;j<x;++j){let Z=j*C-b.left;for(let q=0;q<d;++q){let J=Number.MIN_SAFE_INTEGER,et=W<0?0:W,rt=Z<0?0:Z;for(let at=0;at<v;++at){let it=W+at*R;if(it>=0&&it<f)for(let ct=0;ct<$;++ct){let lt=Z+ct*F;if(lt>=0&&lt<h){let ft=c[G][it][lt][q]+p[at][ct][q];ft>J&&(J=ft,et=it,rt=lt)}}}B[G][et][rt][q]+=P[G][H][j][q]}}}return{dataId:u.write(y.toTypedArray(B,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};function si(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;Y(n,"sum");let a;n.dtype==="bool"?a=Bo({inputs:{x:n},backend:e,attrs:{dtype:"int32"}}):a=gr({inputs:{x:n},backend:e});let l=a.shape.length,u=y.parseAxisParam(s,a.shape),c=N.getAxesPermutation(u,l),p=u,m=a;c!=null&&(m=be({inputs:{x:a},backend:e,attrs:{perm:c}}),p=N.getInnerMostAxes(p.length,l)),N.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,h]=N.computeOutAndReduceShapes(m.shape,p),d=N.upcastType(m.dtype,"int32"),g=kp(e,f,d),x=y.sizeFromShape(h),b=e.data.get(g.dataId).values,w=e.data.get(m.dataId).values;for(let C=0;C<b.length;++C){let v=C*x,$=0;for(let R=0;R<x;++R)$+=w[v+R];b[C]=$}if(i){let C=N.expandShapeToKeepDim(g.shape,u),v=g;g=Ot({inputs:{x:g},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(v)}return e.disposeIntermediateTensorInfo(a),c!=null&&e.disposeIntermediateTensorInfo(m),g}var gA={kernelName:ta,backendName:"cpu",kernelFunc:si};function pK(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,s=t,{allDims:i,summedDims:a,idDims:l}=N.decodeEinsumEquation(n,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:c}=N.getEinsumComputePath(a,l),p=c.length,m=null,f=i.length,h=[];for(let d=0;d<p;++d){for(let g of c[d]){let{permutationIndices:x,expandDims:b}=N.getEinsumPermutation(f,l[g]),w;N.isIdentityPermutation(x)?w=s[g]:(w=be({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),h.push(w));let C=w.shape.slice();for(let v=0;v<b.length;++v)C.splice(b[v],0,1);y.arraysEqual(w.shape,C)||(w=Ot({inputs:{x:w},backend:e,attrs:{shape:C}}),h.push(w)),m===null?m=w:(m=Vl({inputs:{a:w,b:m},backend:e}),h.push(m))}d<p-1&&(u[d]>=0&&(m=si({inputs:{x:m},backend:e,attrs:{axis:u[d]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let d of h)d!==m&&e.disposeIntermediateTensorInfo(d);return m}var xA={kernelName:vu,backendName:"cpu",kernelFunc:pK};function mK(r){let{inputs:t,backend:e}=r,{dy:o,y:n}=t;Y([o,n],"eluGrad");let s=new Float32Array(y.sizeFromShape(n.shape)),i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=1?s[l]=a[l]:s[l]=a[l]*(u+1)}return e.makeTensorInfo(n.shape,"float32",s)}var yA={kernelName:Nu,backendName:"cpu",kernelFunc:mK};var fK=N.ERF_P,hK=N.ERF_A1,dK=N.ERF_A2,gK=N.ERF_A3,xK=N.ERF_A4,yK=N.ERF_A5,bK=wt(ls,r=>{let t=Math.sign(r),e=Math.abs(r),o=1/(1+fK*e);return t*(1-((((yK*o+xK)*o+gK)*o+dK)*o+hK)*o*Math.exp(-e*e))}),bA={kernelName:ls,backendName:"cpu",kernelFunc:bK};function _p(r){let{inputs:t,backend:e,attrs:o}=r,{input:n}=t,{dim:s}=o,i=n.shape.length,a=n.shape.slice(),l=s;return s<0&&(y.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),a.splice(l,0,1),Ot({inputs:{x:n},backend:e,attrs:{shape:a}})}var wA={kernelName:Ai,backendName:"cpu",kernelFunc:_p};var wK=zt((r,t)=>r/t),lh=Gt(is,wK),uh={kernelName:is,backendName:"cpu",kernelFunc:lh};function Qx(r,t,e){let o=r.shape,n=o[0],s=o[1],i=e.data.get(r.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[n,s],c=y.sizeFromShape(u),p=y.getTypedArrayFromDType("float32",c),m=y.getTypedArrayFromDType("float32",c);for(let g=0;g<n;g++){let x=Wo({inputs:{x:a},backend:e,attrs:{begin:[g,0],size:[1,s]}}),b=Wo({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,s]}}),w=qe({inputs:{real:x,imag:b},backend:e}),{real:C,imag:v}=CK(w,t,e),$=N.mergeRealAndImagArrays(C,v);for(let R=0;R<s;R++){let F=N.getComplexWithIndex($,R);p[g*s+R]=F.real,m[g*s+R]=F.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(w)}let f=e.makeTensorInfo(u,"float32",p),h=e.makeTensorInfo(u,"float32",m),d=qe({inputs:{real:f,imag:h},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),d}function CK(r,t,e){let o=y.sizeFromShape(r.shape),n=e.data.get(r.dataId),s=e.data.get(n.complexTensorInfos.real.dataId).values,i=e.data.get(n.complexTensorInfos.imag.dataId).values;if(TK(o)){let a=QC(s,i,o,t,e),l=[r.shape[0],r.shape[1]];if(t){let u=e.makeTensorInfo(l,"float32",a.real),c=e.makeTensorInfo(l,"float32",a.imag),p=e.makeTensorInfo([],"float32",y.createScalarValue(o,"float32")),m=gr({inputs:{x:p},backend:e}),f=uh.kernelFunc({inputs:{a:u,b:p},backend:e}),h=uh.kernelFunc({inputs:{a:c,b:m},backend:e}),d=e.data.get(f.dataId).values,g=e.data.get(h.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),{real:d,imag:g}}return a}else{let a=N.mergeRealAndImagArrays(s,i),l=IK(a,o,t);return N.splitRealAndImagArrays(l)}}function TK(r){return(r&r-1)===0}function QC(r,t,e,o,n){if(e===1)return{real:r,imag:t};let s=N.mergeRealAndImagArrays(r,t),i=e/2,a=N.complexWithEvenIndex(s),l=a.real,u=a.imag,c=[l.length],p=n.makeTensorInfo(c,"float32",l),m=n.makeTensorInfo(c,"float32",u),f=qe({inputs:{real:p,imag:m},backend:n}),h=N.complexWithOddIndex(s),d=h.real,g=h.imag,x=[d.length],b=n.makeTensorInfo(x,"float32",d),w=n.makeTensorInfo(x,"float32",g),C=qe({inputs:{real:b,imag:w},backend:n}),v=QC(l,u,i,o,n),$=v.real,R=v.imag,F=[$.length],O=n.makeTensorInfo(F,"float32",$),P=n.makeTensorInfo(F,"float32",R),B=qe({inputs:{real:O,imag:P},backend:n}),V=QC(d,g,i,o,n),G=V.real,H=V.imag,W=[G.length],j=n.makeTensorInfo(W,"float32",G),Z=n.makeTensorInfo(W,"float32",H),q=qe({inputs:{real:j,imag:Z},backend:n}),J=N.exponents(e,o),et=[J.real.length],rt=n.makeTensorInfo(et,"float32",J.real),at=n.makeTensorInfo(et,"float32",J.imag),it=qe({inputs:{real:rt,imag:at},backend:n}),ct=Vl({inputs:{a:it,b:q},backend:n}),lt=zn({inputs:{a:B,b:ct},backend:n}),ft=ih({inputs:{a:B,b:ct},backend:n}),Tt=Mo({inputs:{input:lt},backend:n}),Nt=Mo({inputs:{input:ft},backend:n}),St=Mn({inputs:{input:lt},backend:n}),Pt=Mn({inputs:{input:ft},backend:n}),Mt=La({inputs:[Tt,Nt],backend:n,attrs:{axis:0}}),se=La({inputs:[St,Pt],backend:n,attrs:{axis:0}}),me=n.data.get(Mt.dataId).values,Oe=n.data.get(se.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(B),n.disposeIntermediateTensorInfo(j),n.disposeIntermediateTensorInfo(Z),n.disposeIntermediateTensorInfo(q),n.disposeIntermediateTensorInfo(rt),n.disposeIntermediateTensorInfo(at),n.disposeIntermediateTensorInfo(it),n.disposeIntermediateTensorInfo(ct),n.disposeIntermediateTensorInfo(lt),n.disposeIntermediateTensorInfo(ft),n.disposeIntermediateTensorInfo(Tt),n.disposeIntermediateTensorInfo(St),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo(Pt),n.disposeIntermediateTensorInfo(Mt),n.disposeIntermediateTensorInfo(se),{real:me,imag:Oe}}function IK(r,t,e){let o=new Float32Array(t*2);for(let n=0;n<t;n++){let s=0,i=0;for(let a=0;a<t;a++){let l=N.exponent(n*a,t,e),u=N.getComplexWithIndex(r,a);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}e&&(s/=t,i/=t),N.assignToTypedArray(o,s,i,n)}return o}function SK(r){let{inputs:t,backend:e}=r,{input:o}=t,n=y.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Ot({inputs:{x:o},backend:e,attrs:{shape:[i,s]}}),l=Qx(a,!1,e),u=Ot({inputs:{x:l},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),u}var CA={kernelName:ku,backendName:"cpu",kernelFunc:SK};function ch(r){let{backend:t,attrs:e}=r,{shape:o,value:n,dtype:s}=e,i=s||y.inferDtype(n),a=y.getArrayFromDType(i,y.sizeFromShape(o));return vK(a,n,i),t.makeTensorInfo(o,i,a)}var TA={kernelName:Eu,backendName:"cpu",kernelFunc:ch};function vK(r,t,e){r.fill(t)}var IA={kernelName:$u,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,n=e,s=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(o.shape)),[i,a,l,u]=o.shape,c=n.data.get(o.dataId).values;for(let m=0;m<i;m++){let f=m*l*a*u;for(let h=0;h<a;h++){let d=h*(l*u);for(let g=0;g<l;g++){let x=g*u;for(let b=0;b<u;b++){let w=Math.round(l-g-1),C=f+d+x+b,v=c[C];if(w>=0&&w<l){let $=w*u,R=f+d+$+b;v=c[R]}s[C]=v}}}}return{dataId:n.write(s,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var NK=zt((r,t)=>Math.floor(r/t)),kK=Gt(ms,NK,null,"int32"),SA={kernelName:ms,backendName:"cpu",kernelFunc:kK};function EK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=ZC({inputs:{x:n,filter:s},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let g=d;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let x=Ot({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});d=zn({inputs:{a:d,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else d=zn({inputs:{a:d,b:i},backend:e});e.disposeIntermediateTensorInfo(g)}if(f){let g=d;if(c==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){let x=Ot({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});d=Gl(e,d,f,x,h),e.disposeIntermediateTensorInfo(x)}else d=Gl(e,d,f,a,h);e.disposeIntermediateTensorInfo(g)}return d}var vA={kernelName:rl,backendName:"cpu",kernelFunc:EK};function $K(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=JC({inputs:{x:n,filter:s},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let g=d;d=zn({inputs:{a:d,b:i},backend:e}),e.disposeIntermediateTensorInfo(g)}if(f){let g=d;d=Gl(e,d,f,a,h),e.disposeIntermediateTensorInfo(g)}return d}var NA={kernelName:ol,backendName:"cpu",kernelFunc:$K};function AK(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,s=y.sizeFromShape(o.shape),i=n.shape,a=i[i.length-1],[l,u,c,p]=N.prepareAndValidate(o,n);if(u===0)return e.makeTensorInfo(l,o.dtype,[]);let m=e.data.get(n.dataId).values,f=e.bufferSync(o),h=_x(m,f,o.dtype,u,a,c,p,o.shape,s);return e.makeTensorInfo(l,o.dtype,h.values)}var kA={kernelName:Au,backendName:"cpu",kernelFunc:AK};function DK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:s}=t,{axis:i,batchDims:a}=o;Y([n,s],"gatherV2");let l=y.parseAxisParam(i,n.shape)[0],u=e.data.get(s.dataId).values,c=n.shape[l];for(let C=0;C<u.length;++C){let v=u[C];y.assert(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let p=a;a==null&&(p=0);let m=y.sizeFromShape(s.shape),f=N.segment_util.collectGatherOpShapeInfo(n,s,l,p),h=Ot({inputs:{x:n},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),d=Ot({inputs:{x:s},backend:e,attrs:{shape:[f.batchSize,m/f.batchSize]}}),g=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=e.bufferSync(d),b=e.bufferSync(h),w=Ox(b,x,g);return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),e.makeTensorInfo(f.outputShape,w.dtype,w.values)}var EA={kernelName:Ri,backendName:"cpu",kernelFunc:DK};function RK(r){let{inputs:t,backend:e}=r,{input:o}=t,n=y.sizeFromShape(o.shape),s=o.shape[o.shape.length-1],i=n/s,a=Ot({inputs:{x:o},backend:e,attrs:{shape:[i,s]}}),l=Qx(a,!0,e),u=Ot({inputs:{x:l},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),u}var $A={kernelName:Du,backendName:"cpu",kernelFunc:RK};var FK=wt(hs,r=>Number.isFinite(r)?1:0,"bool"),AA={kernelName:hs,backendName:"cpu",kernelFunc:FK};var _K=wt(ds,r=>Math.abs(r)===1/0?1:0,"bool"),DA={kernelName:ds,backendName:"cpu",kernelFunc:_K};var OK=wt(gs,r=>Number.isNaN(r)?1:0,"bool"),RA={kernelName:gs,backendName:"cpu",kernelFunc:OK};function LK(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:s}=e,i=Lx(o,n,s);return t.makeTensorInfo([i.length],"float32",i)}var FA={kernelName:Fu,backendName:"cpu",kernelFunc:LK};var PK=wt(ys,r=>Math.log1p(r)),_A={kernelName:ys,backendName:"cpu",kernelFunc:PK};var zK=zt((r,t)=>r&&t),MK=Gt(Za,zK,null,"bool"),OA={kernelName:Za,backendName:"cpu",kernelFunc:MK};var BK=wt(Ja,r=>r?0:1,"bool"),LA={kernelName:Ja,backendName:"cpu",kernelFunc:BK};var VK=zt((r,t)=>r||t),GK=Gt(Qa,VK,null,"bool"),PA={kernelName:Qa,backendName:"cpu",kernelFunc:GK};function WK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=o;Y(n,"LRN");let u=n.shape[3],c=u-1,p=e.data.get(n.dataId).values,m=y.sizeFromShape(n.shape),f=new Float32Array(m);function h(d){let g=d%u,x=d-g+Math.max(0,g-s),b=d-g+Math.min(g+s,c),w=0;for(;x<=b;x++){let C=p[x];w+=C*C}return w}for(let d=0;d<m;d++){let g=h(d),x=p[d]*Math.pow(i+a*g,-l);f[d]=x}return e.makeTensorInfo(n.shape,n.dtype,f)}var zA={kernelName:_i,backendName:"cpu",kernelFunc:WK};function UK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o;Y(i,"LRNGrad");let p=y.sizeFromShape(i.shape),m=i.shape[3],f=e.data.get(i.dataId).values,h=e.data.get(n.dataId).values,d=e.data.get(s.dataId).values,g=new Float32Array(p),x=p;for(let b=0;b<x;b++){let w=b%m,C=b-w+Math.max(0,w-a),v=b-w+Math.min(m,w+a+1),$=0;for(let R=C;R<v;R++)$+=Math.pow(h[R],2);$=u*$+l;for(let R=C;R<v;R++){let F=-2*u*c*h[R]*d[b]/$;b===R&&(F+=Math.pow($,-c)),F*=f[b],g[R]+=F}}return e.makeTensorInfo(i.shape,n.dtype,g)}var MA={kernelName:_u,backendName:"cpu",kernelFunc:UK};function tT(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:s,keepDims:i}=o,a=e,l=n.shape,u=l.length,c=y.parseAxisParam(s,l),p=c,m=N.getAxesPermutation(p,u),f=a.data.get(n.dataId).values;if(m!=null){let C=new Array(u);for(let v=0;v<C.length;v++)C[v]=l[m[v]];f=Ap(f,l,n.dtype,m,C),p=N.getInnerMostAxes(p.length,u),l=C}Y(n,"max"),N.assertAxesAreInnerMostDims("max",p,u);let[h,d]=N.computeOutAndReduceShapes(l,p),g=y.sizeFromShape(d),x=Px(f,g,h,n.dtype),b=a.write(x,h,n.dtype),w=h;return i&&(w=N.expandShapeToKeepDim(h,c)),{dataId:b,shape:w,dtype:n.dtype}}var BA={kernelName:Oi,backendName:"cpu",kernelFunc:tT};function HK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Y(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;y.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,i,u,a,l),p;if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))p=gr({inputs:{x:n},backend:e});else{let m=e.data.get(n.dataId).values,f=y.computeStrides(n.shape),h=Fp(m,n.shape,n.dtype,f,c,"max");p=e.makeTensorInfo(c.outShape,n.dtype,h.values)}return p}var VA={kernelName:Li,backendName:"cpu",kernelFunc:HK};function KK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=o;Y(n,"maxPool3d");let c=N.computePool3DInfo(n.shape,s,i,1,a,l,u),p=e.data.get(n.dataId).values,m=Jx(p,n.shape,n.dtype,y.computeStrides(n.shape),c,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}var GA={kernelName:Pi,backendName:"cpu",kernelFunc:KK};function qK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=o;Y([n,s],"maxPool3DGrad");let c=N.computePool3DInfo(s.shape,i,a,1,l,u),p=e.bufferSync(s),m=P$(p,c),f=c.strideDepth,h=c.strideHeight,d=c.strideWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,C=c.effectiveFilterHeight,v=c.effectiveFilterWidth,$=w-1-c.padInfo.front,R=v-1-c.padInfo.left,F=C-1-c.padInfo.top,O=mt(s.shape,"float32"),P=e.bufferSync(n);for(let B=0;B<c.batchSize;++B)for(let V=0;V<c.inChannels;++V)for(let G=0;G<c.inDepth;++G)for(let H=0;H<c.inHeight;++H)for(let W=0;W<c.inWidth;++W){let j=G-$,Z=H-F,q=W-R,J=0;for(let et=0;et<w;et+=g){let rt=(j+et)/f;if(!(rt<0||rt>=c.outDepth||Math.floor(rt)!==rt))for(let at=0;at<C;at+=x){let it=(Z+at)/h;if(!(it<0||it>=c.outHeight||Math.floor(it)!==it))for(let ct=0;ct<v;ct+=b){let lt=(q+ct)/d;if(lt<0||lt>=c.outWidth||Math.floor(lt)!==lt)continue;let ft=w*C*v-1-m.get(B,rt,it,lt,V),Tt=et*C*v+at*v+ct,Nt=ft===Tt?1:0;if(Nt===0)continue;let St=P.get(B,rt,it,lt,V);J+=St*Nt}}}O.set(J,B,G,H,W,V)}return e.makeTensorInfo(O.shape,O.dtype,O.values)}var WA={kernelName:Lu,backendName:"cpu",kernelFunc:qK};function jK(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s,output:i}=t,a=s;Y([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,m=N.computePool2DInfo(a.shape,l,u,1,c,p),f=e.data.get(a.dataId).values,h=mt(m.outShape,a.dtype,Zx(f,a.shape,a.dtype,m).values),d=m.strideHeight,g=m.strideWidth,x=m.dilationHeight,b=m.dilationWidth,w=m.effectiveFilterHeight,C=m.effectiveFilterWidth,v=C-1-m.padInfo.left,$=w-1-m.padInfo.top,R=mt(a.shape,"float32"),F=e.data.get(n.dataId).values,O=mt(n.shape,"float32",F);for(let P=0;P<m.batchSize;++P)for(let B=0;B<m.inChannels;++B)for(let V=0;V<m.inHeight;++V)for(let G=0;G<m.inWidth;++G){let H=V-$,W=G-v,j=0;for(let Z=0;Z<w;Z+=x){let q=(H+Z)/d;if(!(q<0||q>=m.outHeight||Math.floor(q)!==q))for(let J=0;J<C;J+=b){let et=(W+J)/g;if(et<0||et>=m.outWidth||Math.floor(et)!==et)continue;let rt=w*C-1-h.get(P,q,et,B),at=Z*C+J,it=rt===at?1:0;if(it===0)continue;let ct=O.get(P,q,et,B);j+=ct*it}}R.set(j,P,V,G,B)}return e.makeTensorInfo(R.shape,R.dtype,R.values)}var UA={kernelName:Ou,backendName:"cpu",kernelFunc:jK};function HA(r,t,e,o,n){let s=y.computeStrides(t),i=Fp(r,t,e,s,n,"max"),a=Zx(r,t,e,n,!0,o);return[i.values,a.values]}var KA={kernelName:Pu,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;Y(o,"MaxPoolWithArgmax");let u=l.data.get(o.dataId).values,c=N.computePool2DInfo(o.shape,n,s,[1,1],i),[p,m]=HA(u,o.shape,o.dtype,a,c),f=l.write(p,c.outShape,o.dtype),h=l.write(m,c.outShape,o.dtype);return[{dataId:f,shape:c.outShape,dtype:o.dtype},{dataId:h,shape:c.outShape,dtype:"int32"}]}};function XK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=y.parseAxisParam(s,n.shape),u=N.computeOutAndReduceShapes(n.shape,a)[1],c=y.sizeFromShape(u),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=Bo({inputs:{x:n},backend:e,attrs:{dtype:"float32"}});p.push(f);let h=lh({inputs:{a:f,b:m},backend:e});p.push(h);let d=si({inputs:{x:h},backend:e,attrs:{axis:s,keepDims:i}});return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),d}var qA={kernelName:zi,backendName:"cpu",kernelFunc:XK};function YK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;Y(n,"min");let a=y.parseAxisParam(s,n.shape),l=a,u=N.getAxesPermutation(l,n.shape.length),c=n;u!=null&&(c=be({inputs:{x:n},backend:e,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,n.shape.length)),N.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=y.sizeFromShape(m),h=y.makeZerosTypedArray(y.sizeFromShape(p),c.dtype),d=e.data.get(c.dataId).values;for(let x=0;x<h.length;++x){let b=x*f,w=d[b];for(let C=0;C<f;++C){let v=d[b+C];(Number.isNaN(v)||v<w)&&(w=v)}h[x]=w}u!=null&&e.disposeIntermediateTensorInfo(c);let g=e.makeTensorInfo(p,c.dtype,h);if(i){let x=N.expandShapeToKeepDim(p,a),b=Ot({inputs:{x:g},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(g),b}return g}var jA={kernelName:Mi,backendName:"cpu",kernelFunc:YK};function ZK(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,mode:i}=o;Y(n,"mirrorPad");let a=s.map((w,C)=>w[0]+n.shape[C]+w[1]),l=s.map(w=>w[0]),u=s.map((w,C)=>w[0]+n.shape[C]),c=i==="reflect"?0:1,p=e.data.get(n.dataId).values,m=n.shape.length,f=y.computeStrides(n.shape),h=y.sizeFromShape(a),d=a.length,g=y.computeStrides(a),x=y.getTypedArrayFromDType(n.dtype,h);for(let w=0;w<h;w++){let C=y.indexToLoc(w,d,g);for(let $=0;$<d;$++)C[$]<l[$]?C[$]=l[$]*2-C[$]-c:C[$]>=u[$]&&(C[$]=(u[$]-1)*2-C[$]+c);C=C.map(($,R)=>$-l[R]);let v=y.locToIndex(C,m,f);x[w]=p[v]}return{dataId:e.write(x,a,n.dtype),shape:a,dtype:n.dtype}}var XA={kernelName:Bi,backendName:"cpu",kernelFunc:ZK};var JK=zt((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),QK=Gt(Cs,JK),YA={kernelName:Cs,backendName:"cpu",kernelFunc:QK};var JA=tm(wm());function eT(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:s}=o,i=n.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let l=y.parseAxisParam([a],n.shape),u=tT({inputs:{x:n},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),c=N.expandShapeToKeepDim(u.shape,l),p=Ot({inputs:{x:u},backend:e,attrs:{shape:c}}),m=ih({inputs:{a:n,b:p},backend:e}),f=vC({inputs:{x:m},backend:e}),h=si({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),d=Ot({inputs:{x:h},backend:e,attrs:{shape:c}}),g=lh({inputs:{a:f,b:d},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(d),g}var ZA={kernelName:oa,backendName:"cpu",kernelFunc:eT};function tq(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:s,seed:i,normalized:a}=o;Y(n,"multinomial");let l=a?n:eT({inputs:{logits:n},backend:e,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=e.data.get(l.dataId).values,m=[u,s],f=y.makeZerosTypedArray(y.sizeFromShape(m),"int32");for(let h=0;h<u;++h){let d=h*c,g=new Float32Array(c-1);g[0]=p[d];for(let w=1;w<g.length;++w)g[w]=g[w-1]+p[d+w];let x=JA.alea(i.toString()),b=h*s;for(let w=0;w<s;++w){let C=x();f[b+w]=g.length;for(let v=0;v<g.length;v++)if(C<g[v]){f[b+w]=v;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(m,"int32",f)}var QA={kernelName:zu,backendName:"cpu",kernelFunc:tq};var eq=hr.nonMaxSuppressionV3Impl;function rq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o;Y(n,"NonMaxSuppression");let u=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,{selectedIndices:p}=eq(u,c,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var t2={kernelName:Mu,backendName:"cpu",kernelFunc:rq};var oq=hr.nonMaxSuppressionV4Impl;function nq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o;Y(n,"NonMaxSuppressionPadded");let c=e.data.get(n.dataId).values,p=e.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=oq(c,p,i,a,l,u);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var e2={kernelName:Bu,backendName:"cpu",kernelFunc:nq};var sq=hr.nonMaxSuppressionV5Impl;function iq(r){let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o;Y(n,"NonMaxSuppressionWithScore");let c=e.data.get(n.dataId).values,p=e.data.get(s.dataId).values,m=i,f=a,h=l,d=u,{selectedIndices:g,selectedScores:x}=sq(c,p,m,f,h,d);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var r2={kernelName:Vu,backendName:"cpu",kernelFunc:iq};function aq(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:s,depth:i,onValue:a,offValue:l}=o;Y(n,"oneHot");let u=y.sizeFromShape(n.shape),c=new Float32Array(u*i);c.fill(l);let p=e.data.get(n.dataId).values;for(let m=0;m<u;++m)p[m]>=0&&p[m]<i&&(c[m*i+p[m]]=a);return e.makeTensorInfo([...n.shape,i],s,c)}var o2={kernelName:Wi,backendName:"cpu",kernelFunc:aq};function ph(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(o.dtype==="complex64"){let n=Mo({inputs:{input:o},backend:e}),s=ph({inputs:{x:n},backend:e}),i=Mn({inputs:{input:o},backend:e}),a=ph({inputs:{x:i},backend:e}),l=qe({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return ch({backend:e,attrs:{shape:o.shape,value:0,dtype:o.dtype}})}var n2={kernelName:ia,backendName:"cpu",kernelFunc:ph};function s2(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(o.dtype==="complex64"){let n=Mo({inputs:{input:o},backend:e}),s=s2({inputs:{x:n},backend:e}),i=Mn({inputs:{input:o},backend:e}),a=ph({inputs:{x:i},backend:e}),l=qe({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return ch({backend:e,attrs:{shape:o.shape,value:1,dtype:o.dtype}})}var i2={kernelName:Gi,backendName:"cpu",kernelFunc:s2};function rT(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return _p({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=_p({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=La({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var a2={kernelName:Ui,backendName:"cpu",kernelFunc:rT};function lq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,constantValue:i}=o;Y(n,"pad");let a=s.map((b,w)=>b[0]+n.shape[w]+b[1]),l=s.map(b=>b[0]),u=e.data.get(n.dataId).values,c=y.sizeFromShape(n.shape),p=n.shape.length,m=y.computeStrides(n.shape),f=y.sizeFromShape(a),h=a.length,d=y.computeStrides(a),g=y.getTypedArrayFromDType(n.dtype,f);i!==0&&g.fill(i);for(let b=0;b<c;b++){let C=y.indexToLoc(b,p,m).map(($,R)=>$+l[R]),v=y.locToIndex(C,h,d);g[v]=u[b]}return{dataId:e.write(g,a,n.dtype),shape:a,dtype:n.dtype}}var ty={kernelName:Hi,backendName:"cpu",kernelFunc:lq};var uq=zt((r,t)=>Math.pow(r,t)),cq=Gt(Is,uq),l2={kernelName:Is,backendName:"cpu",kernelFunc:cq};function pq(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=o,l=n.map(x=>e.data.get(x.dataId).values),u=n.map(x=>x.shape),c=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,[m,f,h]=zx(l,u,c,s.shape,s.dtype,p,i.shape,a),d=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(h,s.dtype,f);return d.concat([g])}var u2={kernelName:Gu,backendName:"cpu",kernelFunc:pq};function mq(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:s}=t,i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[u,c]=Mx(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=e.makeTensorInfo([u.length],"int32",u),m=e.makeTensorInfo([c.length],o.dtype,c);return[p,m]}var c2={kernelName:Wu,backendName:"cpu",kernelFunc:mq};function fq(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,u=e.data.get(n.dataId).values,c=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,m=a.map(g=>e.data.get(g.dataId).values),f=a.map(g=>g.shape),[h,d]=Bx(u,n.shape,c,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(h,s.dtype,d)}var p2={kernelName:Uu,backendName:"cpu",kernelFunc:fq};function hq(r){let{backend:t,attrs:e}=r,{start:o,stop:n,dtype:s,step:i}=e,a=Vx(o,n,i,s);return t.makeTensorInfo([a.length],s,a)}var m2={kernelName:Hu,backendName:"cpu",kernelFunc:hq};var dq=wt(Ss,r=>1/r),f2={kernelName:Ss,backendName:"cpu",kernelFunc:dq};function gq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o;Y(n,"resizeBilinear");let l=y.computeStrides(n.shape),[u,c]=a,[p,m,f,h]=n.shape,d=e.data.get(n.dataId).values,g=new Float32Array(y.sizeFromShape([p,u,c,h])),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=0,C=x[0]/b[0],v=x[1]/b[1];for(let $=0;$<p;$++)for(let R=0;R<u;R++){let F;i?F=C*(R+.5)-.5:F=C*R;let O=Math.max(0,Math.floor(F)),P=F-O,B=Math.min(m-1,Math.ceil(F)),V=$*l[0]+O*l[1],G=$*l[0]+B*l[1];for(let H=0;H<c;H++){let W;i?W=v*(H+.5)-.5:W=v*H;let j=Math.max(0,Math.floor(W)),Z=W-j,q=Math.min(f-1,Math.ceil(W)),J=V+j*l[2],et=G+j*l[2],rt=V+q*l[2],at=G+q*l[2];for(let it=0;it<h;it++){let ct=d[J+it],lt=d[et+it],ft=d[rt+it],Tt=d[at+it],Nt=ct+(ft-ct)*Z,St=lt+(Tt-lt)*Z,Pt=Nt+(St-Nt)*P;g[w++]=Pt}}}return e.makeTensorInfo([p,u,c,h],"float32",g)}var h2={kernelName:Yi,backendName:"cpu",kernelFunc:gq};function xq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o;Y([s,n],"resizeBilinearGrad");let a=y.computeStrides(n.shape),[l,u,c,p]=n.shape,[,m,f]=s.shape,h=new Float32Array(l*u*c*p),d=[i&&m>1?u-1:u,i&&f>1?c-1:c],g=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=d[0]/g[0],b=d[1]/g[1],w=e.data.get(s.dataId).values,C=0;for(let v=0;v<l;v++){let $=v*a[0];for(let R=0;R<m;R++){let F=R*x,O=Math.floor(F),P=Math.min(Math.ceil(F),u-1),B=$+O*a[1],V=$+P*a[1],G=F-O,H=1-G;for(let W=0;W<f;W++){let j=W*b,Z=Math.floor(j),q=Math.min(Math.ceil(j),c-1),J=j-Z,et=1-J,rt=B+Z*a[2],at=B+q*a[2],it=V+Z*a[2],ct=V+q*a[2],lt=H*et,ft=H*J,Tt=G*et,Nt=G*J;for(let St=0;St<p;St++){let Pt=w[C++];h[rt+St]+=Pt*lt,h[at+St]+=Pt*ft,h[it+St]+=Pt*Tt,h[ct+St]+=Pt*Nt}}}}return e.makeTensorInfo([l,c,u,p],"float32",h)}var d2={kernelName:ju,backendName:"cpu",kernelFunc:xq};function yq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o;Y(n,"resizeNearestNeighbor");let l=y.computeStrides(n.shape),[u,c]=a,[p,m,f,h]=n.shape,d=e.data.get(n.dataId).values,g=new Float32Array(p*u*c*h),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],w=x[0]/b[0],C=x[1]/b[1],v=0;for(let $=0;$<p;$++){let R=$*l[0];for(let F=0;F<u;F++){let O=i?w*(F+.5):w*F,P=Math.min(m-1,s?Math.round(O):Math.floor(O));i&&(P=Math.max(0,P));let B=R+P*l[1];for(let V=0;V<c;V++){let G=i?C*(V+.5):C*V,H=Math.min(f-1,s?Math.round(G):Math.floor(G));i&&(H=Math.max(0,H));let W=B+H*l[2];for(let j=0;j<h;j++){let Z=d[W+j];g[v++]=Z}}}}return e.makeTensorInfo([p,u,c,h],n.dtype,g)}var g2={kernelName:Xi,backendName:"cpu",kernelFunc:yq};function bq(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o;Y([s,n],"resizeNearestNeighborGrad");let a=y.computeStrides(n.shape),l=y.computeStrides(s.shape),[u,c,p,m]=n.shape,[,f,h]=s.shape,d=new Float32Array(u*c*p*m),g=e.data.get(s.dataId).values,x=[i&&f>1?c-1:c,i&&h>1?p-1:p],b=[i&&f>1?f-1:f,i&&h>1?h-1:h],w=x[0]/b[0],C=x[1]/b[1],v=1/w,$=1/C,R=Math.ceil(v)*2+2,F=Math.ceil($)*2+2;for(let O=0;O<u;O++){let P=O*a[0];for(let B=0;B<c;B++){let V=P+B*a[1],G=Math.floor(B*v),H=Math.floor(G-R/2);for(let W=0;W<p;W++){let j=V+W*a[2],Z=Math.floor(W*$),q=Math.floor(Z-F/2);for(let J=0;J<m;J++){let et=0;for(let rt=0;rt<R;rt++){let at=rt+H;if(at<0||at>=f)continue;let it=P+at*l[1],ct=at*w,lt=Math.min(c-1,i?Math.round(ct):Math.floor(ct));if(B===lt)for(let ft=0;ft<F;ft++){let Tt=ft+q;if(Tt<0||Tt>=h)continue;let Nt=it+Tt*l[2],St=Tt*C,Pt=Math.min(p-1,i?Math.round(St):Math.floor(St));W===Pt&&(et+=g[Nt+J])}}d[j+J]=et}}}}return e.makeTensorInfo(n.shape,n.dtype,d)}var x2={kernelName:qu,backendName:"cpu",kernelFunc:bq};function wq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:s}=o;Y(n,"reverse");let i=n.shape.length,a=y.parseAxisParam(s,n.shape);if(i===0)return gr({inputs:{x:n},backend:e});let l=new Ut(n.shape,n.dtype),u=e.bufferSync(n);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),m=p.slice();a.forEach(f=>m[f]=n.shape[f]-1-m[f]),l.set(u.get(...m),...p)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}var y2={kernelName:Zi,backendName:"cpu",kernelFunc:wq};var b2={kernelName:cc,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=t,a=e,l=y.getTypedArrayFromDType(o.dtype,y.sizeFromShape(o.shape)),[u,c,p,m]=o.shape,[f,h]=N.getImageCenter(i,c,p),d=255,g=Math.sin(n),x=Math.cos(n),b=a.data.get(o.dataId).values;for(let C=0;C<u;C++){let v=C*p*c*m;for(let $=0;$<c;$++){let R=$*(p*m);for(let F=0;F<p;F++){let O=F*m;for(let P=0;P<m;P++){let B=[u,$,F,P],V=B[2],G=B[1],H=(V-f)*x-(G-h)*g,W=(V-f)*g+(G-h)*x;H=Math.round(H+f),W=Math.round(W+h);let j=s;if(typeof s!="number"&&(P===3?j=d:j=s[P]),H>=0&&H<p&&W>=0&&W<c){let q=W*(p*m),J=H*m,et=v+q+J+P;j=b[et]}let Z=v+R+O+P;l[Z]=j}}}}return{dataId:a.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var Cq=wt(ks,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),w2={kernelName:ks,backendName:"cpu",kernelFunc:Cq};function Tq(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:s}=t,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,n,i),m=!0,f=e.bufferSync(n),h=e.bufferSync(s),d=ni(f,h,i,p,u,l,a,c,0,m);return e.makeTensorInfo(i,d.dtype,d.values)}var C2={kernelName:Xu,backendName:"cpu",kernelFunc:Tq};function Iq(r,t){let e=0,o=r.length,n=0;for(;e<o;)n=Math.floor((e+o)/2),r[n]<t?e=n+1:o=n;return o}function Sq(r,t){let e=0,o=r.length,n=0;for(;e<o;)n=Math.floor((e+o)/2),r[n]<=t?e=n+1:o=n;return o}function T2(r,t,e,o,n,s){let i=y.getArrayFromDType("int32",e*n);for(let a=0;a<e;++a){let l=r.slice(a*o,(a+1)*o),u=a*n;for(let c=0;c<n;++c)i[u+c]=s==="left"?Iq(l,t[c+u]):Sq(l,t[c+u])}return i}function vq(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:s}=t,{side:i}=o,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,u=T2(a,l,n.shape[0],n.shape[1],s.shape[1],i);return e.makeTensorInfo(s.shape,"int32",u)}var I2={kernelName:Yu,backendName:"cpu",kernelFunc:vq};function Nq(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:s}=t;Y([o,n,s],"select");let i=o.shape.length,a=e.data.get(o.dataId).values,l=e.data.get(n.dataId).values,u=e.data.get(s.dataId).values,c=Le(n.dtype,s.dtype),p=y.makeZerosTypedArray(y.sizeFromShape(n.shape),c),m=0,f=i===0||i>1||n.shape.length===1?1:y.sizeFromShape(n.shape.slice(1));for(let h=0;h<a.length;h++)for(let d=0;d<f;d++)a[h]===1?p[m++]=l[h]:p[m++]=u[h];return e.makeTensorInfo(n.shape,c,p)}var S2={kernelName:Ji,backendName:"cpu",kernelFunc:Nq};var kq=N.SELU_SCALEALPHA,Eq=N.SELU_SCALE,$q=wt($s,r=>r>=0?Eq*r:kq*(Math.exp(r)-1)),v2={kernelName:$s,backendName:"cpu",kernelFunc:$q};var Aq=wt(Rs,r=>r<0?-1:r>0?1:0),N2={kernelName:Rs,backendName:"cpu",kernelFunc:Aq};var Dq=wt(As,r=>Math.sin(r)),k2={kernelName:As,backendName:"cpu",kernelFunc:Dq};var Rq=wt(Ds,r=>Math.sinh(r)),E2={kernelName:Ds,backendName:"cpu",kernelFunc:Rq};var Fq=11920928955078125e-23,$2=Math.log(Fq)+2,_q=wt(_s,r=>{let t=r>-$2,e=r<$2,o=Math.exp(r),n;return e?n=o:t?n=r:n=Math.log(1+o),n}),A2={kernelName:_s,backendName:"cpu",kernelFunc:_q};function Oq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,paddings:i}=o;Y([n],"spaceToBatchND");let a=y.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let $=1+s.length;$<n.shape.length;++$)l.push([0,0]);let u=ty.kernelFunc({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),c=N.getReshaped(u.shape,s,a,!1),p=N.getPermuted(c.length,s.length,!1),m=N.getReshapedPermuted(u.shape,s,a,!1),d=Ot({inputs:{x:u},backend:e,attrs:{shape:c}}),b=be({inputs:{x:d},backend:e,attrs:{perm:p}}),v=Ot({inputs:{x:b},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(b),v}var D2={kernelName:ea,backendName:"cpu",kernelFunc:Oq};function Lq(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.data.get(o.dataId).values,l=e.data.get(n.dataId).values,u=e.data.get(s.dataId).values,c=e.data.get(i.dataId).values[0],[p,m,f,h,d]=Gx(a,o.shape,o.dtype,l,n.dtype,u,c);return[e.makeTensorInfo(m,o.dtype,p),e.makeTensorInfo([m[0]],n.dtype,f),e.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(g=>Number(g)))),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}var R2={kernelName:Zu,backendName:"cpu",kernelFunc:Lq};function Pq(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:s}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.data.get(n.dataId).values),a=e.data.get(o.dataId).values,l=Array.from(e.data.get(s.dataId).values),[u,c,p]=Wx(a,o.shape,o.dtype,i,l);return[e.makeTensorInfo(c,o.dtype,u),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var F2={kernelName:Ju,backendName:"cpu",kernelFunc:Pq};function zq(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[u,c]=Rp(i,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(c,o.dtype,u)}var _2={kernelName:Qu,backendName:"cpu",kernelFunc:zq};function Mq(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(n.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values,l=e.data.get(s.dataId).values,[u,c]=Rp(i,o.shape,o.dtype,a,l);return e.makeTensorInfo(c,o.dtype,u)}var O2={kernelName:tc,backendName:"cpu",kernelFunc:Mq};function Bq(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=N.calculateShapes(s,n,a),f=!1,h=e.bufferSync(n),d;switch(s.dtype){case"bool":{let g=e.bufferSync(s),x=!!e.data.get(i.dataId).values[0];d=ni(h,g,a,m,c,u,l,p,x,f);break}case"float32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];d=ni(h,g,a,m,c,u,l,p,x,f);break}case"int32":{let g=e.bufferSync(s),x=e.data.get(i.dataId).values[0];d=ni(h,g,a,m,c,u,l,p,x,f);break}case"string":{let g=e.bufferSync(s),x=y.decodeString(e.data.get(i.dataId).values[0]);d=ni(h,g,a,m,c,u,l,p,x,f);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(a,d.dtype,d.values)}var L2={kernelName:ec,backendName:"cpu",kernelFunc:Bq};function Vq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:s,axis:i}=o,a=y.parseAxisParam(i,n.shape)[0],l=N.prepareSplitSize(n,s,a),u=new Array(n.shape.length).fill(0),c=n.shape.slice();return l.map(p=>{let m=[...c];m[a]=p;let f=Wo({inputs:{x:n},backend:e,attrs:{begin:u,size:m}});return u[a]+=p,f})}var P2={kernelName:ra,backendName:"cpu",kernelFunc:Vq};var z2={kernelName:rc,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,o=t;Y(e,"square");let n=o.data.get(e.dataId).values,s=new Float32Array(n.length);for(let a=0;a<n.length;++a){let l=n[a];s[a]=l*l}return{dataId:o.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var Gq=wt(Bs,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),M2={kernelName:Bs,backendName:"cpu",kernelFunc:Gq};function Wq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=o;Y(n,"stridedSlice");let{finalShapeSparse:f,finalShape:h,isIdentity:d,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:C}=Ze.sliceInfo(n.shape,s,i,a,l,u,c,p,m),v;if(d)v=Ot({inputs:{x:n},backend:e,attrs:{shape:h}});else if(g||x){y.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let $=Ze.computeOutShape(b,w,C),R=Wo({inputs:{x:n},backend:e,attrs:{begin:b,size:$}});v=Ot({inputs:{x:R},backend:e,attrs:{shape:h}}),e.disposeIntermediateTensorInfo(R)}else{let $=e.bufferSync(n),R=Ux(f,$,C,b);v=e.makeTensorInfo(h,R.dtype,R.values)}return v}var B2={kernelName:oc,backendName:"cpu",kernelFunc:Wq};function Uq(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,m=e.data.get(c.dataId).values,f=e.data.get(p.dataId).values,[h,d]=Hx(m,f,n,s,i,a,l,u);return[e.makeTensorInfo([h.length],"string",h),e.makeTensorInfo(p.shape,"int32",d)]}var V2={kernelName:nc,backendName:"cpu",kernelFunc:Uq};function Hq(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values[0],[u,c,p]=Kx(a,l,n),m=c.length;return[e.makeTensorInfo([m,2],"int32",u),e.makeTensorInfo([m],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var G2={kernelName:sc,backendName:"cpu",kernelFunc:Hq};function Kq(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=e.data.get(s.dataId).values,a=qx(i,n);return e.makeTensorInfo(s.shape,"int32",a)}var W2={kernelName:ic,backendName:"cpu",kernelFunc:Kq};var qq=wt(zs,r=>Math.tan(r)),U2={kernelName:zs,backendName:"cpu",kernelFunc:qq};var jq=wt(Ms,r=>Math.tanh(r)),H2={kernelName:Ms,backendName:"cpu",kernelFunc:jq};function Xq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:s}=o;Y(n,"tile");let i=jx(e.bufferSync(n),s);return e.makeTensorInfo(i.shape,i.dtype,i.values)}var K2={kernelName:dn,backendName:"cpu",kernelFunc:Xq};function Yq(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:s,sorted:i}=o;Y(n,"topk");let a=e.data.get(n.dataId).values,[l,u]=Xx(a,n.shape,n.dtype,s,i);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}var q2={kernelName:ac,backendName:"cpu",kernelFunc:Yq};function Zq(r){let{inputs:t,attrs:e,backend:o}=r,{image:n,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=e,[c,p,m,f]=n.shape,[h,d]=u??[p,m],g=[c,h,d,f],x=y.computeStrides(n.shape),b=x[0],w=x[1],C=x[2],v=y.computeStrides(g),$=v[0],R=v[1],F=v[2],O=y.getTypedArrayFromDType(n.dtype,y.sizeFromShape(g));O.fill(l);let P=o.data.get(n.dataId).values,B=o.data.get(s.dataId).values;for(let G=0;G<c;++G){let H=s.shape[0]===1?B:B.subarray(G*8,G*8+8);for(let W=0;W<h;++W)for(let j=0;j<d;++j)for(let Z=0;Z<f;++Z){let q,J=H[6]*j+H[7]*W+1;if(J===0)continue;let et=(H[0]*j+H[1]*W+H[2])/J,rt=(H[3]*j+H[4]*W+H[5])/J,at=j2(et,m,a),it=j2(rt,p,a);switch(i){case"nearest":q=rj(P,p,m,b,w,C,G,it,at,Z,l);break;case"bilinear":q=oj(P,p,m,b,w,C,G,it,at,Z,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let ct=G*$+W*R+j*F+Z;O[ct]=q}return o.makeTensorInfo(g,n.dtype,O)}return{dataId:o.write(O,g,n.dtype),shape:n.shape,dtype:n.dtype}}var X2={kernelName:lc,backendName:"cpu",kernelFunc:Zq};function j2(r,t,e){switch(e){case"reflect":return Jq(r,t);case"wrap":return Qq(r,t);case"nearest":return ej(r,t);case"constant":default:return tj(r,t)}}function Jq(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let o=2*t;e<o&&(e=o*Math.trunc(-e/o)+e),e=e<-t?e+o:-e-1}else if(e>t-1)if(t<=1)e=0;else{let o=2*t;e-=o*Math.trunc(e/o),e>=t&&(e=o-e-1)}return y.clamp(0,e,t-1)}function Qq(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let o=t-1;e+=t*(Math.trunc(-e/o)+1)}else if(e>t-1)if(t<=1)e=0;else{let o=t-1;e-=t*Math.trunc(e/o)}return y.clamp(0,e,t-1)}function tj(r,t){return r}function ej(r,t){return y.clamp(0,r,t-1)}function mh(r,t,e,o,n,s,i,a,l,u,c){let p=i*o+a*n+l*s+u;return 0<=a&&a<t&&0<=l&&l<e?r[p]:c}function rj(r,t,e,o,n,s,i,a,l,u,c){let p=Math.round(a),m=Math.round(l);return mh(r,t,e,o,n,s,i,p,m,u,c)}function oj(r,t,e,o,n,s,i,a,l,u,c){let p=Math.floor(a),m=Math.floor(l),f=p+1,h=m+1,d=(h-l)*mh(r,t,e,o,n,s,i,p,m,u,c)+(l-m)*mh(r,t,e,o,n,s,i,p,h,u,c),g=(h-l)*mh(r,t,e,o,n,s,i,f,m,u,c)+(l-m)*mh(r,t,e,o,n,s,i,f,h,u,c);return(f-a)*d+(a-p)*g}function nj(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:s}=t;Y(s,"unique");let i=o.data.get(s.dataId).values,{outputValues:a,outputShape:l,indices:u}=Yx(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var Y2={kernelName:uc,backendName:"cpu",kernelFunc:nj};function sj(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n.shape.length,a=n.shape[s],l=new Array(i-1),u=0;for(let f=0;f<i;f++)f!==s&&(l[u++]=n.shape[f]);let c=new Array(i).fill(0),p=n.shape.slice();p[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){c[s]=f;let h=Wo({inputs:{x:n},backend:e,attrs:{begin:c,size:p}});m[f]=Ot({inputs:{x:h},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(h)}return m}var Z2={kernelName:na,backendName:"cpu",kernelFunc:sj};function ij(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:s}=t,{numSegments:i}=o;Y(n,"unsortedSegmentSum");let a=n.shape.length,l=s.shape.length,u=[],c=[],p=a-l,m=s;for(let h=0;h<p;++h){let d=_p({inputs:{input:m},backend:e,attrs:{dim:h+1}});m=d,c.push(d)}for(let h=0;h<i;++h){let d=y.createScalarValue(h,"int32"),g=e.makeTensorInfo([],"int32",d),x=IC({inputs:{a:g,b:m},backend:e}),b=Bo({inputs:{x},backend:e,attrs:{dtype:"float32"}}),w=Vl({inputs:{a:b,b:n},backend:e}),C=si({inputs:{x:w},backend:e,attrs:{axis:0,keepDims:!1}});u.push(C),c.push(g),c.push(x),c.push(b),c.push(w),c.push(C)}let f=rT({inputs:u,backend:e,attrs:{axis:0}});return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var J2={kernelName:sa,backendName:"cpu",kernelFunc:ij};var aj=[S$,OE,v$,N$,BE,k$,E$,$$,A$,D$,R$,F$,_$,O$,L$,z$,M$,B$,V$,I$,G$,W$,U$,H$,ME,VE,K$,LE,q$,X$,Y$,Z$,J$,Q$,tA,eA,rA,oA,nA,sA,iA,aA,lA,uA,cA,pA,mA,fA,hA,dA,xA,x$,yA,GE,bA,WE,wA,UE,CA,TA,IA,HE,SA,vA,NA,kA,EA,KE,qE,PE,$A,j$,AA,DA,RA,y$,jE,XE,FA,YE,_A,OA,LA,PA,zA,MA,BA,ZE,VA,GA,WA,UA,KA,qA,jA,JE,XA,YA,QA,QE,t$,t2,e2,r2,e$,o2,i2,a2,ty,l2,b$,o$,u2,c2,p2,m2,zE,uh,f2,w$,C$,T$,h2,d2,g2,x2,y2,b2,w2,l$,C2,I2,S2,v2,c$,N2,k2,E2,p$,ZA,A2,D2,R2,F2,_2,O2,L2,P2,f$,z2,h$,M2,B2,V2,G2,W2,d$,gA,U2,H2,K2,q2,X2,r$,Y2,Z2,J2,n2];for(let r of aj)Ah(r);var Wl={},ey={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Q2(r,t){Wl[r]=t}function ao(r,t){if(!(r in Wl)||t!=null){let o=uj(r,t);if(o!==null)Wl[r]=o;else return console.log("Could not get context for WebGL version",r),null}let e=Wl[r];return e==null||e.isContextLost()?(delete Wl[r],ao(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Wl[r])}function lj(r){if(typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function uj(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??lj(r);return e.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete Wl[r]},!1),z().getBool("SOFTWARE_WEBGL_ENABLED")&&(ey.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",ey)||e.getContext("experimental-webgl",ey):e.getContext("webgl2",ey)}var Pa;(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(Pa||(Pa={}));var xr;(function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"})(xr||(xr={}));var ar;(function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(ar||(ar={}));function Ul(r,t){return[t,r]}function tD(r,t){return r*t}function fh(r){let t=y.sizeFromShape(r),e=Math.ceil(t/4);return y.sizeToSquarishShape(e)}function Bn(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function eD(r,t){let[e,o]=Bn(r,t);return e*o*4}function hh(r,t){let e=r,o,n,s,i,a,l,u,c,p,m;return z().getNumber("WEBGL_VERSION")===2?(o=e.R32F,n=e.R16F,s=e.RGBA16F,i=e.RGBA32F,a=e.RED,u=4,c=1,p=e.HALF_FLOAT,m=e.FLOAT,l=e.RGBA8):(o=r.RGBA,n=r.RGBA,s=r.RGBA,i=e.RGBA,a=r.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,m=r.FLOAT,l=r.RGBA),{internalFormatFloat:o,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function pt(r,t){let e=t();return z().getBool("DEBUG")&&cj(r),e}function cj(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+fj(r,t))}var pj=596e-10,mj=65504;function rD(r){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||pj<Math.abs(r)&&Math.abs(r)<mj)}function fj(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function dh(r,t){return ii(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function oD(r,t){let e=ii(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pt(r,()=>r.shaderSource(e,t)),pt(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function nD(r,t){let e=ii(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pt(r,()=>r.shaderSource(e,t)),pt(r,()=>r.compileShader(e)),z().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw aT(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var hj=/ERROR: [0-9]+:([0-9]+):/g;function aT(r,t){let e=hj.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let o=+e[1],n=r.split(`
`),s=n.length.toString().length+2,i=n.map((p,m)=>y.rightPad((m+1).toString(),s)+p),a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);let l=i.slice(0,o-1),u=i.slice(o-1,o),c=i.slice(o);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${y.rightPad(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function sD(r){return ii(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function iD(r,t){if(pt(r,()=>r.linkProgram(t)),!z().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function oy(r,t){if(pt(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function aD(r,t){let e=ii(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return pt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),pt(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function lD(r,t){let e=ii(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return pt(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),pt(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function uD(r){return ii(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function cD(r,t){let e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let o=`[${r}x${t}]`;throw new Error("Requested texture size "+o+" is invalid.")}if(r>e||t>e){let o=`[${r}x${t}]`,n=`[${e}x${e}]`;throw new Error("Requested texture size "+o+" greater than WebGL maximum on this browser / GPU "+n+".")}}function pD(r){return ii(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function lT(r,t,e,o,n,s,i){let a=r.getAttribLocation(t,e);return a===-1?!1:(pt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,o)),pt(r,()=>r.vertexAttribPointer(a,n,r.FLOAT,!1,s,i)),pt(r,()=>r.enableVertexAttribArray(a)),!0)}function dj(r,t,e){xj(r,e),pt(r,()=>r.activeTexture(r.TEXTURE0+e)),pt(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function mD(r,t,e){return ii(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function fD(r,t,e){return r.getUniformLocation(t,e)}function hD(r,t,e,o){pt(r,()=>dj(r,t,o)),pt(r,()=>r.uniform1i(e,o))}function ny(r,t,e){pt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),pt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function uT(r,t){pt(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),pt(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function gh(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+gj(r,t))}function gj(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ii(r,t,e){let o=pt(r,()=>t());if(o==null)throw new Error(e);return o}function xj(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,o=t+r.TEXTURE0;if(o<r.TEXTURE0||o>e){let n=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${n}.`)}}function za(r,t=2){return y.sizeFromShape(r.slice(0,r.length-t))}function Ma(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function xh(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[za(r),...Ma(r)]),t}function dD(r,t=!1){let e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),o=z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");o===1/0&&z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(o=e/2),t&&(e=e*2,o=o*2,r=r.map((a,l)=>l>=r.length-2?y.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=y.squeezeShape(r).newShape);let n=y.sizeFromShape(r),s=null;r.length<=1&&n<=e?s=[1,n]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let i=s!=null&&Math.max(...s)>o&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let a=za(r),l=2,u=2;r.length&&([l,u]=Ma(r)),n=a*(l/2)*(u/2),s=y.sizeToSquarishShape(n).map(c=>c*2)}else s=y.sizeToSquarishShape(n);return s}function ry(r){return r%2===0}function Hl(r,t){if(r=r.slice(-2),t=t.slice(-2),y.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r.slice(-1)[0],o=t.slice(-1)[0];if(e===o||ry(e)&&ry(o)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&ry(r[0])&&ry(t[0])}var nT,sT;function gD(r){if(nT==null){let t=ao(r);nT=t.getParameter(t.MAX_TEXTURE_SIZE)}return nT}function xD(r){if(sT==null){let t=ao(r);sT=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,sT)}function yD(r){if(r===0)return 0;let t,e=ao(r);return bo(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:bo(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function bo(r,t){return r.getExtension(t)!=null}function cT(r){try{if(ao(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function bD(r){if(r===0)return!1;let t=ao(r);if(r===1){if(!bo(t,"OES_texture_float"))return!1}else if(!bo(t,"EXT_color_buffer_float"))return!1;return iT(t)}function wD(r){if(r===0)return!1;let t=ao(r);if(r===1){if(!bo(t,"OES_texture_float")||!bo(t,"WEBGL_color_buffer_float"))return!1}else{if(bo(t,"EXT_color_buffer_float"))return iT(t);let o="EXT_color_buffer_half_float";if(bo(t,o)){let n=t.getExtension(o);return yj(t,n)}return!1}return iT(t)}function iT(r){let t=hh(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e);let o=1,n=1;r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,o,n,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),i}function yj(r,t){let e=hh(r,t),o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o);let n=1,s=1;r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,n,s,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,o,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),r.deleteFramebuffer(i),a}function CD(r){return r!==2?!1:ao(r).fenceSync!=null}function Vn(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&y.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var bt=z();bt.registerFlag("HAS_WEBGL",()=>bt.getNumber("WEBGL_VERSION")>0);bt.registerFlag("WEBGL_VERSION",()=>cT(2)?2:cT(1)?1:0);bt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);bt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>bt.get("WEBGL_VERSION")===2);bt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);bt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);bt.registerFlag("WEBGL_PACK",()=>bt.getBool("HAS_WEBGL"));bt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_CLIP",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_PACK_REDUCE",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_LAZILY_UNPACK",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_CONV_IM2COL",()=>bt.getBool("WEBGL_PACK"));bt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>gD(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>xD(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=bt.getNumber("WEBGL_VERSION");return r===0?0:yD(r)});bt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>bt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ca.isMobile());bt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>bD(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>bt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:bt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));bt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>wD(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>CD(bt.getNumber("WEBGL_VERSION")));bt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>bt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);bt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});bt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ca.isMobile()?1:-1,r=>{if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});bt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);bt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);bt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);bt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);bt.registerFlag("WEBGL_EXP_CONV",()=>!1);bt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>bt.getBool("IS_TEST"));bt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);bt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);bt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);bt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function we(){let r,t,e,o,n,s,i,a,l,u;return z().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",o="in",n="texture",s="outputColor",i="out vec4 outputColor;",a=z().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",o="varying",n="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:o,texture2D:n,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function un(r,t,e="index"){let o=y.computeStrides(t);return o.map((n,s)=>{let i=`int ${r[s]} = ${e} / ${n}`,a=s===o.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${n}`:`index -= ${r[s]} * ${n}`;return`${i}; ${a};`}).join("")}function Kl(r,t,e="index"){let o=y.computeStrides(t);return o.map((n,s)=>{let i=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,a=s===o.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function bj(r,t){let e=r.length,o=r.map(s=>`${t}[${s}]`),n=new Array(e-1);n[e-2]=o[e-1];for(let s=e-3;s>=0;--s)n[s]=`(${n[s+1]} * ${o[s+1]})`;return n}function TD(r,t,e="index"){let o=r.map((s,i)=>i),n=bj(o,t);return n.map((s,i)=>{let a=`int ${r[i]} = ${e} / ${n[i]}`,l=i===n.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${n[i]}`:`index -= ${r[i]} * ${n[i]}`;return`${a}; ${l};`}).join("")}function Op(r){let t=y.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Lp(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var iy=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:ID}=N;function SD(r,t,e){let o=[];if(r.forEach(f=>{let h=y.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?o.push(`uniform float ${f.name}${h>1?`[${h}]`:""};`):(o.push(`uniform sampler2D ${f.name};`),o.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){let{uniformShape:d}=ay(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(d.length){case 1:o.push(`uniform int ${f.name}Shape;`);break;case 2:o.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:o.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:o.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}o.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:o.push("uniform int outShape;");break;case 2:o.push("uniform ivec2 outShape;"),o.push("uniform int outShapeStrides;");break;case 3:o.push("uniform ivec3 outShape;"),o.push("uniform ivec2 outShapeStrides;");break;case 4:o.push("uniform ivec4 outShape;"),o.push("uniform ivec3 outShapeStrides;");break;default:break}o.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{o.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let n=o.join(`
`),s=r.map(f=>wj(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,a=we(),l=Ij(a),u,c,p=Nj(a);return t.isPacked?(u=Cj(t.logicalShape,i,e.enableShapeUniforms),c=vj(a)):(u=Tj(t.logicalShape,i,e.enableShapeUniforms),c=Sj(a)),e.packedInputs&&(p+=Aj),[p,l,c,n,u,s,e.userCode].join(`
`)}function zp(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return Gj(r,t);case 1:return Uj(r,t);case 2:return Kj(r,t);case 3:return jj(r,t);case 4:return Yj(r,t);case 5:return Zj(r);case 6:return Jj(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function vD(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return Vj(r);case 1:return Wj(r,t);case 2:return Hj(r,t);case 3:return qj(r,t);default:return Xj(r,t)}}function wj(r,t,e=!1,o){let n="";e?n+=vD(r,o):n+=zp(r,o);let s=r.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(e?n+=Qj(r,t):n+=t6(r,t)),n}function Cj(r,t,e){switch(r.length){case 0:return ND();case 1:return Dj(r,t,e);case 2:return Mj(r,t,e);case 3:return Fj(r,t,e);default:return Oj(r,t,e)}}function Tj(r,t,e){switch(r.length){case 0:return ND();case 1:return Rj(r,t,e);case 2:return Bj(r,t,e);case 3:return _j(r,t,e);case 4:return Lj(r,t,e);case 5:return Pj(r,t);case 6:return zj(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function Ij(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function Sj(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function vj(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function Nj(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${kj}
    ${Ej}
    ${$j}
  `}var kj=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ej=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$j=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Aj=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function ND(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Dj(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return o[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${o[1]}.0);
      }
    `:o[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${o[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      return 2 * (resTexRC.x * ${o[1]} + resTexRC.y);
    }
  `}function Rj(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Fj(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[2]/2),s=n*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec3(b, r, c);
    }
  `}function _j(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Kl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let o=un(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec3(r, c, d);
    }
  `}function Oj(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],n=Math.ceil(r[r.length-1]/2),s=n*Math.ceil(r[r.length-2]/2),i=s,a="",l="b, r, c";for(let u=2;u<r.length-1;u++)i*=r[r.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,l=`b${u}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));
      int index = resTexRC.x * ${o[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec${r.length}(${l});
    }
  `}function Lj(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Kl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let o=un(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${o}
      return ivec4(r, c, d, d2);
    }
  `}function Pj(r,t){let e=un(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function zj(r,t){let e=un(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Mj(r,t,e){let o=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${o[0]}, ${o[1]}));
      }
    `;let n=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${o[0]}, ${o[1]}));

      int index = resTexRC.x * ${o[1]} + resTexRC.y;
      int r = 2 * (index / ${n});
      int c = imod(index, ${n}) * 2;

      return ivec2(r, c);
    }
  `}function Bj(r,t,e){return y.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function ql(r){return`offset${r}`}function Vj(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),o=we();return`
    vec4 ${e}() {
      return ${o.texture2D}(${t}, halfCR);
    }
  `}function Gj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${o}() {return ${e};}`;let[n,s]=r.shapeInfo.texShape;if(n===1&&s===1)return`
      float ${o}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=ql(e);if(t)return`
    float ${o}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${o}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function Wj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=r.shapeInfo.texShape,s=we();if(t)return`
    vec4 ${o}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let i=[Math.ceil(n[0]/2),Math.ceil(n[1]/2)];return`
    vec4 ${o}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function Uj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${o}(int index) {
        ${Mp(r)}
      }
    `;let n=r.shapeInfo.texShape,s=n[0],i=n[1];if(i===1&&s===1)return`
      float ${o}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=ql(e);return i===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${o}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${o}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function Hj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],l=we();if(s!=null&&y.arraysEqual(e,s))return t?`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);

        return ${l.texture2D}(${o}, uv);
      }
    `:`
      vec4 ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${o}, uv);
      }
    `;if(t)return`
    vec4 ${n}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(e[1]/2);return`
    vec4 ${n}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${o}, uv);
    }
  `}function Kj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape;if(s!=null&&y.arraysEqual(e,s)){if(t)return`
      float ${n}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${n}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${o}, uv);
    }
  `}let{newShape:i,keptDims:a}=y.squeezeShape(e),l=i;if(l.length<e.length){let m=Bp(r,l),f=["row","col"];return`
      ${zp(m,t)}
      float ${n}(int row, int col) {
        return ${n}(${Vp(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${Mp(r)}
      }
    `;let u=s[0],c=s[1],p=ql(o);return c===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${o}TexShape[0]));
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${o}, uv);
    }
  `:u===1?t?`
      float ${n}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${o}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${o}TexShape[1]), 0.5);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${o}, uv);
    }
  `:t?`
      float ${n}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
        return sampleTexture(${o}, uv);
      }
    `:`
  float ${n}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${o}, uv);
  }
`}function qj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let m=e.slice(1),f=[1,2],h=Bp(r,m),d=["b","row","col"];return`
        ${vD(h,t)}
        vec4 ${n}(int b, int row, int col) {
          return ${n}(${Vp(d,f)});
        }
      `}let a=we();if(t)return`
    vec4 ${n}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `;let l=i[0],u=i[1],c=Math.ceil(e[2]/2),p=c*Math.ceil(e[1]/2);return`
    vec4 ${n}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${o}, uv);
    }
  `}function jj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:l}=y.squeezeShape(e),u=a;if(u.length<e.length){let d=Bp(r,u),g=["row","col","depth"];return`
        ${zp(d,t)}
        float ${n}(int row, int col, int depth) {
          return ${n}(${Vp(g,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${Mp(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],m=c[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return t?`
      float ${n}(int row, int col, int depth) {
        int stride1 = ${o}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
        float ${n}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${o}, uv);
        }
      `;if(m===i&&f==null)return t?`
      float ${n}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${o}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
    float ${n}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${o}, uv);
    }
  `;let h=ql(o);return t?`
    float ${n}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${o}Shape[1] * ${o}Shape[2];
      int stride1 = ${o}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${h};
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index);
      return sampleTexture(${o}, uv);
    }
    `:`
      float ${n}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${h};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${o}, uv);
      }
  `}function Xj(r,t){let e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=we();if(t)return`
    vec4 ${o}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${n.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],p=Math.ceil(s[i-1]/2),m=p*Math.ceil(s[i-2]/2),f="int b, int row, int col",h=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let d=2;d<i-1;d++)f=`int b${d}, `+f,m*=s[i-d-1],h=`b${d} * ${m} + `+h;return`
    vec4 ${o}(${f}) {
      int index = ${h};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${n.texture2D}(${e}, uv);
    }
  `}function Yj(r,t){let e=r.shapeInfo.logicalShape,o=r.name,n="get"+o.charAt(0).toUpperCase()+o.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:l,keptDims:u}=y.squeezeShape(e);if(l.length<e.length){let b=Bp(r,l),w=["row","col","depth","depth2"];return`
      ${zp(b,t)}
      float ${n}(int row, int col, int depth, int depth2) {
        return ${n}(${Vp(w,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${Mp(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1],h=`int stride2 = ${o}Shape[3];`,d=`int stride1 = ${o}Shape[2] * stride2;`,g=`int stride0 = ${o}Shape[1] * stride1;`;if(f===a&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        ${h}
        ${d}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;if(f===s&&c==null)return t?`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${o}Shape[1] * ${o}Shape[2], ${o}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${o}TexShape[1], ${o}TexShape[0]);
        return sampleTexture(${o}, uv);
      }
    `:`
      float ${n}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${o}, uv);
      }
    `;let x=ql(o);return t?`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${h}
      ${d}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${x});
      return sampleTexture(${o}, uv);
    }
  `:`
    float ${n}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${o}, uv);
    }
  `}function Zj(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),n=t[4],s=t[3]*n,i=t[2]*s,a=t[1]*i,{newShape:l,keptDims:u}=y.squeezeShape(t);if(l.length<t.length){let d=Bp(r,l),g=["row","col","depth","depth2","depth3"];return`
      ${zp(d)}
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        return ${o}(${Vp(g,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${n})) +
          depth3;
        ${Mp(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===a&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${n}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===n&&c==null)return`
      float ${o}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let h=ql(e);return`
    float ${o}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${n} + depth3 + ${h};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Jj(r){let t=r.shapeInfo.logicalShape,e=r.name,o="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:n,keptDims:s}=y.squeezeShape(t);if(n.length<t.length){let g=Bp(r,n),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${zp(g)}
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${o}(${Vp(x,s)});
      }
    `}let i=t[5],a=t[4]*i,l=t[3]*a,u=t[2]*l,c=t[1]*u;if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${Mp(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],h=m[1];if(h===c&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(h===i&&p==null)return`
      float ${o}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;let d=ql(e);return`
    float ${o}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${d};
      vec2 uv = uvFromFlat(${f}, ${h}, index);
      return sampleTexture(${e}, uv);
    }
  `}function Mp(r){let t=r.name,e=y.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Qj(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=t.logicalShape.length,a=ID(r.shapeInfo.logicalShape,t.logicalShape),l=Rt(i),u=i-s,c,p=["x","y","z","w","u","v"];s===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(b=>`coords.${p[b+u]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((b,w)=>`coords.${p[w+u]}`).join(", ");let f="return outputValue;",d=y.sizeFromShape(r.shapeInfo.logicalShape)===1,x=y.sizeFromShape(t.logicalShape)===1;if(s===1&&!d&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(d&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let b=s-2,w=s-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?f="return vec4(outputValue.x);":a.indexOf(b)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${n}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${o}(${m});
      ${f}
    }
  `}function t6(r,t){let e=r.name,o=e.charAt(0).toUpperCase()+e.slice(1),n="get"+o+"AtOutCoords",s=t.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&y.arraysEqual(i,s))return`
      float ${n}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let u=Rt(l),c=ID(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,m,f=["x","y","z","w","u","v"];a===0?m="":l<2&&c.length>=1?m="coords = 0;":m=c.map(d=>`coords.${f[d+p]} = 0;`).join(`
`);let h="";return l<2&&a>0?h="coords":h=r.shapeInfo.logicalShape.map((d,g)=>`coords.${f[g+p]}`).join(", "),`
    float ${n}() {
      ${u} coords = getOutputCoords();
      ${m}
      return get${o}(${h});
    }
  `}function Rt(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function ay(r,t,e){let{newShape:o,keptDims:n}=y.squeezeShape(t),s=t.length,i=r&&s===3&&t[0]===1,a=i?t.slice(1):o,l=!r&&s>1&&!y.arraysEqual(t,e)&&o.length<s||i;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:n}}function Bp(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Vp(r,t){return t.map(e=>r[e]).join(", ")}function ED(r,t,e,o){let n=e.map((c,p)=>{let m={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(m.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),s=n.map(c=>c.shapeInfo),i={logicalShape:o.shape,texShape:o.texData.texShape,isUniform:!1,isPacked:o.texData.isPacked,flatOffset:null},a=SD(n,i,t),l=nD(r.gl,a),u=r.createProgram(l);return z().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},pT(r,t,u))}function pT(r,t,e){let o={},n={},s={},i=[],a,l,u,c=null,p=null;p=r.getUniformLocation(e,"NAN",!1),z().getNumber("WEBGL_VERSION")===1&&(c=r.getUniformLocation(e,"INFINITY",!1));let m=!1;for(let f=0;f<t.variableNames.length;f++){let h=t.variableNames[f];o[h]=r.getUniformLocation(e,h,m),o[`offset${h}`]=r.getUniformLocation(e,`offset${h}`,m),t.enableShapeUniforms&&(n[`${h}Shape`]=r.getUniformLocation(e,`${h}Shape`,m),s[`${h}TexShape`]=r.getUniformLocation(e,`${h}TexShape`,m))}return t.enableShapeUniforms&&(a=r.getUniformLocation(e,"outShape",m),u=r.getUniformLocation(e,"outShapeStrides",m),l=r.getUniformLocation(e,"outTexShape",m)),t.customUniforms&&t.customUniforms.forEach((f,h)=>{i[h]=r.getUniformLocation(e,f.name,m)}),{uniformLocations:o,customUniformLocations:i,infLoc:c,nanLoc:p,inShapesLocations:n,inTexShapesLocations:s,outShapeLocation:a,outShapeStridesLocation:u,outTexShapeLocation:l}}function kD(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,o)=>{let n=e.logicalShape,s=t[o],i=s.shape;if(!y.arraysEqual(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(e.isUniform&&s.isUniform)return;let a=e.texShape,l=s.isUniform?null:s.texData.texShape;if(!y.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function $D(r,t,e,o,n){t.program.enableShapeUniforms||(kD(t.inShapeInfos,e),kD([t.outShapeInfo],[o]));let s=o.texData.texture,i=o.texData.texShape;o.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(t.webGLProgram),z().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN),e.forEach((l,u)=>{let c=t.program.variableNames[u],p=t.uniformLocations[c],m=t.uniformLocations[`offset${c}`],f=t.inShapesLocations[`${c}Shape`],h=t.inTexShapesLocations[`${c}TexShape`];if(f){let{uniformShape:d}=ay(t.program.packedInputs,l.shape,l.texData.texShape);switch(d.length){case 1:r.gl.uniform1iv(f,new Int32Array(d));break;case 2:r.gl.uniform2iv(f,new Int32Array(d));break;case 3:r.gl.uniform3iv(f,new Int32Array(d));break;case 4:r.gl.uniform4iv(f,new Int32Array(d));break;default:break}}if(h&&r.gl.uniform2i(h,l.texData.texShape[0],l.texData.texShape[1]),p!=null){if(l.isUniform){if(y.sizeFromShape(l.shape)<2)r.gl.uniform1f(p,l.uniformValues[0]);else{let d=l.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),r.gl.uniform1fv(p,d)}return}l.texData.slice!=null&&m!=null&&r.gl.uniform1i(m,l.texData.slice.flatOffset),r.setInputMatrixTexture(l.texData.texture.texture,p,u)}});let a=t.outShapeLocation;if(a)switch(o.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(o.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(o.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(o.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(o.shape));break;default:break}if(t.outShapeStridesLocation){let l=y.computeStrides(o.shape);switch(o.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,o.texData.texShape[0],o.texData.texShape[1]),t.program.customUniforms&&n&&t.program.customUniforms.forEach((l,u)=>{let c=t.customUniformLocations[u],p=n[u];if(l.type==="float")r.gl.uniform1fv(c,p);else if(l.type==="vec2")r.gl.uniform2fv(c,p);else if(l.type==="vec3")r.gl.uniform3fv(c,p);else if(l.type==="vec4")r.gl.uniform4fv(c,p);else if(l.type==="int")r.gl.uniform1iv(c,p);else if(l.type==="ivec2")r.gl.uniform2iv(c,p);else if(l.type==="ivec3")r.gl.uniform3iv(c,p);else if(l.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${l.type} is not supported yet.`)}),r.executeProgram()}function AD(r,t,e){let o="";t.concat(e).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=ay(r.packedInputs,i.shape,l),m="",f="",h="";if(c.length===1&&r.packedInputs){let v=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];m=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!r.packedInputs)f=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let v=y.computeStrides(c);h=`${v[0]===l[1]}_${v[v.length-1]===l[1]}`}let d=i.shape.length,g=c.length===2&&y.arraysEqual(i.shape,l),x=y.sizeFromShape(i.shape)===1,b=N.getBroadcastDims(i.shape,e.shape),w=!r.packedInputs&&d===e.shape.length&&y.arraysEqual(l,e.texData.texShape),C=r.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;o+=`${d}_${w}_${u?p:""}_${c.length}_${x}_${b}_${g}_${m}_${f}_${h}_${C}_${a}`}else{let l=i.isUniform?"uniform":i.texData.texShape;o+=`${i.shape}_${l}_${a}`}});let n=r.userCode,s=r.constructor.name;return s+="_"+o+"_"+n+`${z().getNumber("WEBGL_VERSION")}`,s}function Jt(r){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var ly=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Pa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=we();this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Kl(["r","c","d"],t):un(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var uy=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Pa.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=we();this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Kl(["r","c","d"],t):un(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var cy=class{constructor(t){this.variableNames=["A"],this.outTexUsage=xr.DOWNLOAD;let e=we();this.outputShape=t,this.userCode=`
      ${iy}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var py=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=xr.DOWNLOAD;let e=we();this.outputShape=t,this.userCode=`
      ${iy}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var o6={R:0,G:1,B:2,A:3},yh=class{constructor(t,e=!1,o="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=we();this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<o.length;a++){let l=o[a];i+=`
          if(offset == ${a}) {
            result = values[${o6[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Lp():Op(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${o.length});

        flatIndex = idiv(flatIndex, ${o.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${i}
        }
        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var my=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=we();this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length);let n="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let l=i*2+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${o.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Lp():Op(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${o.output} = ${s};
        }
    `}};function DD(r){let t=we(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return oD(r,e)}function RD(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return aD(r,t)}function FD(r){let t=new Uint16Array([0,1,2,2,1,3]);return lD(r,t)}function bh(r,t,e,o,n,s){cD(t,e);let i=uD(r),a=r.TEXTURE_2D;return pt(r,()=>r.bindTexture(a,i)),pt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),pt(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),pt(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),pt(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),z().getNumber("WEBGL_VERSION")===1?pt(r,()=>r.texImage2D(a,0,o,t,e,0,n,s,null)):pt(r,()=>r.texStorage2D(a,1,o,t,e)),pt(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function mT(r){return r.internalFormatFloat}function _D(r,t,e,o){let[n,s]=Ul(t,e);return bh(r,n,s,mT(o),o.textureFormatFloat,r.FLOAT)}function fT(r){return r.internalFormatHalfFloat}function OD(r,t,e,o){let[n,s]=Ul(t,e);return bh(r,n,s,fT(o),o.textureFormatFloat,o.textureTypeHalfFloat)}function hT(r){return r.downloadTextureFormat}function LD(r,t,e,o){let[n,s]=Ul(t,e);return bh(r,n,s,hT(o),r.RGBA,r.UNSIGNED_BYTE)}function dT(r){return r.internalFormatPackedFloat}function PD(r,t,e,o){let[n,s]=Bn(t,e);return bh(r,n,s,dT(o),r.RGBA,r.FLOAT)}function gT(r){return r.internalFormatPackedHalfFloat}function zD(r,t,e,o){let[n,s]=Bn(t,e);return bh(r,n,s,gT(o),r.RGBA,o.textureTypeHalfFloat)}function MD(r,t,e){return pt(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),lT(r,t,"clipSpacePos",e,3,20,0)&&lT(r,t,"uv",e,2,20,12)}function BD(r,t,e,o,n,s){pt(r,()=>r.bindTexture(r.TEXTURE_2D,t));let i,a,l;n instanceof Uint8Array?(i=new Uint8Array(e*o*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(i=new Float32Array(e*o*4),a=r.FLOAT,l=s.internalFormatPackedFloat),i.set(n),z().getNumber("WEBGL_VERSION")===2?pt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,o,r.RGBA,a,i)):pt(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,o,0,r.RGBA,a,i)),pt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function VD(r,t,e){pt(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?z().getNumber("WEBGL_VERSION")===2?pt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):pt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):z().getNumber("WEBGL_VERSION")===2?pt(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):pt(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),pt(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function GD(r,t,e,o){let n=r.createBuffer();pt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,n));let a=4*4*t*e;return pt(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),pt(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),pt(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),n}function WD(r,t,e){let o=r,n=new Float32Array(e);return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,n),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),n}function UD(r,t,e,o){let[n,s]=Ul(t,e),i=4,a=new Uint8Array(tD(t*e,i));return pt(r,()=>r.readPixels(0,0,n,s,o.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function HD(r,t,e,o,n,s,i,a){let l=r,u=new Float32Array(eD(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function KD(r,t,e){let o=new Float32Array(t*e*4);return pt(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,o)),o}var Gp=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=z().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,Q2(e,t)):this.gl=ao(e),t=this.gl,z().getNumber("WEBGL_VERSION")===2){let s=t;this.createVertexArray=()=>pt(s,()=>s.createVertexArray()),this.bindVertexArray=i=>pt(s,()=>s.bindVertexArray(i)),this.deleteVertexArray=i=>pt(s,()=>s.deleteVertexArray(i)),this.getVertexArray=()=>pt(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(t!=null){let s=t.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pt(t,()=>s.createVertexArrayOES()),this.bindVertexArray=i=>pt(t,()=>s.bindVertexArrayOES(i)),this.deleteVertexArray=i=>pt(t,()=>s.deleteVertexArrayOES(i)),this.getVertexArray=()=>pt(t,()=>t.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let o="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),z().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=dh(this.gl,s),bo(this.gl,i))this.textureHalfFloatExtension=dh(this.gl,i);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(o),bo(this.gl,n))this.colorBufferHalfFloatExtension=dh(this.gl,n);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(o="EXT_color_buffer_float",bo(this.gl,o))this.colorBufferFloatExtension=this.gl.getExtension(o);else if(bo(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=RD(this.gl),this.indexBuffer=FD(this.gl),this.framebuffer=pD(this.gl),this.textureConfig=hh(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;pt(t,()=>t.finish()),pt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),pt(t,()=>t.deleteFramebuffer(this.framebuffer)),pt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),pt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),pt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),_D(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),OD(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),LD(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),VD(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,o,n){this.throwIfDisposed(),BD(this.gl,t,e,o,n,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),zD(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),PD(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(uT(this.gl,this.framebuffer),this.outputTexture=null),pt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,o){return this.downloadMatrixDriver(t,()=>UD(this.gl,e,o,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,o,n,s,i){return HD(this.gl,t,e,o,n,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return WD(this.gl,t,e)}createBufferFromTexture(t,e,o){this.bindTextureToFrameBuffer(t);let n=GD(this.gl,e,o,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,o;if(z().getBool("WEBGL_FENCE_API_ENABLED")){let n=t,s=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),o=()=>{let i=n.clientWaitSync(s,0,0);return i===n.ALREADY_SIGNALED||i===n.CONDITION_SATISFIED},e=s}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),o=()=>this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):o=()=>!0;return{query:e,isFencePassed:o}}downloadMatrixFromPackedTexture(t,e,o){return this.downloadMatrixDriver(t,()=>KD(this.gl,e,o))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=DD(e));let o=sD(e);pt(e,()=>e.attachShader(o,this.vertexShader)),pt(e,()=>e.attachShader(o,t)),iD(e,o);let n;return n=Object.assign(o,{vao:this.createVertexArray()}),this.bindVertexArray(n.vao),pt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(MD(e,n,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&oy(e,n),this.setProgram(n),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(pt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&oy(this.gl,this.program)),pt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,o=!0){return this.throwIfDisposed(),o?mD(this.gl,t,e):fD(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),pt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,o){this.throwIfDisposed(),this.throwIfNoProgram(),hD(this.gl,t,e,o)}setOutputMatrixTexture(t,e,o){this.setOutputMatrixTextureDriver(t,o,e)}setOutputPackedMatrixTexture(t,e,o){this.throwIfDisposed();let[n,s]=Bn(e,o);this.setOutputMatrixTextureDriver(t,n,s)}setOutputMatrixWriteRegion(t,e,o,n){this.setOutputMatrixWriteRegionDriver(o,t,n,e)}setOutputPackedMatrixWriteRegion(t,e,o,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&oy(this.gl,this.program),gh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=dh(this.gl,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.createQuery();return o.beginQuery(n.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,o=this.getQueryTimerExtensionWebGL2();e.endQuery(o.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await y.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){let o=this.gl;return o.getQueryParameter(t,o.QUERY_RESULT)/1e6}else{let o=this.getQueryTimerExtensionWebGL1();return o.getQueryObjectEXT(t,o.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let o=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=o.getQueryParameter(t,o.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let o=this.getQueryTimerExtensionWebGL1(),n=o.getQueryObjectEXT(t,o.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=s6(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:o}=this.itemsToPoll[e];o()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let o;"setTimeoutCustom"in z().platform&&(o=z().platform.setTimeoutCustom.bind(z().platform)),y.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,o)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),ny(this.gl,t,this.framebuffer),this.debug&&gh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ny(this.gl,this.outputTexture,this.framebuffer),this.debug&&gh(this.gl)):uT(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let o=e();return this.unbindTextureToFrameBuffer(),o}setOutputMatrixTextureDriver(t,e,o){this.throwIfDisposed();let n=this.gl;ny(n,t,this.framebuffer),this.debug&&gh(n),this.outputTexture=t,pt(n,()=>n.viewport(0,0,e,o)),pt(n,()=>n.scissor(0,0,e,o))}setOutputMatrixWriteRegionDriver(t,e,o,n){this.throwIfDisposed(),pt(this.gl,()=>this.gl.scissor(t,e,o,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function s6(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:qD,bincountImpl:fy,bincountReduceImpl:jD,castImpl:XD,ceilImpl:YD,concatImpl:ZD,equalImpl:JD,expImpl:QD,expm1Impl:tR,floorImpl:eR,gatherNdImpl:rR,gatherV2Impl:oR,greaterImpl:nR,greaterEqualImpl:sR,lessImpl:iR,lessEqualImpl:aR,linSpaceImpl:lR,logImpl:uR,maxImpl:cR,maximumImpl:pR,minimumImpl:mR,multiplyImpl:fR,negImpl:hR,notEqualImpl:dR,prodImpl:gR,raggedGatherImpl:xR,raggedRangeImpl:yR,raggedTensorToTensorImpl:bR,rangeImpl:wR,rsqrtImpl:CR,scatterImpl:TR,sigmoidImpl:IR,simpleAbsImpl:hy,sliceImpl:SR,sparseFillEmptyRowsImpl:vR,sparseReshapeImpl:NR,sparseSegmentReductionImpl:dy,sqrtImpl:kR,stridedSliceImpl:ER,stringNGramsImpl:$R,stringSplitImpl:AR,stringToHashBucketFastImpl:DR,subImpl:RR,tileImpl:FR,topKImpl:_R,transposeImpl:jl,uniqueImpl:OR}=UC;function xT(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function Ae(r,t){return t===1?[r]:xT(r,t)}function LR(r,t){if(r===1)return"rc";let e="";for(let o=0;o<r;o++)e+=t[o],o<r-1&&(e+=",");return e}var gy=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Jt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Ae("rc",this.rank),o=Rt(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let o=0;o<=1;o++)for(let n=0;n<=1;n++){let s=`${o===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${t[t.length-1-i]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let o=this.rank-2;o<this.rank;o++)e+=`${t[o]} >= ${this.enableShapeUniforms?`outShape[${o}]`:this.outputShape[o]}`,o<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),o=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${o};
      bool rEdge = rp1 >= ${n};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Wp=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length);let o="";for(let n=0;n<4;n++){let s="thisRC = rc;";n%2===1&&(s+="thisRC.z += 1;"),n>1&&(s+="thisRC.y += 1;"),o+=`
        ${s}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${i6(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Lp():Op(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${o}

        setOutput(result);
      }
    `}};function i6(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?TD(["r","c","d"],"inputShape"):un(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var xy=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,o){let n=zR(e,o),s=MR(t,n,o);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=PR(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,o);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let l=this.freeTextures[s].shift();return this.usedTextures[s].push(l),l}let a;return n===ar.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):n===ar.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):n===ar.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):n===ar.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):n===ar.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,o,n){if(this.freeTextures==null)return;let s=zR(o,n),i=MR(e,s,n);i in this.freeTextures||(this.freeTextures[i]=[]);let a=PR(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n),l=z().get("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let u=this.usedTextures[i],c=u.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function a6(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function PR(r,t,e,o,n){let s=l6(t,o),i;if(n){let[l,u]=Bn(r[0],r[1]);i=l*u}else{let[l,u]=Ul(r[0],r[1]);i=l*u}let a=a6(e,s);return i*a}function l6(r,t){switch(r){case ar.PACKED_2X2_FLOAT32:return dT(t);case ar.PACKED_2X2_FLOAT16:return gT(t);case ar.UNPACKED_FLOAT32:return mT(t);case ar.UNPACKED_FLOAT16:return fT(t);case ar.PACKED_4X1_UNSIGNED_BYTE:return hT(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function u6(r){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?ar.PACKED_2X2_FLOAT32:ar.UNPACKED_FLOAT32:r?ar.PACKED_2X2_FLOAT16:ar.UNPACKED_FLOAT16}function zR(r,t){if(r===xr.UPLOAD)return ar.PACKED_2X2_FLOAT32;if(r===xr.RENDER||r==null)return u6(t);if(r===xr.DOWNLOAD||r===xr.PIXELS)return ar.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function MR(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var lr=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},We="if (isnan(x)) return x;",BR="return x;",yT="return abs(x);";var VR="return (x >= 0.0) ? x : (exp(x) - 1.0);",GR=We+`
  return (x < 0.0) ? 0.0 : x;
`,WR=We+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Gn="return x;",UR="return 1.0 / (1.0 + exp(-1.0 * x));";var KR="return x;",qR=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,jR=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XR=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,YR="return 1.0 / (1.0 + exp(-1.0 * x));",Xr=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var yy=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length);let e=t.length,o=Ae("rc",e),n=Rt(e),s=LR(e,o),i=o.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var p6=hr.whereImpl,m6=1e-7,f6=1e-4,by={};function h6(r){return r in by||(by[r]={}),by[r]}var d6=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),g6=600;function x6(){return z().global.screen==null?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*g6/1024/1024}var Xl=class extends qn{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Gp)e=t;else{let o=ao(z().getNumber("WEBGL_VERSION"),t);e=new Gp(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=ao(z().getNumber("WEBGL_VERSION"));e=new Gp(o),this.binaryCache=h6(z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xy(this.gpgpu),this.numMBBeforeWarning=x6(),this.texData=new Wa(this,Vr())}nextDataId(){return Xl.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,o,n,s,i){let a=this.makeTensorInfo(e,o),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[n,s]},l.texShape=[n,s];let u=xh(e),c=new yh(u,!1,i),p=this.runWebGLProgram(c,[a],o,[[n,s]]);return p.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(a),p.dataId}write(t,e,o){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(t),o==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:e,dtype:o,values:t,usage:xr.UPLOAD,refCount:1}),n}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){let e=this.texData.get(t);e.refCount--}}move(t,e,o,n,s){if(z().getBool("DEBUG")&&this.checkNumericalProblems(e),n==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:o,dtype:n,values:e,usage:xr.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let e=this.texData.get(t),{values:o,dtype:n,complexTensorInfos:s,slice:i,shape:a,isPacked:l}=e;if(i!=null){let m;l?m=new Xr(a,Gn):m=new lr(a,Gn);let f=this.runWebGLProgram(m,[{dataId:t,shape:a,dtype:n}],n),h=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),h}if(o!=null)return this.convertAndCacheOnCPU(t);if(n==="string")return o;let u=this.activeTimers!=null,c;u&&(c=y.now());let p;if(n==="complex64"){let m=this.readSync(s.real.dataId),f=this.readSync(s.imag.dataId);p=N.mergeRealAndImagArrays(m,f)}else p=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=y.now()-c),this.convertAndCacheOnCPU(t,p)}async read(t){if(this.pendingRead.has(t)){let h=this.pendingRead.get(t);return new Promise(d=>h.push(d))}let e=this.texData.get(t),{values:o,shape:n,slice:s,dtype:i,complexTensorInfos:a,isPacked:l}=e;if(s!=null){let h;l?h=new Xr(n,Gn):h=new lr(n,Gn);let d=this.runWebGLProgram(h,[{dataId:t,shape:n,dtype:i}],i),g=this.read(d.dataId);return this.disposeIntermediateTensorInfo(d),g}if(o!=null)return this.convertAndCacheOnCPU(t);if(z().getBool("DEBUG")&&!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,c;if(i!=="complex64"&&z().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);let h=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(h.texture.texture,...fh(n))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){let h=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),d=h[0],g=h[1];p=N.mergeRealAndImagArrays(d,g)}else if(u==null)p=this.getValuesFromTexture(t);else{let h=y.sizeFromShape(n);p=this.gpgpu.downloadFloat32MatrixFromBuffer(u,h)}if(c!=null&&this.disposeIntermediateTensorInfo(c),u!=null){let h=this.gpgpu.gl;pt(h,()=>h.deleteBuffer(u))}let m=this.convertAndCacheOnCPU(t,p),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach(h=>h(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Vr().removeDataId(t,this),this.pendingDeletes--),m}readToGPU(t,e={}){let o=this.texData.get(t),{values:n,shape:s,slice:i,dtype:a,isPacked:l,texture:u}=o;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let f;l?f=new Xr(s,Gn):f=new lr(s,Gn);let h=this.runWebGLProgram(f,[{dataId:t,shape:s,dtype:a}],a),d=this.readToGPU(h,e);return this.disposeIntermediateTensorInfo(h),d}if(u==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let c=this.decode(t,e.customTexShape),p=Vr().makeTensorFromTensorInfo(c),m=this.texData.get(c.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){let e=this.readSync(t.dataId);if(t.dtype==="string")try{let o=e.map(n=>y.decodeString(n));return mt(t.shape,t.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return mt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){let o=t[e];if(!rD(o))throw z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:e,dtype:o,isPacked:n}=this.texData.get(t),s=y.sizeFromShape(e);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let m=this.decode(t),f=this.texData.get(m.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...fh(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(m),h}let i=z().getBool("WEBGL_PACK")&&n===!0,a=i?xh(e):e,l=i?new py(a):new cy(a),u=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:t}],"float32"),c=this.texData.get(u.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),p}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let e=this.activeTimers,o=[],n=!1;this.programTimersStack==null?(this.programTimersStack=o,n=!0):this.activeTimers.push(o),this.activeTimers=o,t();let s=y.flatten(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=y.flatten(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,n&&(this.programTimersStack=null);let a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let l=await Promise.all(s);a.kernelMs=y.sum(l),a.getExtraProfileInfo=()=>l.map((u,c)=>({name:i[c],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(t){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=y.now(),t)}async getQueryTime(t){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:o}=this.texData.get(t);return o!=null&&(this.disposeData(o.real.dataId,e),this.disposeData(o.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:e,dtype:o,texShape:n,usage:s,isPacked:i,slice:a}=this.texData.get(t),l=a&&a.origDataId||t,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(n,o),this.textureManager.releaseTexture(e,n,s,i)));let c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=d6){return z().getBool("WEBGL_CPU_FORWARD")&&t.every(o=>this.texData.get(o.dataId).texture==null&&y.sizeFromShape(o.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let e=t.dataSync();return p6(t.shape,e)}packedUnaryOp(t,e,o){let n=new Xr(t.shape,e),s=this.compileAndRun(n,[t],o);return Vr().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let n=hy(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,n)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,yT,t.dtype);let e=new lr(t.shape,yT),o=this.compileAndRun(e,[t]);return Vr().makeTensorFromTensorInfo(o)}makeTensorInfo(t,e,o){let n;if(e==="string"&&o!=null&&o.length>0&&y.isString(o[0])){let s=o.map(i=>y.encodeString(i));n=this.write(s,t,e)}else n=this.write(o,t,e);return this.texData.get(n).usage=null,{dataId:n,shape:t,dtype:e}}makeOutput(t,e,o){return Vr().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,o),this)}unpackTensor(t){let e=new yy(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){let e=new gy(t.shape),o=!0;return this.runWebGLProgram(e,[t],t.dtype,null,o)}packedReshape(t,e){let o=[za(t.shape),...Ma(t.shape)],n={dtype:t.dtype,shape:o,dataId:t.dataId},s=[za(e),...Ma(e)],i=new Wp(s,o),a=!0,l=[o],u=this.runWebGLProgram(i,[n],t.dtype,l,a);return{dataId:u.dataId,shape:e,dtype:u.dtype}}decode(t,e){let o=this.texData.get(t),{isPacked:n,shape:s,dtype:i}=o;if(e!=null){let m=y.sizeFromShape(s),f=e[0]*e[1]*4;y.assert(m<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let a=xh(s),l;n?l=new uy(a):l=new ly(a);let u=!0,c=[e??fh(a)],p=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:t}],i,c,u,e);return{dtype:i,shape:s,dataId:p.dataId}}runWebGLProgram(t,e,o,n,s=!1,i){let a=this.makeTensorInfo(t.outputShape,o),l=this.texData.get(a.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===Pa.DENSE){let x=i??fh(t.outputShape);l.texShape=x.map(b=>b*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),y.sizeFromShape(a.shape)===0)return l.values=y.getTypedArrayFromDType(a.dtype,0),a;let u=[],c=e.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!t.packedInputs&&y.sizeFromShape(x.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!t.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),u.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!Hl(b.shape,x.shape)){let w=x,C=x.shape;x.shape=b.shape,x=this.packedReshape(x,C),u.push(x),b=this.texData.get(x.dataId),w.shape=C}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);let p={shape:a.shape,texData:l,isUniform:!1},m=AD(t,c,p),f=this.getAndSaveBinary(m,()=>ED(this.gpgpu,t,c,p)),h=this.activeTimers!=null,d;h&&(d=this.startTimer()),z().get("ENGINE_COMPILE_ONLY")||$D(this.gpgpu,f,c,p,n),u.forEach(x=>this.disposeIntermediateTensorInfo(x)),h&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));let g=z().get("WEBGL_FLUSH_THRESHOLD");if(g>0){let x=y.now();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&s===!1){let x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,e,o,n,s=!1){return o=o||e[0].dtype,this.runWebGLProgram(t,e,o,n,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=M(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=z().getBool("DEBUG");z().set("DEBUG",!1);let e=this.abs(nt(1e-8)).dataSync()[0];if(z().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?m6:f6}uploadToGPU(t){let e=this.texData.get(t),{shape:o,dtype:n,values:s,texture:i,usage:a,isPacked:l}=e;if(i!=null)return;let u=this.activeTimers!=null,c;u&&(c=y.now());let p=e.texShape;if(p==null&&(p=dD(o,l),e.texShape=p),s!=null){let m=xh(o),f,h=p[1],d=p[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(l||!g)&&([h,d]=Bn(p[0],p[1])),l?f=new my(m,g):f=new yh(m,g);let x=g?[d,h]:p,b=this.makeTensorInfo(x,n),w=this.texData.get(b.dataId);g?w.usage=xr.PIXELS:w.usage=xr.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,d,s);let C=[[d,h]],v=!0,$=this.runWebGLProgram(f,[b],n,C,v),R=this.texData.get($.dataId);e.texShape=R.texShape,e.isPacked=R.isPacked,e.usage=R.usage,z().get("ENGINE_COMPILE_ONLY")?this.disposeData($.dataId):(e.texture=R.texture,e.values=null,this.texData.delete($.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=y.now()-c)}else{let m=this.acquireTexture(p,a,n,l);e.texture=m}}convertAndCacheOnCPU(t,e){let o=this.texData.get(t),{dtype:n}=o;return e!=null&&(o.values=y6(e,n)),o.values}acquireTexture(t,e,o,n){if(this.numBytesInGPU+=this.computeBytes(t,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,n)}computeBytes(t,e){return t[0]*t[1]*y.bytesPerElement(e)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(let[,e]of Object.entries(this.binaryCache)){let o=new Promise(n=>{try{this.checkCompletion_(e),n(!0)}catch(s){throw s}});t.push(o)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Nm(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(aT(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,t]of Object.entries(this.binaryCache)){let{uniformLocations:e,customUniformLocations:o,infLoc:n,nanLoc:s,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:l,outShapeStridesLocation:u,outTexShapeLocation:c}=pT(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=o,t.infLoc=n,t.nanLoc=s,t.inShapesLocations=i,t.inTexShapesLocations=a,t.outShapeLocation=l,t.outShapeStridesLocation=u,t.outTexShapeLocation=c}}createTensorFromGPUData(t,e,o){t.channels=t.channels||"RGBA";let{texture:n,height:s,width:i,channels:a}=t,l=Vr().backend;if(!l.gpgpu.gl.isTexture(n))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let u=l.writeTexture(n,e,o,s,i,a);return Vr().makeTensorFromDataId(u,e,o,l)}};Xl.nextDataId=0;function y6(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let o=0;o<e.length;++o)e[o]=Math.round(r[o]);return e}else throw new Error(`Unknown dtype ${t}`)}ca.isBrowser()&&Hh("webgl",()=>new Xl,2);var Up=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var wo=class{constructor(t,e,o){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(e,o),this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var Wn=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Uo=class{constructor(t,e,o,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(e,o);let s=this.outputShape.length;this.enableShapeUniforms=Jt(s);let i="";if(n)if(s===0||y.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Rt(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Ae("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function De(r){let{inputs:t,backend:e}=r,{x:o}=t;return e.incRef(o.dataId),{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}var ZR={kernelName:hn,backendName:"webgl",kernelFunc:De};function Yr(r){let{inputs:t,backend:e}=r,{real:o,imag:n}=t,s=e.makeTensorInfo(o.shape,"complex64"),i=e.texData.get(s.dataId),a=De({inputs:{x:o},backend:e}),l=De({inputs:{x:n},backend:e});return i.complexTensorInfos={real:a,imag:l},s}var JR={kernelName:hu,backendName:"webgl",kernelFunc:Yr};var bT="return (a < 0.) ? b * a : a;",wT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function b6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{alpha:s}=o,i=e.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Uo(wT,n.shape,i.shape):new wo(bT,n.shape,i.shape),l=e.runWebGLProgram(a,[n,i],"float32");return e.disposeIntermediateTensorInfo(i),l}var QR={kernelName:Fi,backendName:"webgl",kernelFunc:b6};var CT="return (a < 0.) ? b * a : a;",TT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function w6(r){let{inputs:t,backend:e}=r,{x:o,alpha:n}=t,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Uo(TT,o.shape,n.shape):new wo(CT,o.shape,n.shape);return e.runWebGLProgram(s,[o,n],"float32")}var tF={kernelName:Ki,backendName:"webgl",kernelFunc:w6};var Ho="if (isnan(x)) return x;";function ht({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:o}){return({inputs:n,backend:s})=>{let{x:i}=n,a=s,l=o||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){let p=a.texData.get(i.dataId),m=e(p.values,l);return a.makeTensorInfo(i.shape,l,m)}let u=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Xr(i.shape,t):c=new lr(i.shape,r),a.runWebGLProgram(c,[i],l)}}function Wt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:o=!1,cpuKernelImpl:n,dtype:s}){return({inputs:i,backend:a})=>{let{a:l,b:u}=i,c=a;if(o&&l.dtype==="complex64"){let h=c.texData.get(l.dataId),d=c.texData.get(u.dataId),[g,x]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(w=>{let[C,v]=w,$={dataId:C.dataId,dtype:C.dtype,shape:l.shape},R={dataId:v.dataId,dtype:v.dtype,shape:u.shape},F=new wo(r,l.shape,u.shape);return c.runWebGLProgram(F,[$,R],Le(C.dtype,v.dtype))}),b=Yr({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),b}let p=s||Le(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&n!=null){let h=c.texData.get(l.dataId).values,d=c.texData.get(u.dataId).values,g=l.dtype==="string"?N.fromUint8ToStringArray(h):h,x=l.dtype==="string"?N.fromUint8ToStringArray(d):d,[b,w]=n(l.shape,u.shape,g,x,p),C=c.makeTensorInfo(w,p),v=c.texData.get(C.dataId);return v.values=b,C}let m=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,f;return m?f=new Uo(t,l.shape,u.shape,e):f=new wo(r,l.shape,u.shape),c.runWebGLProgram(f,[l,u],p)}}function ai(r,t=!1){if(r==="linear")return t?KR:BR;if(r==="relu")return t?jR:GR;if(r==="elu")return t?qR:VR;if(r==="relu6")return t?XR:WR;if(r==="prelu")return t?TT:CT;if(r==="leakyrelu")return t?wT:bT;if(r==="sigmoid")return t?YR:UR;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var Hp=class{constructor(t,e,o,n=!1,s=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o,this.enableShapeUniforms=Jt(this.outputShape.length);let c=n?t[1]:t[2],p=Math.ceil(c/2),m=n?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],g="",x="";a&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let w="rc.x",C="rc.x";t[0]<e[0]?w=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(C=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${C};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${d[0]});
          result += (${h[1]} * ${d[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}};var IT={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},wh=class{constructor(t,e,o){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(e,o),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var eF="return a * b;";function Ch(r){let{inputs:t,backend:e}=r,{a:o,b:n}=t,s=N.upcastType(o.dtype,n.dtype);if(o.dtype==="complex64"){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),u=new wh(IT.REAL,o.shape,n.shape),c=new wh(IT.IMAG,o.shape,n.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:n.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:n.shape}],m=e.runWebGLProgram(u,p,"float32"),f=e.runWebGLProgram(c,p,"float32"),h=Yr({inputs:{real:m,imag:f},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),h}if(e.shouldExecuteOnCPU([o,n])){let a=e.texData.get(o.dataId),l=e.texData.get(n.dataId),[u,c]=fR(o.shape,n.shape,a.values,l.values,s),p=e.makeTensorInfo(c,s),m=e.texData.get(p.dataId);return m.values=u,p}let i;return z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Uo(eF,o.shape,n.shape):i=new wo(eF,o.shape,n.shape),e.runWebGLProgram(i,[o,n],s)}var rF={kernelName:Ts,backendName:"webgl",kernelFunc:Ch};function oF(r,t,e){let o=[za(r.shape),...Ma(r.shape)],n={dtype:r.dtype,shape:o,dataId:r.dataId},s=[za(t),...Ma(t)],i=new Wp(s,o),a=!0,l=[o],u=e.runWebGLProgram(i,[n],r.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function Q(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{shape:s}=o,i=e,a=y.sizeFromShape(n.shape),l=y.inferFromImplicitShape(s,a),u=y.sizeFromShape(l);y.assert(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${n.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(n.dataId);return c.isPacked&&!Hl(n.shape,l)&&!(c.texture!==null&&Hl(c.shape,l))?oF(n,l,i):(i.incRef(n.dataId),{dataId:n.dataId,shape:l,dtype:n.dtype})}var nF={kernelName:ji,backendName:"webgl",kernelFunc:Q};var Th=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=t;this.outputShape=[n,i];let a=Math.floor(o/4)*4,l=o%4,u="sumValue += dot(values, ones);";if(e!=null){let p=1/e;u=`sumValue += dot(values * ${y.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%o>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var wy=class{constructor(t,e){this.variableNames=["x"];let{windowSize:o,batchSize:n,inSize:s,outSize:i}=t;this.outputShape=[n,i];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");let c=Math.floor(o/4)*4,p=o%4,m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function T6(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],o=N.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:o,outSize:Math.ceil(e/o)})}return t}function lo(r,t,e,o){let n=T6(r.shape),s=r;for(let i=0;i<n.length;i++){let{inSize:a,windowSize:l,outSize:u}=n[i],c,p;e==="mean"?c=i===0?new Th({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},a):new Th({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u}):c=new wy({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},e),p=s,s=o.runWebGLProgram(c,[s],t),p.dataId!==r.dataId&&o.disposeIntermediateTensorInfo(p)}return s}var Cy=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let i=0;i<o.length;i++)o[i]=t[e[i]];this.outputShape=o,this.rank=o.length;let n=Rt(this.rank),s=I6(e);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function I6(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],o=new Array(t);for(let n=0;n<r.length;n++)o[r[n]]=e[n];return o.join()}var Ty=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let o=new Array(t.length);for(let c=0;c<o.length;c++)o[c]=t[e[c]];if(this.outputShape=o,this.rank=o.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=Rt(this.rank),s=xT("rc",this.rank),i=new Array(this.rank);for(let c=0;c<e.length;c++)i[e[c]]=s[c];let a=`vec2(${i.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${o[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${o[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Ba(r,t,e){let o=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ty(r.shape,t):new Cy(r.shape,t);return e.runWebGLProgram(o,[r],r.dtype)}function sF(r,t,e,o){let n=t,s=r.shape.length,i=y.parseAxisParam(n,r.shape),a=i,l=N.getAxesPermutation(a,s),u=l!=null,c=r;u&&(c=Ba(r,l,o),a=N.getInnerMostAxes(a.length,s)),N.assertAxesAreInnerMostDims("sum",a,s);let[p,m]=N.computeOutAndReduceShapes(c.shape,a),f=p;e&&(f=N.expandShapeToKeepDim(p,i));let h=y.sizeFromShape(m),g=y.sizeFromShape(r.shape)/h,x=Q({inputs:{x:c},attrs:{shape:[g,h]},backend:o}),b=ul(r.dtype),w=lo(x,b,"sum",o),C=Q({inputs:{x:w},attrs:{shape:f},backend:o});return o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),u&&o.disposeIntermediateTensorInfo(c),C}function Yl(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o;return sF(n,s,i,e)}var iF={kernelName:ta,backendName:"webgl",kernelFunc:Yl};function pe(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{perm:s}=o,i=e,a=n.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=n.shape[s[c]];let u;if(i.shouldExecuteOnCPU([n])){let p=i.texData.get(n.dataId).values,m=jl(p,n.shape,n.dtype,s,l);u=i.makeTensorInfo(l,n.dtype);let f=i.texData.get(u.dataId);f.values=m}else u=Ba(n,s,i);return u}var aF={kernelName:gn,backendName:"webgl",kernelFunc:pe};var ST=1e3;function Zl({a:r,b:t,transposeA:e,transposeB:o,backend:n,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],m=o?t.shape[c-1]:t.shape[c-2],f=e?r.shape[u-1]:r.shape[u-2],h=o?t.shape[c-2]:t.shape[c-1],d=r.shape.slice(0,-2),g=t.shape.slice(0,-2),x=y.sizeFromShape(d),b=y.sizeFromShape(g),C=eo.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,h]);y.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${o} must match.`);let v=e?[x,p,f]:[x,f,p],$=o?[b,h,m]:[b,m,h],R=Q({inputs:{x:r},backend:n,attrs:{shape:v}}),F=Q({inputs:{x:t},backend:n,attrs:{shape:$}}),O=[R,F],P=Math.max(x,b),B=e?R.shape[1]:R.shape[2],V=s!=null,G=i!=null,H=l==="leakyrelu",W=l!=null?ai(l,!0):null,j=V||G||H||W!=null,Z;if((f===1||h===1)&&B>ST&&j===!1){let J=R,et=F;e&&(J=pe({inputs:{x:R},backend:n,attrs:{perm:[0,2,1]}}),O.push(J)),o&&(et=pe({inputs:{x:F},backend:n,attrs:{perm:[0,2,1]}}),O.push(et));let rt=h!==1,at=h===1,it=J;rt&&(it=Q({inputs:{x:J},backend:n,attrs:{shape:[P,B,1]}}),O.push(it));let ct=h===1?2:1,lt=et;at&&(lt=Q({inputs:{x:et},backend:n,attrs:{shape:[P,1,B]}}),O.push(lt));let ft=Ch({inputs:{a:it,b:lt},backend:n});Z=Yl({inputs:{x:ft},backend:n,attrs:{axis:ct,keepDims:!0}}),O.push(ft)}else{let J=Le(r.dtype,t.dtype),et=new Hp(v,$,[P,f,h],e,o,V,W,G,H),rt=[R,F];if(s!=null&&rt.push(s),G&&rt.push(i),H){let at=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32"));rt.push(at),O.push(at)}Z=n.runWebGLProgram(et,rt,J)}let q=Q({inputs:{x:Z},backend:n,attrs:{shape:C}});O.push(Z);for(let J of O)n.disposeIntermediateTensorInfo(J);return q}function S6(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=o;return Zl({a:n,b:s,transposeA:l,transposeB:u,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var lF={kernelName:el,backendName:"webgl",kernelFunc:S6};var uF="return abs(x);";function v6(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])&&o.dtype!=="complex64"){let s=e.texData.get(o.dataId),i=hy(s.values);return e.makeTensorInfo(o.shape,o.dtype,i)}let n;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Xr(o.shape,uF):n=new lr(o.shape,uF),e.runWebGLProgram(n,[o],o.dtype)}var cF={kernelName:hi,backendName:"webgl",kernelFunc:v6};var N6=We+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,k6=ht({opSnippet:N6}),pF={kernelName:Xn,backendName:"webgl",kernelFunc:k6};var E6=We+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,$6=ht({opSnippet:E6}),mF={kernelName:Yn,backendName:"webgl",kernelFunc:$6};var fF="return a + b;",A6=Wt({opSnippet:fF,packedOpSnippet:fF,supportsComplex:!0,cpuKernelImpl:qD}),hF={kernelName:qo,backendName:"webgl",kernelFunc:A6};var Iy=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`float v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}};var Sy=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let o=[];this.variableNames.forEach(s=>{o.push(`vec4 v${s} = get${s}AtOutCoords();`)});let n=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${o.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function vy(r){let{inputs:t,backend:e}=r,o=t;if(o.length===1)return De({inputs:{x:o[0]},backend:e});if(o.length>z().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(o.length/2),u=vy({inputs:o.slice(0,l),backend:e}),c=vy({inputs:o.slice(l),backend:e});return vy({inputs:[u,c],backend:e})}let n=o.map(l=>l.dtype).reduce((l,u)=>Le(l,u)),s=o.map(l=>l.shape),a=z().getBool("WEBGL_PACK")?new Sy(o[0].shape,s):new Iy(o[0].shape,s);return e.runWebGLProgram(a,o,n)}var dF={kernelName:di,backendName:"webgl",kernelFunc:vy};function D6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,a),p=n;c!=null&&(p=pe({inputs:{x:n},backend:e,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,a)),N.assertAxesAreInnerMostDims("all",u,a);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),h=y.sizeFromShape(f),d=Q({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=lo(d,d.dtype,"all",e),x;if(i){let b=N.expandShapeToKeepDim(m,l);x=Q({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=Q({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),c!=null&&e.disposeIntermediateTensorInfo(p),x}var gF={kernelName:lu,backendName:"webgl",kernelFunc:D6};function R6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,a),p=n;c!=null&&(p=pe({inputs:{x:n},backend:e,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,a)),N.assertAxesAreInnerMostDims("any",u,a);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),h=y.sizeFromShape(f),d=Q({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=lo(d,d.dtype,"any",e),x;if(i){let b=N.expandShapeToKeepDim(m,l);x=Q({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=Q({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),c!=null&&e.disposeIntermediateTensorInfo(p),x}var xF={kernelName:uu,backendName:"webgl",kernelFunc:R6};var Ny=class{constructor(t,e,o){this.variableNames=["A"];let{windowSize:n,batchSize:s,outSize:i}=t;o||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=e==="max"?">":"<",l=o?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var ky=class{constructor(t,e,o,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y.assert(t.length>2,()=>`Packed arg${o.charAt(0).toUpperCase()+o.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),n||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,u=Rt(l),c=Ae("coords",l),p,m;if(i===1){m=l+1;let F=Rt(m);p=`
        ${F} sourceLocR = ${F}(${c.join()}, 0);
        ++${c[l-1]};
        ${F} sourceLocG = ${F}(${c.join()}, 0);
        ++${c[l-2]};
        ${F} sourceLocA = ${F}(${c.join()}, 0);
        --${c[l-1]};
        ${F} sourceLocB = ${F}(${c.join()}, 0);
        --${c[l-2]};`}else m=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),h="."+f[m-1],d=f.map(F=>"int "+F),g=Ae("sourceLocR",m-1).concat("inIdx.r"),x=Ae("sourceLocG",m-1).concat("inIdx.g"),b=Ae("sourceLocB",m-1).concat("inIdx.b"),w=Ae("sourceLocA",m-1).concat("inIdx.a"),C=o==="max"?"greaterThan":"lessThan",v=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,$=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,R=n?"":`
      float getBestIndicesAChannel(${d.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${d.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${R}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${$};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${$};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function yF(r,t,e,o=null){let n=t.shape[0],s=t.shape[1];o!=null&&(n=o.shape[0],s=o.shape[1]);let i=N.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:n,outSize:Math.ceil(s/i)},l=new Ny(a,e,o==null),u=[t];o!=null&&u.push(o);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=yF(r,t,e,c);return r.disposeIntermediateTensorInfo(c),p}function bF(r,t,e,o=null){let n=o!=null?o.shape:t.shape,s=n[n.length-1],i=N.computeOptimalWindowSize(s),a=new ky(n,i,e,o==null),l=o==null?[t]:[t,o],u=r.runWebGLProgram(a,l,"int32");if(u.shape.length===t.shape.length){let c=bF(r,t,e,u);return r.disposeIntermediateTensorInfo(u),c}return u}function Ey(r,t,e,o){let n=[e];if(N.assertAxesAreInnerMostDims("arg"+o.charAt(0).toUpperCase()+o.slice(1),n,t.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=r.texData.get(t.dataId),a=i!==null&&i.isPacked,l=t;a&&(l=r.unpackTensor(t),s.push(l));let[u,c]=N.computeOutAndReduceShapes(l.shape,n),p=y.sizeFromShape(c),m=Q({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});s.push(m);let f=yF(r,m,o);s.push(f);let h=Q({inputs:{x:f},backend:r,attrs:{shape:u}});return s.forEach(d=>r.disposeIntermediateTensorInfo(d)),h}return bF(r,t,o)}function F6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o,i=y.parseAxisParam(s,n.shape),a=N.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=pe({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let c=Ey(e,l,i[0],"max");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var wF={kernelName:gi,backendName:"webgl",kernelFunc:F6};function _6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s}=o,i=y.parseAxisParam(s,n.shape),a=N.getAxesPermutation(i,n.shape.length),l=n,u=[];a!=null&&(l=pe({inputs:{x:n},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let c=Ey(e,l,i[0],"min");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var CF={kernelName:xi,backendName:"webgl",kernelFunc:_6};var O6=We+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,L6=ht({opSnippet:O6}),TF={kernelName:Zn,backendName:"webgl",kernelFunc:L6};var P6=We+"return log(x + sqrt(x * x + 1.0));",z6=ht({opSnippet:P6}),IF={kernelName:Jn,backendName:"webgl",kernelFunc:z6};var M6=We+`
  return atan(x);
`,B6=ht({opSnippet:M6}),SF={kernelName:Qn,backendName:"webgl",kernelFunc:B6};var V6=Up+`
  return atan(a, b);
`,G6=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Wn+`
  return result;
`,W6=Wt({opSnippet:V6,packedOpSnippet:G6}),vF={kernelName:es,backendName:"webgl",kernelFunc:W6};var U6=We+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,H6=ht({opSnippet:U6}),NF={kernelName:ts,backendName:"webgl",kernelFunc:H6};var cn=class{constructor(t,e,o,n=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=t.padInfo.top,h=t.padInfo.left;this.outputShape=t.outShape;let d=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,b="0.0";if(d||(b="-1.0 / 1e-20"),o){let F=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?s?g:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / max(count, 1.0)");let v=Math.floor(i/4)*4,$=i%4,R=`
      if (${d}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${R}
          }

          int xC = xCCorner + ${v};
          if (${$===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${$===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${$===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${R}
          }
        }
        setOutput(${C});
      }
    `}},Va=class{constructor(t,e,o,n=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&o)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,f=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,g=t.padInfo.front,x=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;let w=e==="avg",C="0.0";if(w||(C="-1.0 / 1e-20"),o){let P=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${d};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${P} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${h} * ${d} +
                      wR * ${d} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",$=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&($="avgValue / max(count, 1.0)");let R=Math.floor(i/4)*4,F=i%4,O=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${R}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${O}
            }

            int xC = xCCorner + ${R};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${O}
            }
          }
        }
        setOutput(${$});
      }
    `}};function K6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Vn(n,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;y.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return De({inputs:{x:n},backend:e});let p=new cn(c,"avg",!1);return e.runWebGLProgram(p,[n],"float32")}var kF={kernelName:yi,backendName:"webgl",kernelFunc:K6};function q6(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=o,c=[1,1,1],p=N.computePool3DInfo(n.shape,s,i,c,a,l,u),m=new Va(p,"avg",!1);return e.runWebGLProgram(m,[n],"float32")}var EF={kernelName:bi,backendName:"webgl",kernelFunc:q6};var $y=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=l-1-t.padInfo.top,p=u-1-t.padInfo.left,m=1/(e*o);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Ay=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,f=t.effectiveFilterWidth,h=p-1-t.padInfo.front,d=m-1-t.padInfo.top,g=f-1-t.padInfo.left,x=1/(e*o*n);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function j6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],m=N.computePool3DInfo(i.shape,a,l,p,u,c),f=new Ay(m);return e.runWebGLProgram(f,[n],i.dtype)}var $F={kernelName:pu,backendName:"webgl",kernelFunc:j6};function X6(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s;Vn([n,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=o,c=N.computePool2DInfo(i.shape,a,l,1,u),p=new $y(c);return e.runWebGLProgram(p,[n],i.dtype)}var AF={kernelName:cu,backendName:"webgl",kernelFunc:X6};function Y6(r){let{inputs:t,backend:e,attrs:o}=r,{a:n,b:s}=t,{transposeA:i,transposeB:a}=o;return Zl({a:n,b:s,transposeA:i,transposeB:a,backend:e})}var DF={kernelName:wi,backendName:"webgl",kernelFunc:Y6};var Dy=class{constructor(t,e,o,n,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(t,e),N.assertAndGetBroadcastShape(t,o);let a="0.0";n!=null&&(N.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";s!=null&&(N.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Ry=class{constructor(t,e,o,n,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(t,e),N.assertAndGetBroadcastShape(t,o);let a="vec4(0.0)";n!=null&&(N.assertAndGetBroadcastShape(t,n),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(N.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var Z6=({inputs:r,backend:t,attrs:e})=>{let{x:o,mean:n,variance:s,offset:i,scale:a}=r;y.assert(n.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),y.assert(i==null||n.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),y.assert(a==null||n.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let u=[o,n,s],c=null;i!=null&&(c=i.shape,u.push(i));let p=null;a!=null&&(p=a.shape,u.push(a));let m=z().getBool("WEBGL_PACK_NORMALIZATION")?new Ry(o.shape,n.shape,s.shape,c,p,l):new Dy(o.shape,n.shape,s.shape,c,p,l);return t.runWebGLProgram(m,u,u[0].dtype)},RF={kernelName:Di,backendName:"webgl",kernelFunc:Z6};var Fy=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=Rt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let o=J6(this.rank),n,s=t.map((i,a)=>`sourceLoc.${vT[a]} = start[${a}] + coords.${vT[a]};`);n=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${o}));
      }
    `}},vT=["x","y","z","w","u","v"];function J6(r){if(r===1)return"sourceLoc";if(r<=6)return vT.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var _y=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=Rt(this.rank),o=Ae("coords",this.rank),n=Ae("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,i=`getChannel(getSource(${n.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${i};
        --${n[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${o[this.rank-1]};
      if (++${o[this.rank-2]} < ${t[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${i};
        if (++${o[this.rank-1]} < ${t[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((c,p)=>`start[${p}]`).join()});`:t.map((c,p)=>`${n[p]} = ${o[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function Q6(r,t,e,o){let n=o.texData.get(r.dataId),s=o.makeTensorInfo(e,r.dtype),i=o.texData.get(s.dataId);Object.assign(i,n),i.refCount=1,i.shape=e,i.dtype=r.dtype;let a=Ze.computeFlatOffset(t,y.computeStrides(r.shape));n.slice&&(a+=n.slice.flatOffset),i.slice={flatOffset:a,origDataId:n.slice&&n.slice.origDataId||r.dataId};let l=o.dataRefCount.get(i.slice.origDataId)||1;return o.dataRefCount.set(i.slice.origDataId,l+1),s}function pn(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,size:i}=o,[a,l]=Ze.parseSliceParams(n,s,i);if(Ze.assertParamsValid(n,a,l),y.sizeFromShape(l)===0)return e.makeTensorInfo(l,n.dtype,[]);if(e.shouldExecuteOnCPU([n])||n.dtype==="string"){let p=e.texData.get(n.dataId),m=SR(p.values,a,l,n.shape,n.dtype);return e.makeTensorInfo(l,n.dtype,m)}let{isPacked:u}=e.texData.get(n.dataId),c=Ze.isSliceContinous(n.shape,a,l);if(u||!c){let p=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _y(l):new Fy(l),m=[a];return e.runWebGLProgram(p,[n],n.dtype,m)}return e.uploadToGPU(n.dataId),Q6(n,a,l,e)}var FF={kernelName:Qi,backendName:"webgl",kernelFunc:pn};var tX=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,crops:i}=o;y.assert(n.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((b,w)=>b*w),l=N.getReshaped(n.shape,s,a),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(n.shape,s,a),p=N.getSliceBeginCoords(i,s.length),m=N.getSliceSize(c,i,s.length),f=[],h=Q({inputs:{x:n},backend:e,attrs:{shape:l}}),d=pe({inputs:{x:h},backend:e,attrs:{perm:u}}),g=Q({inputs:{x:d},backend:e,attrs:{shape:c}}),x=pn({inputs:{x:g},backend:e,attrs:{begin:p,size:m}});return f.push(h),f.push(d),f.push(g),f.forEach(b=>e.disposeIntermediateTensorInfo(b)),x},_F={kernelName:Ci,backendName:"webgl",kernelFunc:tX};function eX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i}=o,a=e.readSync(n.dataId),l=e.readSync(s.dataId),u=fy(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}var OF={kernelName:mu,backendName:"webgl",kernelFunc:eX};function rX(r){let{inputs:t,backend:e}=r,{s0:o,s1:n}=t,s=e.readSync(o.dataId),i=e.readSync(n.dataId),a=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var LF={kernelName:fu,backendName:"webgl",kernelFunc:rX};var oX="return float(a != b);",NT=Wt({opSnippet:oX,cpuKernelImpl:dR,dtype:"bool"}),PF={kernelName:tl,backendName:"webgl",kernelFunc:NT};function li(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return De({inputs:{x:n.complexTensorInfos.real},backend:e})}var zF={kernelName:Ku,backendName:"webgl",kernelFunc:li};var nX="return float(int(x));";function MF(r,t){let e=new lr(r.shape,nX),o=t.runWebGLProgram(e,[r],"int32");return{dataId:o.dataId,shape:o.shape,dtype:o.dtype}}function kT(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dtype:s}=o;if(s==="complex64"){if(n.dtype==="complex64")return De({inputs:{x:n},backend:e});let i=oe(n.shape),a=kT({inputs:{x:n},backend:e,attrs:{dtype:"float32"}}),l=Yr({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),l}if(n.dtype==="complex64"){let i=li({inputs:{input:n},backend:e}),a=kT({inputs:{x:i},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(i),a}if(!y.hasEncodingLoss(n.dtype,s)){let i=De({inputs:{x:n},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(e.shouldExecuteOnCPU([n])){let i=e.texData.get(n.dataId).values,[a,l,u]=XD(i,n.shape,n.dtype,s);return e.makeTensorInfo(a,l,u)}if(s==="int32")return MF(n,e);if(s==="bool"){let i=e.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),l=NT({inputs:{a:n,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${s}`)}var BF={kernelName:fn,backendName:"webgl",kernelFunc:kT};var VF="return ceil(x);",sX=ht({opSnippet:VF,packedOpSnippet:VF,cpuKernelImpl:YD}),GF={kernelName:rs,backendName:"webgl",kernelFunc:sX};var Oy=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Ly=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function iX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{clipValueMin:s,clipValueMax:i}=o,a;z().getBool("WEBGL_PACK_CLIP")?a=new Ly(n.shape):a=new Oy(n.shape);let l=[[s],[i]];return e.runWebGLProgram(a,[n],n.dtype,l)}var WF={kernelName:os,backendName:"webgl",kernelFunc:iX};var Py=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function UF(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function aX(r){let{inputs:t,backend:e}=r,{x:o}=t,n=e.texData.get(o.dataId),s=new Py(o.shape),i=[UF(o,n.complexTensorInfos.real),UF(o,n.complexTensorInfos.imag)];return e.runWebGLProgram(s,i,i[0].dtype)}var HF={kernelName:Ti,backendName:"webgl",kernelFunc:aX};var zy=class{constructor(t){this.outputShape=[],this.outputShape=N.computeOutShape(t,1),this.variableNames=t.map((i,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];let o=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){let a=e[i-1];o.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let n=e.length,s=e[e.length-1];o.push(`else setOutput(getT${n}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${o.join(`
        `)}
      }
    `}};var By=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(t,e);let o=this.outputShape,n=o.length,s=Rt(n),i=Ae("coords",n),a=["x","y","z","w","u","v"].slice(0,n);this.variableNames=t.map((d,g)=>`T${g}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let d=1;d<l.length;d++)l[d]=l[d-1]+t[d][e];let u=a[e],c=a.slice(-2),p=a.join(),m=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let d=1;d<l.length;d++){let g=l[d-1];m+=`
        if (${u} < ${l[d]}  && ${u} >= ${l[d-1]}) {
          return getChannel(
            getT${d}(${My(a,u,g)}),
            vec2(${My(c,u,g)}));
        }`}let f=l.length,h=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${My(a,u,h)}),
          vec2(${My(c,u,h)}));`,this.userCode=`
      float getValue(${a.map(d=>"int "+d)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[n-1]} = ${i[n-1]} + 1;
        if (${i[n-1]} < ${o[n-1]}) {
          result.g = getValue(${i});
        }

        ${i[n-2]} = ${i[n-2]} + 1;
        if (${i[n-2]} < ${o[n-2]}) {
          result.a = getValue(${i});
        }

        ${i[n-1]} = ${i[n-1]} - 1;
        if (${i[n-2]} < ${o[n-2]} &&
            ${i[n-1]} < ${o[n-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function My(r,t,e){let o=r.indexOf(t);return r.map((s,i)=>i===o?`${s} - ${e}`:s).join()}function Jl(r){let{inputs:t,backend:e}=r,{input:o}=t,n=e.texData.get(o.dataId);return De({inputs:{x:n.complexTensorInfos.imag},backend:e})}var KF={kernelName:Ru,backendName:"webgl",kernelFunc:Jl};function Kp(r,t,e){let o=r[0].dtype;if(o==="complex64"){let f=r.map(b=>li({inputs:{input:b},backend:e})),h=r.map(b=>Jl({inputs:{input:b},backend:e})),d=Kp(f,t,e),g=Kp(h,t,e),x=Yr({inputs:{real:d,imag:g},backend:e});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),h.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),x}let n=e.shouldExecuteOnCPU(r);if(o==="string"&&(n=!0),n){let f=r.map(C=>{let $=[-1,y.sizeFromShape(C.shape.slice(t))];return Q({inputs:{x:C},backend:e,attrs:{shape:$}})}),h=f.map(C=>({vals:e.readSync(C.dataId),shape:C.shape})),d=N.computeOutShape(f.map(C=>C.shape),1),g=f[0].shape[0]===1,x=ZD(h,d,o,g),b=N.computeOutShape(r.map(C=>C.shape),t),w=e.makeTensorInfo(b,o,x);return f.forEach(C=>e.disposeIntermediateTensorInfo(C)),w}let s=r.filter(f=>y.sizeFromShape(f.shape)>0),i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let f=i?new lr(r[0].shape,Gn):new Xr(r[0].shape,Gn);return e.runWebGLProgram(f,r,o)}let a=z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>a){let f=[];for(let d=0;d<s.length;d+=a){let g=s.slice(d,d+a);f.push(Kp(g,t,e))}let h=Kp(f,t,e);for(let d of f)e.disposeIntermediateTensorInfo(d);return h}if(i){let f=new By(s.map(h=>h.shape),t);return e.runWebGLProgram(f,s,o)}let{tensors2D:l,outShape:u}=lX(s,t,e),c=new zy(l.map(f=>f.shape)),p=e.runWebGLProgram(c,l,o);l.forEach(f=>e.disposeIntermediateTensorInfo(f));let m=Q({inputs:{x:p},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(p),m}function lX(r,t,e){let o=N.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>Q({inputs:{x:s},attrs:{shape:[-1,y.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:o}}function ET(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o,s=y.parseAxisParam(n,t[0].shape)[0],i=t.map(u=>u.shape);N.assertParamsConsistent(i,s);let a=N.computeOutShape(t.map(u=>u.shape),s);if(y.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>y.sizeFromShape(u.shape)>0);return l.length===1?De({inputs:{x:l[0]},backend:e}):Kp(l,s,e)}var qF={kernelName:Ii,backendName:"webgl",kernelFunc:ET};var qp=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let i=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,f=t.filterWidth,h=Math.floor(t.inChannels/4)*4,d=t.inChannels%4,g=t.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1,C="",v="";o&&(n?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:C=`
          float activation(float x) {
            ${o}
          }
        `,v="result = activation(result);");let $=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${d===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${d===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${d===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${$}
        ${v}
        setOutput(result);
      }
    `}},Vy=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,o=t.padInfo.top,n=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,f=t.filterWidth,h=Math.floor(t.inChannels/4)*4,d=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${e}, ${o}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${d===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${d===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${d===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var jp=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jt(this.outputShape.length);let i=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,p=c,m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)m+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;m+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)m+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(p+1)/2;g++){let x=g*2;if(m+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?m+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){let b=i%2===0?y.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:m+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?m+=`
                     xC${x+1} = xTexelC${x};
                     `:m+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(m+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(m+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(m+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let f="",h="";o&&(n?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${o}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${o}
         }`:f=`vec4 activation(vec4 x) {
           ${o}
         }`,h="result = activation(result);");let d=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${d}
         ${h}
         setOutput(result);
       }
     `}};var Gy=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Jt(this.outputShape.length);let{dataFormat:o}=e,n=we(),s=o==="channelsLast",i=s?1:2,a=s?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,u="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)u+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function Wy(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function Uy({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let l=r.shape,u=o.texData.get(r.dataId),c=e.inChannels,p=l[0]*l[1]*l[2],m=e.outChannels,f=e.dataFormat==="channelsLast",h=!1,d=!1,g,x=[];if(s!=null){let C=Wy(s.shape,f);C!=null&&(s=Q({inputs:{x:s},backend:o,attrs:{shape:C}}),x.push(s))}if(n!=null){let C=Wy(n.shape,f);C!=null&&(n=Q({inputs:{x:n},backend:o,attrs:{shape:C}}),x.push(n))}if(!((p===1||m===1)&&c>ST)&&u.isPacked&&f&&u.texture!=null&&l[2]%2!==0&&y.arraysEqual(u.shape.slice(-3),l.slice(-3))){let C=l[0]*l[1]*(l[2]+1),v={dataId:r.dataId,shape:[1,C,e.inChannels],dtype:r.dtype},$=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,y.assert(Hl(u.shape,v.shape),()=>`packed reshape ${u.shape} to ${v.shape} isn't free`);let R=Q({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(R);let F=Zl({a:v,b:R,backend:o,transposeA:h,transposeB:d,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),O=o.texData.get(F.dataId);y.assert(O.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=$,O.shape=e.outShape,g=De({inputs:{x:F},backend:o}),g.shape=e.outShape,x.push(F)}else{let C=e.outHeight*e.outWidth,v=Q({inputs:{x:r},backend:o,attrs:{shape:f?[e.batchSize,C,e.inChannels]:[e.batchSize,e.inChannels,C]}}),$=Q({inputs:{x:t},backend:o,attrs:{shape:[1,e.inChannels,e.outChannels]}}),R=Zl({a:f?v:$,b:f?$:v,transposeA:!f,transposeB:d,backend:o,bias:n,activation:a,preluActivationWeights:s,leakyreluAlpha:i});g=Q({inputs:{x:R},backend:o,attrs:{shape:e.outShape}}),x.push(v),x.push($),x.push(R)}for(let C of x)o.disposeIntermediateTensorInfo(C);return g}function Hy({x:r,filter:t,convInfo:e,backend:o,bias:n=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=e,h=f==="channelsLast",d=l*u*c,g=m*p,x=[e.batchSize,d,g],b=!0,w=!1,C=[];if(s!=null){let q=Wy(s.shape,h);q!=null&&(s=Q({inputs:{x:s},backend:o,attrs:{shape:q}}),C.push(s))}if(n!=null){let q=Wy(n.shape,h);q!=null&&(n=Q({inputs:{x:n},backend:o,attrs:{shape:q}}),C.push(n))}let v=Q({inputs:{x:t},backend:o,attrs:{shape:[1,d,y.sizeFromShape(t.shape)/d]}});C.push(v);let $=new Gy(x,e),R=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],F=o.runWebGLProgram($,[r],"float32",R),O=Q({inputs:{x:F},backend:o,attrs:{shape:x}});C.push(F),C.push(O);let P=n!=null,B=s!=null,V=a==="leakyrelu",G=a?ai(a,!0):null,H=new Hp(h?O.shape:v.shape,h?v.shape:O.shape,h?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],b,w,P,G,B,V),W=h?[O,v]:[v,O];if(n&&W.push(n),B&&W.push(s),V){let q=o.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));W.push(q),C.push(q)}let j=o.runWebGLProgram(H,W,"float32"),Z=Q({inputs:{x:j},backend:o,attrs:{shape:e.outShape}});C.push(j);for(let q of C)o.disposeIntermediateTensorInfo(q);return Z}function uX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=o,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,s.shape,i,u,a,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=Uy({x:n,filter:s,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){let d=new jp(m),g=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];f=e.runWebGLProgram(d,[n,s],"float32",g)}else if(z().getBool("WEBGL_CONV_IM2COL"))f=Hy({x:n,filter:s,convInfo:m,backend:e});else{let d=new qp(m);f=e.runWebGLProgram(d,[n,s],"float32")}let h=Q({inputs:{x:f},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(f),h}var jF={kernelName:Si,backendName:"webgl",kernelFunc:uX};var Ky=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,s=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},qy=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=o-1-t.padInfo.left,u=i?1:2,c=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},jy=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${o} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Xy=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,o=t.filterHeight,n=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,u=o-1-t.padInfo.top,c=n-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${o}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${o} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function cX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=o,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(n.shape,c,i,1,a,u,!1,p),f=new Ky(m);return e.runWebGLProgram(f,[n,s],"float32")}var XF={kernelName:du,backendName:"webgl",kernelFunc:cX};function pX(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=o,p=N.convertConv2DDataFormat(u),m=N.computeConv2DInfo(i,s.shape,a,1,l,c,!1,p),f=new qy(m);return e.runWebGLProgram(f,[n,s],"float32")}var YF={kernelName:vi,backendName:"webgl",kernelFunc:pX};function mX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o,u=N.computeConv3DInfo(n.shape,s.shape,i,l,a),c=new Vy(u);return e.runWebGLProgram(c,[n,s],"float32")}var ZF={kernelName:Ni,backendName:"webgl",kernelFunc:mX};function fX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,pad:a,filterShape:l}=o,u=N.computeConv3DInfo(n.shape,l,i,1,a),c=new jy(u);return e.runWebGLProgram(c,[n,s],"float32")}var JF={kernelName:gu,backendName:"webgl",kernelFunc:fX};function hX(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{pad:i,strides:a,inputShape:l}=o,u=N.computeConv3DInfo(l,s.shape,a,1,i),c=new Xy(u);return e.runWebGLProgram(c,[n,s],"float32")}var QF={kernelName:xu,backendName:"webgl",kernelFunc:hX};var dX=Ho+`
  return cos(x);
`,gX=ht({opSnippet:dX}),t_={kernelName:ns,backendName:"webgl",kernelFunc:gX};var xX=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,yX=ht({opSnippet:xX}),e_={kernelName:ss,backendName:"webgl",kernelFunc:yX};var Yy=class{constructor(t,e,o,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,a,l,u]=t,[c]=e,[p,m]=o;this.outputShape=[c,p,m,u];let f=n==="bilinear"?1:0,[h,d]=[`${a-1}.0`,`${l-1}.0`],[g,x,b]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[w,C,v]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${d} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${d}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${C};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${d} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var bX=r=>{let{inputs:t,backend:e,attrs:o}=r,{image:n,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:u}=o,c=new Yy(n.shape,s.shape,a,l,u);return e.runWebGLProgram(c,[n,s,i],"float32")},r_={kernelName:bu,backendName:"webgl",kernelFunc:bX};var Ql;(function(r){r.Prod="*",r.Sum="+"})(Ql||(Ql={}));var Ih=class{constructor(t,e,o,n){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===Ql.Prod?"1.0":"0.0",a=o?i:`getX(${o_(s,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",c="";o?(u=n?`end != ${l-1}`:"end != 0",c=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${l}`:"end >= pow2",c=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Rt(s)} coords = getOutputCoords();
        int end = ${n_(s,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${n_(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${o_(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function o_(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function n_(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function Zy(r,t,e,o,n,s){let i=t.shape.length,a=N.getAxesPermutation([o],i),l=t;a!=null&&(l=pe({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=N.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${o}`);let c=l.shape[u],p=De({inputs:{x:l},backend:e});for(let m=0;m<=Math.ceil(Math.log2(c))-1;m++){let f=new Ih(r,l.shape,!1,s),h=[[m]],d=p;p=e.runWebGLProgram(f,[p],p.dtype,h),e.disposeIntermediateTensorInfo(d)}if(n){let m=new Ih(r,l.shape,n,s),f=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){let m=N.getUndoAxesPermutation(a),f=pe({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),f}return p}function wX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;return Zy(Ql.Prod,n,e,s,i,a)}var s_={kernelName:yu,backendName:"webgl",kernelFunc:wX};function CX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,exclusive:i,reverse:a}=o;return Zy(Ql.Sum,n,e,s,i,a)}var i_={kernelName:ki,backendName:"webgl",kernelFunc:CX};function TX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,weights:s}=t,{size:i,binaryOutput:a}=o;if(n.shape.length===1){let l=e.readSync(n.dataId),u=e.readSync(s.dataId),c=fy(l,u,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}else if(n.shape.length===2){let l=e.bufferSync(n),u=e.bufferSync(s),c=jD(l,u,i,a);return e.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${n.shape.length}.`)}var a_={kernelName:wu,backendName:"webgl",kernelFunc:TX};var Jy=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=o,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function IX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockSize:s,dataFormat:i}=o,a=n.shape[0],l=i==="NHWC"?n.shape[1]:n.shape[2],u=i==="NHWC"?n.shape[2]:n.shape[3],c=i==="NHWC"?n.shape[3]:n.shape[1],p=l*s,m=u*s,f=c/(s*s),h=i==="NHWC"?[a,p,m,f]:[a,f,p,m],d=new Jy(h,s,i);return e.runWebGLProgram(d,[n],n.dtype)}var l_={kernelName:Cu,backendName:"webgl",kernelFunc:IX};var Xp=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jt(this.outputShape.length);let i=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,u="",c="";o&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:u=`
          float activation(float x) {
            ${o}
          }
        `,c="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var Yp=class{constructor(t,e=!1,o=null,n=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Jt(this.outputShape.length);let i=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,p=t.filterWidth,m=p,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<p;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<p;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let b=x*2;if(f+=`
          xC = xCCorner + ${b*u};
          `,l===1){if(b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?f+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<p)){let w=a%2===0?y.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:f+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?f+=`
                    xC${b+1} = xTexelC${b};
                    `:f+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<p&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<p&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<p&&(f+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<p&&(f+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<p&&(f+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let h="",d="";o&&(n?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:s?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:h=`vec4 activation(vec4 x) {
          ${o}
        }`,d="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${d}
        setOutput(result);
      }
    `}};function SX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=o,c=l;c==null&&(c=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=N.computeConv2DInfo(n.shape,s.shape,i,c,a,u,!0),m;z().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new Yp(p):m=new Xp(p);let f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[n,s],"float32",f)}var u_={kernelName:Ei,backendName:"webgl",kernelFunc:SX};var Qy=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,o=t.strideWidth,n=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${n};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${o} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},tb=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,o=t.filterWidth,n=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=o-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${o} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function vX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=o,p=N.computeConv2DInfo(n.shape,c,i,a,l,u,!0),m=new Qy(p);return e.runWebGLProgram(m,[n,s],"float32")}var c_={kernelName:Tu,backendName:"webgl",kernelFunc:vX};function NX(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=o,p=N.computeConv2DInfo(c,s.shape,i,a,l,u,!0),m=new tb(p);return e.runWebGLProgram(m,[n,s],"float32")}var p_={kernelName:Iu,backendName:"webgl",kernelFunc:NX};var eb=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function kX(r){let{inputs:t,backend:e}=r,{x:o}=t,n=[...o.shape,...o.shape],s=y.sizeFromShape(o.shape),i=Q({inputs:{x:o},backend:e,attrs:{shape:[s]}}),a=new eb(s),l=e.runWebGLProgram(a,[i],i.dtype),u=Q({inputs:{x:l},backend:e,attrs:{shape:n}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}var m_={kernelName:Su,backendName:"webgl",kernelFunc:kX};var rb=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:o,padInfo:n,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:p,left:m}=n;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${o}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function EX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s}=t,{strides:i,pad:a,dilations:l}=o,u=N.computeDilation2DInfo(n.shape,s.shape,i,a,"NHWC",l),c,p=new rb(u);c=e.runWebGLProgram(p,[n,s],"float32");let m=Q({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),m}var f_={kernelName:$i,backendName:"webgl",kernelFunc:EX};function $X(r){let{inputs:t,backend:e,attrs:o}=r,{equation:n}=o,s=t,{allDims:i,summedDims:a,idDims:l}=N.decodeEinsumEquation(n,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:c}=N.getEinsumComputePath(a,l),p=c.length,m=null,f=i.length,h=[];for(let d=0;d<p;++d){for(let g of c[d]){let{permutationIndices:x,expandDims:b}=N.getEinsumPermutation(f,l[g]),w;N.isIdentityPermutation(x)?w=s[g]:(w=pe({inputs:{x:s[g]},backend:e,attrs:{perm:x}}),h.push(w));let C=w.shape.slice();for(let v=0;v<b.length;++v)C.splice(b[v],0,1);y.arraysEqual(w.shape,C)||(w=Q({inputs:{x:w},backend:e,attrs:{shape:C}}),h.push(w)),m===null?m=w:(m=Ch({inputs:{a:w,b:m},backend:e}),h.push(m))}d<p-1&&(u[d]>=0&&(m=Yl({inputs:{x:m},backend:e,attrs:{axis:u[d]-(i.length-f),keepDims:!1}}),h.push(m)),f--)}for(let d of h)d!==m&&e.disposeIntermediateTensorInfo(d);return m}var h_={kernelName:vu,backendName:"webgl",kernelFunc:$X};var AX="return (x >= 0.0) ? x : (exp(x) - 1.0);",DX=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RX=ht({opSnippet:AX,packedOpSnippet:DX}),d_={kernelName:as,backendName:"webgl",kernelFunc:RX};var FX="return (b >= 1.0) ? a : a * (b + 1.0);",_X=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,OX=r=>{let{inputs:t,backend:e}=r,{dy:o,y:n}=t,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Uo(_X,o.shape,n.shape):new wo(FX,o.shape,n.shape);return e.runWebGLProgram(s,[o,n],o.dtype)},g_={kernelName:Nu,backendName:"webgl",kernelFunc:OX};var LX=`
  return vec4(equal(a, b));
`,PX="return float(a == b);",zX=Wt({opSnippet:PX,packedOpSnippet:LX,dtype:"bool",cpuKernelImpl:JD}),x_={kernelName:qa,backendName:"webgl",kernelFunc:zX};var MX=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,BX=ht({opSnippet:MX}),y_={kernelName:ls,backendName:"webgl",kernelFunc:BX};var VX=Ho+`
  return exp(x);
`,GX=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$T=ht({opSnippet:VX,packedOpSnippet:GX,cpuKernelImpl:QD,dtype:"float32"}),b_={kernelName:us,backendName:"webgl",kernelFunc:$T};function ob(r){let{inputs:t,attrs:e,backend:o}=r,{dim:n}=e,{input:s}=t,i=s.shape.length,a=s.shape.slice(),l=n;return n<0&&(y.assert(-(i+1)<=n,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+n+1),a.splice(l,0,1),Q({inputs:{x:s},backend:o,attrs:{shape:a}})}var w_={kernelName:Ai,backendName:"webgl",kernelFunc:ob};var C_="return exp(x) - 1.0;",WX=ht({opSnippet:C_,packedOpSnippet:C_,cpuKernelImpl:tR}),T_={kernelName:cs,backendName:"webgl",kernelFunc:WX};var Sh=class{constructor(t,e,o){this.variableNames=["real","imag"];let n=e[1];this.outputShape=e;let s=o?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=o?`${n}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function nb(r,t,e){let o=e.texData.get(r.dataId),n=y.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=n/s,a=Q({inputs:{x:r},backend:e,attrs:{shape:[i,s]}}),l=a.shape,u=new Sh("real",l,t),c=new Sh("imag",l,t),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:l},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:l}],m=e.runWebGLProgram(u,p,"float32"),f=e.runWebGLProgram(c,p,"float32"),h=Yr({inputs:{real:m,imag:f},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f);let d=Q({inputs:{x:h},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(h),d}function UX(r){let{inputs:t,backend:e}=r,{input:o}=t;return nb(o,!1,e)}var I_={kernelName:ku,backendName:"webgl",kernelFunc:UX};var sb=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function ui(r){let{backend:t,attrs:e}=r,{shape:o,value:n}=e,{dtype:s}=e;if(s=s||y.inferDtype(n),s==="string"){let i=y.getArrayFromDType(s,y.sizeFromShape(o));return i.fill(n),t.makeTensorInfo(o,s,i)}else{let i=new sb(o,n),a=[[n]];return t.runWebGLProgram(i,[],s,a)}}var S_={kernelName:Eu,backendName:"webgl",kernelFunc:ui};var ib=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var v_={kernelName:$u,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,o=t,n=new ib(e.shape);return o.runWebGLProgram(n,[e],e.dtype)}};var N_="return floor(x);",HX=ht({opSnippet:N_,packedOpSnippet:N_,cpuKernelImpl:eR}),k_={kernelName:ps,backendName:"webgl",kernelFunc:HX};var KX=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,qX=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,jX=Wt({opSnippet:KX,packedOpSnippet:qX,dtype:"int32"}),E_={kernelName:ms,backendName:"webgl",kernelFunc:jX};var ab=class{constructor(t){this.variableNames=["A"];let e=we(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${o}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var lb=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=we(),[o,n]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${o}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var $_={kernelName:im,backendName:"webgl",kernelFunc:XX},Zp,AT=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function XX(r){let{inputs:t,backend:e,attrs:o}=r,{pixels:n}=t,{numChannels:s}=o,i=typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,[l,u]=i?[n.videoWidth,n.videoHeight]:[n.width,n.height],c=[u,l],p=[u,l,s];if(a||i){let d=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Zp==null||d!==AT)&&(AT=d,Zp=document.createElement("canvas").getContext("2d",{willReadFrequently:AT})),Zp.canvas.width=l,Zp.canvas.height=u,Zp.drawImage(n,0,0,l,u),n=Zp.canvas}let m=e.makeTensorInfo(c,"int32");e.texData.get(m.dataId).usage=xr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),n);let f=z().getBool("WEBGL_PACK")?new lb(p):new ab(p),h=e.runWebGLProgram(f,[m],"int32");return e.disposeData(m.dataId),h}function YX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:h}=o,d=N.convertConv2DDataFormat(c),g=N.computeConv2DInfo(n.shape,s.shape,l,p,u,m,!1,d),x,b=[],w=i!=null,C=a!=null,v=f==="leakyrelu",$=()=>{let F=[n,s],O=(P,B)=>{if(B==="NCHW"&&P.shape.length===1&&P.shape[0]!==1){let V=Q({inputs:{x:P},backend:e,attrs:{shape:[P.shape[0],1,1]}});return b.push(V),V}return P};if(w&&F.push(O(i,c)),C&&F.push(O(a,c)),v){let P=e.makeTensorInfo([],"float32",y.createScalarValue(h,"float32"));F.push(P),b.push(P)}return F};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=Uy({x:n,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else if(g.strideWidth<=2&&d==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){let F=f?ai(f,!0):null,O=new jp(g,w,F,C,v),P=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],B=$();x=e.runWebGLProgram(O,B,"float32",P)}else if(z().getBool("WEBGL_CONV_IM2COL"))x=Hy({x:n,filter:s,convInfo:g,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:h});else{let F=f?ai(f,!1):null,O=new qp(g,w,F,C,v),P=$();x=e.runWebGLProgram(O,P,"float32")}let R=Q({inputs:{x},backend:e,attrs:{shape:g.outShape}});return b.push(x),b.forEach(F=>e.disposeIntermediateTensorInfo(F)),R}var A_={kernelName:rl,backendName:"webgl",kernelFunc:YX};function ZX(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=o,h=[],d=c;d==null&&(d=[1,1]),y.assert(N.eitherStridesOrDilationsAreOne(l,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${d}'`);let g=N.computeConv2DInfo(n.shape,s.shape,l,d,u,p,!0),x=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=m?ai(m,x):null,w=[n,s],C=i!=null,v=a!=null,$=m==="leakyrelu";if(C&&w.push(i),v&&w.push(a),$){let P=e.makeTensorInfo([],"float32",y.createScalarValue(f,"float32"));w.push(P),h.push(P)}let R;x?R=new Yp(g,C,b,v,$):R=new Xp(g,C,b,v,$);let F=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],O=e.runWebGLProgram(R,w,"float32",F);return h.forEach(P=>e.disposeIntermediateTensorInfo(P)),O}var D_={kernelName:ol,backendName:"webgl",kernelFunc:ZX};var ub=class{constructor(t,e,o,n){this.sliceDim=t,this.strides=e,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=o;let s=Rt(o.length),i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function JX(r){let{inputs:t,backend:e}=r,{params:o,indices:n}=t,s=n.shape,i=s[s.length-1],a=y.sizeFromShape(o.shape),[l,u,c,p]=N.prepareAndValidate(o,n),m=Q({inputs:{x:n},backend:e,attrs:{shape:[u,i]}}),f=Q({inputs:{x:o},backend:e,attrs:{shape:[y.sizeFromShape(o.shape)/c,c]}});if(e.shouldExecuteOnCPU([o,n])||o.dtype==="string"){let x=e.readSync(n.dataId),b=e.bufferSync(o),w=rR(x,b,o.dtype,u,i,c,p,o.shape,a);return e.makeTensorInfo(l,o.dtype,w.values)}let h=new ub(i,p,[u,c],o.shape),d=e.runWebGLProgram(h,[f,m],f.dtype),g=Q({inputs:{x:d},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),g}var R_={kernelName:Au,backendName:"webgl",kernelFunc:JX};var cb=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let o=Rt(this.rank),n=QX(t,2);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function QX(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[];for(let n=0;n<r.length;n++)n===2?o.push("index"):o.push(`${e[n]}`);return o.join()}function DT(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,indices:s}=t,{axis:i,batchDims:a}=o,l=y.parseAxisParam(i,n.shape)[0];if(z().get("DEBUG")){let b=e.readSync(s.dataId),w=n.shape[l];for(let C=0;C<b.length;++C){let v=b[C];y.assert(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}let u=N.segment_util.collectGatherOpShapeInfo(n,s,l,a),c=y.sizeFromShape(s.shape),p=[],m=Q({inputs:{x:n},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=Q({inputs:{x:s},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(m),p.push(f);let h=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([n,s])||n.dtype==="string"){let b=e.bufferSync(f),w=e.bufferSync(m),C=oR(w,b,h);return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),e.makeTensorInfo(u.outputShape,C.dtype,C.values)}let d=new cb(m.shape,h),g=e.runWebGLProgram(d,[m,f],m.dtype);p.push(g);let x=Q({inputs:{x:g},backend:e,attrs:{shape:u.outputShape}});return p.forEach(b=>e.disposeIntermediateTensorInfo(b)),x}var F_={kernelName:Ri,backendName:"webgl",kernelFunc:DT};var t5="return float(a > b);",e5=`
  return vec4(greaterThan(a, b));
`,r5=Wt({opSnippet:t5,packedOpSnippet:e5,cpuKernelImpl:nR,dtype:"bool"}),__={kernelName:ja,backendName:"webgl",kernelFunc:r5};var o5="return float(a >= b);",n5=`
  return vec4(greaterThanEqual(a, b));
`,s5=Wt({opSnippet:o5,packedOpSnippet:n5,dtype:"bool",cpuKernelImpl:sR}),O_={kernelName:fs,backendName:"webgl",kernelFunc:s5};function i5(r){let{inputs:t,backend:e}=r,{input:o}=t;return nb(o,!0,e)}var L_={kernelName:Du,backendName:"webgl",kernelFunc:i5};var a5="return float(!isnan(x) && !isinf(x));",l5=ht({opSnippet:a5,dtype:"bool"}),P_={kernelName:hs,backendName:"webgl",kernelFunc:l5};var u5="return float(isinf(x));",c5=ht({opSnippet:u5,dtype:"bool"}),z_={kernelName:ds,backendName:"webgl",kernelFunc:c5};var p5="return float(isnan(x));",m5=ht({opSnippet:p5,dtype:"bool"}),M_={kernelName:gs,backendName:"webgl",kernelFunc:m5};var f5="return float(a < b);",h5=`
  return vec4(lessThan(a, b));
`,d5=Wt({opSnippet:f5,packedOpSnippet:h5,cpuKernelImpl:iR,dtype:"bool"}),B_={kernelName:Xa,backendName:"webgl",kernelFunc:d5};var g5="return float(a <= b);",x5=`
  return vec4(lessThanEqual(a, b));
`,y5=Wt({opSnippet:g5,packedOpSnippet:x5,cpuKernelImpl:aR,dtype:"bool"}),V_={kernelName:Ya,backendName:"webgl",kernelFunc:y5};function b5(r){let{backend:t,attrs:e}=r,{start:o,stop:n,num:s}=e,i=lR(o,n,s);return t.makeTensorInfo([i.length],"float32",i)}var G_={kernelName:Fu,backendName:"webgl",kernelFunc:b5};var w5=Ho+`
  return x < 0.0 ? 0./0. : log(x);
`,C5=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,T5=ht({opSnippet:w5,packedOpSnippet:C5,cpuKernelImpl:uR}),W_={kernelName:xs,backendName:"webgl",kernelFunc:T5};var I5=Ho+`
  return log(1.0 + x);
`,S5=ht({opSnippet:I5}),U_={kernelName:ys,backendName:"webgl",kernelFunc:S5};var v5="return float(a >= 1.0 && b >= 1.0);",N5=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,k5=Wt({opSnippet:v5,packedOpSnippet:N5,dtype:"bool"}),H_={kernelName:Za,backendName:"webgl",kernelFunc:k5};var E5="return float(!(x >= 1.0));",$5=ht({opSnippet:E5}),K_={kernelName:Ja,backendName:"webgl",kernelFunc:$5};var A5="return float(a >= 1.0 || b >= 1.0);",D5=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,R5=Wt({opSnippet:A5,packedOpSnippet:D5,dtype:"bool"}),q_={kernelName:Qa,backendName:"webgl",kernelFunc:R5};var pb=class{constructor(t,e,o,n,s){this.variableNames=["x"],this.outputShape=[];let i=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var mb=class{constructor(t,e,o,n,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${o}) + float(${n}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var F5=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=o,u=z().getBool("WEBGL_PACK_NORMALIZATION")?new mb(n.shape,s,i,a,l):new pb(n.shape,s,i,a,l);return e.runWebGLProgram(u,[n],n.dtype)},j_={kernelName:_i,backendName:"webgl",kernelFunc:F5};var fb=class{constructor(t,e,o,n,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=o,this.alpha=n,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${o});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var _5=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=o,p=new fb(n.shape,a,l,u,c);return e.runWebGLProgram(p,[n,s,i],n.dtype)},X_={kernelName:_u,backendName:"webgl",kernelFunc:_5};function Y_(r,t,e,o){let n=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/n,a=Q({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=lo(a,r.dtype,"max",o),u=Q({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}function RT(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reductionIndices:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,a),p=c!=null,m=e.shouldExecuteOnCPU([n]),f=n;if(p){if(m){let w=e.texData.get(f.dataId).values,C=new Array(a);for(let R=0;R<C.length;R++)C[R]=n.shape[c[R]];let v=jl(w,n.shape,n.dtype,c,C);f=e.makeTensorInfo(C,n.dtype);let $=e.texData.get(f.dataId);$.values=v}else f=Ba(n,c,e);u=N.getInnerMostAxes(u.length,a)}N.assertAxesAreInnerMostDims("max",u,a);let[h,d]=N.computeOutAndReduceShapes(f.shape,u),g=h;i&&(g=N.expandShapeToKeepDim(h,l));let x;if(m){let w=e.texData.get(f.dataId).values,C=cR(w,y.sizeFromShape(d),g,n.dtype);x=e.makeTensorInfo(g,n.dtype);let v=e.texData.get(x.dataId);v.values=C}else x=Y_(f,d,g,e);return p&&e.disposeIntermediateTensorInfo(f),x}var Z_={kernelName:Oi,backendName:"webgl",kernelFunc:RT};var O5=Up+`
  return max(a, b);
`,L5=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Wn+`
  return result;
`,P5=Wt({opSnippet:O5,packedOpSnippet:L5,cpuKernelImpl:pR}),J_={kernelName:bs,backendName:"webgl",kernelFunc:P5};function z5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t;Vn(n,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=o,u=1;y.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,s,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&y.arraysEqual(c.inShape,c.outShape))return De({inputs:{x:n},backend:e});let p=new cn(c,"max",!1);return e.runWebGLProgram(p,[n],n.dtype)}var Q_={kernelName:Li,backendName:"webgl",kernelFunc:z5};function M5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{filterSize:s,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=o,c=[1,1,1],p=N.computePool3DInfo(n.shape,s,i,c,a,u,l),m=new Va(p,"max",!1);return e.runWebGLProgram(m,[n],n.dtype)}var tO={kernelName:Pi,backendName:"webgl",kernelFunc:M5};var hb=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,o=t.strideWidth,n=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,l=i-1-t.padInfo.left,u=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},db=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,o=t.strideHeight,n=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=l-1-t.padInfo.front,m=u-1-t.padInfo.top,f=c-1-t.padInfo.left,h=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function B5(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s}=t,i=s,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=o,p=[1,1,1],m=N.computePool3DInfo(i.shape,a,l,p,u,c),f=new Va(m,"max",!0),h=e.runWebGLProgram(f,[i],i.dtype),d=new db(m),g=e.runWebGLProgram(d,[n,h],i.dtype);return e.disposeIntermediateTensorInfo(h),g}var eO={kernelName:Lu,backendName:"webgl",kernelFunc:B5};function V5(r){let{inputs:t,backend:e,attrs:o}=r,{dy:n,input:s,output:i}=t,a=s;Vn([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=o,m=N.computePool2DInfo(a.shape,l,u,1,c,p),f=!0,h=new cn(m,"max",f),d=e.runWebGLProgram(h,[a],a.dtype),g=new hb(m),x=e.runWebGLProgram(g,[n,d],a.dtype);return e.disposeIntermediateTensorInfo(d),x}var rO={kernelName:Ou,backendName:"webgl",kernelFunc:V5};function oO(r,t,e,o){let n=new cn(e,"max",!1),s=o.runWebGLProgram(n,[r],"float32");n=new cn(e,"max",!0,!0,t);let i=o.runWebGLProgram(n,[r],"float32");return[s,i]}var nO={kernelName:Pu,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{filterSize:n,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;y.assert(o.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.shape.length}.`);let u=[1,1];y.assert(N.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,n,s,u,i),[p,m]=oO(o,a,c,l);return[p,m]}};function sO(r,t,e,o){let n=y.sizeFromShape(t),i=y.sizeFromShape(r.shape)/n,a=Q({inputs:{x:r},attrs:{shape:[i,n]},backend:o}),l=lo(a,"float32","mean",o),u=Q({inputs:{x:l},attrs:{shape:e},backend:o});return o.disposeIntermediateTensorInfo(a),o.disposeIntermediateTensorInfo(l),u}var iO={kernelName:zi,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:o}=r,{keepDims:n,axis:s}=t,i=e,a=o.shape.length,l=y.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,a),p=c!=null,m=i.shouldExecuteOnCPU([o]),f=[],h=o;if(p){if(m){let C=i.texData.get(h.dataId).values,v=new Array(a);for(let F=0;F<v.length;F++)v[F]=o.shape[c[F]];let $=jl(C,o.shape,o.dtype,c,v);h=i.makeTensorInfo(v,o.dtype);let R=i.texData.get(h.dataId);R.values=$}else h=Ba(o,c,i);f.push(h),u=N.getInnerMostAxes(u.length,a)}N.assertAxesAreInnerMostDims("sum",u,a);let[d,g]=N.computeOutAndReduceShapes(h.shape,u),x=d;n&&(x=N.expandShapeToKeepDim(d,l));let b=sO(h,g,x,i);for(let w of f)i.disposeIntermediateTensorInfo(w);return b}};function G5(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=y.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,a),p=n;c!=null&&(p=pe({inputs:{x:n},backend:e,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,n.shape.length)),N.assertAxesAreInnerMostDims("min",u,a);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),h=y.sizeFromShape(f),d=Q({inputs:{x:p},backend:e,attrs:{shape:[-1,h]}}),g=lo(d,d.dtype,"min",e),x;if(i){let b=N.expandShapeToKeepDim(m,l);x=Q({inputs:{x:g},backend:e,attrs:{shape:b}})}else x=Q({inputs:{x:g},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),c!=null&&e.disposeIntermediateTensorInfo(p),x}var aO={kernelName:Mi,backendName:"webgl",kernelFunc:G5};var W5=Up+`
  return min(a, b);
`,U5=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Wn+`
  return result;
`,H5=Wt({opSnippet:W5,packedOpSnippet:U5,cpuKernelImpl:mR}),lO={kernelName:ws,backendName:"webgl",kernelFunc:H5};var gb=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=e.map((c,p)=>c[0]+t[p]+c[1]);let n=t.length,s=Rt(n),i=e.map(c=>c[0]).join(","),a=e.map((c,p)=>c[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=o==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var xb=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((h,d)=>h[0]+t[d]+h[1]);let n=t.length,s=Rt(n),i=e.map(h=>h[0]).join(","),a=e.map((h,d)=>h[0]+t[d]).join(","),l=Ae("rc",n),u=Ae("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,m=o==="reflect"?0:1,f="";if(n===1){let h=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let h=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[n-1]} += 1;
        if(${c}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[n-2]} += 1;
        if(${l[n-2]} < ${this.outputShape[n-2]}) {
          ${h}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[n-1]} += 1;
          if(${c}) {
            ${h}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var K5=({inputs:r,backend:t,attrs:e})=>{let{x:o}=r,{paddings:n,mode:s}=e,i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xb(o.shape,n,s):new gb(o.shape,n,s);return t.runWebGLProgram(i,[o],o.dtype)},uO={kernelName:Bi,backendName:"webgl",kernelFunc:K5};var q5=`if (b == 0.0) return NAN;
  return mod(a, b);`,j5=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Wn+`
  return result;
`,X5=Wt({opSnippet:q5,packedOpSnippet:j5}),cO={kernelName:Cs,backendName:"webgl",kernelFunc:X5};var yb=class{constructor(t,e,o){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,o],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var Y5=`
if (a == b) {
  return 1.0;
};
return a / b;`,Z5=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,FT=Wt({opSnippet:Y5,packedOpSnippet:Z5,checkOutOfBounds:!0}),pO={kernelName:is,backendName:"webgl",kernelFunc:FT};var mO="return a - b;",_T=Wt({opSnippet:mO,packedOpSnippet:mO,supportsComplex:!0,cpuKernelImpl:RR}),fO={kernelName:Ps,backendName:"webgl",kernelFunc:_T};function OT(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{dim:s}=o,i=y.parseAxisParam([s],n.shape),a=RT({inputs:{x:n},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),l=N.expandShapeToKeepDim(a.shape,i),u=Q({inputs:{x:a},backend:e,attrs:{shape:l}}),c=_T({inputs:{a:n,b:u},backend:e}),p=$T({inputs:{x:c},backend:e}),m=Yl({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),f=Q({inputs:{x:m},backend:e,attrs:{shape:l}}),h=FT({inputs:{a:p,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),h}var hO={kernelName:oa,backendName:"webgl",kernelFunc:OT};function J5(r){let{inputs:t,backend:e,attrs:o}=r,{logits:n}=t,{numSamples:s,seed:i,normalized:a}=o,l=a?n:OT({inputs:{logits:n},backend:e,attrs:{dim:n.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new yb(u,c,s),m=[[i]],f=e.runWebGLProgram(p,[l],"int32",m);return a||e.disposeIntermediateTensorInfo(l),f}var dO={kernelName:zu,backendName:"webgl",kernelFunc:J5};var Q5=We+`
  return -x;
`,t8=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function e8(r){let{inputs:t,backend:e}=r,{x:o}=t;if(e.shouldExecuteOnCPU([o])){let s=e.texData.get(o.dataId),[i,a]=hR(s.values,o.shape,o.dtype);return e.makeTensorInfo(a,o.dtype,i)}let n;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?n=new Xr(o.shape,t8):n=new lr(o.shape,Q5),e.runWebGLProgram(n,[o],o.dtype)}var gO={kernelName:Vi,backendName:"webgl",kernelFunc:e8};var r8=hr.nonMaxSuppressionV3Impl;function o8(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=o,u=e.readSync(n.dataId),c=e.readSync(s.dataId),{selectedIndices:p}=r8(u,c,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var xO={kernelName:Mu,backendName:"webgl",kernelFunc:o8};var n8=hr.nonMaxSuppressionV4Impl;function s8(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=o,c=e.readSync(n.dataId),p=e.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=n8(c,p,i,a,l,u);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var yO={kernelName:Bu,backendName:"webgl",kernelFunc:s8};var i8=hr.nonMaxSuppressionV5Impl;function a8(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:o}=r,{boxes:n,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=o,c=e.readSync(n.dataId),p=e.readSync(s.dataId),m=i,f=a,h=l,d=u,{selectedIndices:g,selectedScores:x}=i8(c,p,m,f,h,d);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var bO={kernelName:Vu,backendName:"webgl",kernelFunc:a8};var bb=class{constructor(t,e,o,n){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${o}),
                      float(index == coords.y)));
      }
    `}};var l8=r=>{let{inputs:t,backend:e,attrs:o}=r,{indices:n}=t,{dtype:s,depth:i,onValue:a,offValue:l}=o,u=y.sizeFromShape(n.shape),c=new bb(u,i,a,l),p=Q({inputs:{x:n},backend:e,attrs:{shape:[u]}}),m=e.runWebGLProgram(c,[p],s);e.disposeIntermediateTensorInfo(p);let f=[...n.shape,i],h=Q({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(m),h},wO={kernelName:Wi,backendName:"webgl",kernelFunc:l8};function vh(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="complex64"){let n=li({inputs:{input:o},backend:e}),s=vh({inputs:{x:n},backend:e}),i=Jl({inputs:{input:o},backend:e}),a=vh({inputs:{x:i},backend:e}),l=Yr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return ui({attrs:{shape:o.shape,dtype:o.dtype,value:o.dtype==="string"?"":0},backend:e})}var CO={kernelName:ia,backendName:"webgl",kernelFunc:vh};function TO(r){let{inputs:t,backend:e}=r,{x:o}=t;if(o.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(o.dtype==="complex64"){let n=li({inputs:{input:o},backend:e}),s=TO({inputs:{x:n},backend:e}),i=Jl({inputs:{input:o},backend:e}),a=vh({inputs:{x:i},backend:e}),l=Yr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(n),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return ui({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:e})}var IO={kernelName:Gi,backendName:"webgl",kernelFunc:TO};function u8(r){let{inputs:t,backend:e,attrs:o}=r,{axis:n}=o;if(t.length===1)return ob({inputs:{input:t[0]},backend:e,attrs:{dim:n}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{y.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=ob({inputs:{input:c},backend:e,attrs:{dim:n}});return a.push(p),p}),u=ET({inputs:l,backend:e,attrs:{axis:n}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var SO={kernelName:Ui,backendName:"webgl",kernelFunc:u8};var wb=class{constructor(t,e,o){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);let n=t.length,s=Rt(n),i=e.map(u=>u[0]).join(","),a=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var Cb=class{constructor(t,e,o){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((d,g)=>d[0]+t[g]+d[1]);let n=t.length,s=Rt(n),i=e.map(d=>d[0]).join(","),a=e.map((d,g)=>d[0]+t[g]).join(","),l=Ae("rc",n),u=Ae("source",n),c=`${l[n-1]} < ${this.outputShape[n-1]}`,p=n===1?"source":`vec2(${u.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[n-1]} += 1;
       if(${c}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${l[n-2]} += 1;
       if(${l[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${l[n-1]} += 1;
         if(${c}) {`],f=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let d=0,g=n===1?2:4;d<g;d++)h+=`
        ${m[d]}
        if (${f}) {
          result[${d}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${d}] = getChannel(getX(${u.join()}), ${p});
        }
      `;h+=n===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}};var LT=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{paddings:s,constantValue:i}=o;if(y.sizeFromShape(n.shape)===0){let u=s.map((c,p)=>c[0]+n.shape[p]+c[1]);return ui({backend:e,attrs:{shape:u,value:i,dtype:n.dtype}})}let a=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cb(n.shape,s,i):new wb(n.shape,s,i),l=[[i]];return e.runWebGLProgram(a,[n],n.dtype,l)},vO={kernelName:Hi,backendName:"webgl",kernelFunc:LT};var c8=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,p8=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Wn+`
  return result;
`,m8=Wt({opSnippet:c8,packedOpSnippet:p8}),NO={kernelName:Is,backendName:"webgl",kernelFunc:m8};function f8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{axis:s,keepDims:i}=o,a=n.shape.length,l=[],u=y.parseAxisParam(s,n.shape),c=u,p=N.getAxesPermutation(c,a),m=n;p!=null&&(m=pe({inputs:{x:n},backend:e,attrs:{perm:p}}),c=N.getInnerMostAxes(c.length,a),l.push(m)),N.assertAxesAreInnerMostDims("prod",c,a);let f;if(e.shouldExecuteOnCPU([m])){let h=e.texData.get(m.dataId).values,{outVals:d,outShape:g,outDtype:x}=gR(m.shape,m.dtype,h,c);f=e.makeTensorInfo(g,x,d)}else{let[h,d]=N.computeOutAndReduceShapes(m.shape,c),g=y.sizeFromShape(d),x=Q({inputs:{x:m},backend:e,attrs:{shape:[-1,g]}}),b=ul(n.dtype),w=lo(x,b,"prod",e);f=Q({inputs:{x:w},backend:e,attrs:{shape:h}}),l.push(x),l.push(w)}if(i){l.push(f);let h=N.expandShapeToKeepDim(f.shape,u);f=Q({inputs:{x:f},backend:e,attrs:{shape:h}})}return l.forEach(h=>e.disposeIntermediateTensorInfo(h)),f}var kO={kernelName:qi,backendName:"webgl",kernelFunc:f8};function h8(r){let{inputs:t,backend:e,attrs:o}=r,{paramsNestedSplits:n,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=o,l=n.map(x=>e.readSync(x.dataId)),u=n.map(x=>x.shape),c=e.readSync(s.dataId),p=e.readSync(i.dataId),[m,f,h]=xR(l,u,c,s.shape,s.dtype,p,i.shape,a),d=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),g=e.makeTensorInfo(h,s.dtype,f);return d.concat([g])}var EO={kernelName:Gu,backendName:"webgl",kernelFunc:h8};function d8(r){let{inputs:t,backend:e}=r,{starts:o,limits:n,deltas:s}=t,i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[u,c]=yR(i,o.shape,o.dtype,a,n.shape,l,s.shape),p=e.makeTensorInfo([u.length],"int32",u),m=e.makeTensorInfo([c.length],o.dtype,c);return[p,m]}var $O={kernelName:Wu,backendName:"webgl",kernelFunc:d8};function g8(r){let{inputs:t,backend:e,attrs:o}=r,{shape:n,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=o,u=e.readSync(n.dataId),c=e.readSync(s.dataId),p=e.readSync(i.dataId),m=a.map(g=>e.readSync(g.dataId)),f=a.map(g=>g.shape),[h,d]=bR(u,n.shape,c,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(h,s.dtype,d)}var AO={kernelName:Uu,backendName:"webgl",kernelFunc:g8};var PT=r=>{let{backend:t,attrs:e}=r,{start:o,stop:n,step:s,dtype:i}=e,a=wR(o,n,s,i);return t.makeTensorInfo([a.length],i,a)},DO={kernelName:Hu,backendName:"webgl",kernelFunc:PT};var x8="return 1.0 / x;",y8=ht({opSnippet:x8}),RO={kernelName:Ss,backendName:"webgl",kernelFunc:y8};var b8=We+`
  return (x < 0.0) ? 0.0 : x;
`,w8=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,C8=ht({opSnippet:b8,packedOpSnippet:w8}),FO={kernelName:vs,backendName:"webgl",kernelFunc:C8};var T8=We+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,I8=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,S8=ht({opSnippet:T8,packedOpSnippet:I8}),_O={kernelName:Ns,backendName:"webgl",kernelFunc:S8};var Tb=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var Ib=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function v8(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,u]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ib(n.shape,l,u,s,i):new Tb(n.shape,l,u,s,i);return e.runWebGLProgram(c,[n],"float32")}var OO={kernelName:Yi,backendName:"webgl",kernelFunc:v8};var Sb=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,s]=e,[,i,a]=t,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],u=[o&&i>1?i-1:i,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,h=Math.ceil(m)*2+2,d=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${d});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function N8(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o,a=new Sb(s.shape,n.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var LO={kernelName:ju,backendName:"webgl",kernelFunc:N8};var vb=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var Nb=class{constructor(t,e,o,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,o,u];let c=[n&&e>1?a-1:a,n&&o>1?l-1:l],p=[n&&e>1?e-1:e,n&&o>1?o-1:o],m=n?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${o-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function k8(r){let{inputs:t,backend:e,attrs:o}=r,{images:n}=t,{alignCorners:s,halfPixelCenters:i,size:a}=o,[l,u]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Nb(n.shape,l,u,s,i):new vb(n.shape,l,u,s,i);return e.runWebGLProgram(c,[n],n.dtype)}var PO={kernelName:Xi,backendName:"webgl",kernelFunc:k8};var kb=class{constructor(t,e,o){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,n,s]=e,[,i,a]=t,l=[o&&i>1?n-1:n,o&&a>1?s-1:s],u=[o&&i>1?i-1:i,o&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,h=Math.ceil(m)*2+2,d=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${h});
        const int winWidth = int(${d});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${o} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${o} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function E8(r){let{inputs:t,backend:e,attrs:o}=r,{images:n,dy:s}=t,{alignCorners:i}=o,a=new kb(s.shape,n.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var zO={kernelName:qu,backendName:"webgl",kernelFunc:E8};var Eb=class{constructor(t,e){this.variableNames=["x"];let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);if(this.outputShape=t,o===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let n=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,s=t.map((a,l)=>n(l)).join(","),i=Rt(o);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var $b=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let o=t.length;if(o>4)throw new Error(`WebGL backend: Reverse of rank-${o} tensor is not yet supported`);this.outputShape=t;let n=Ae("rc",o),s=`${n[o-1]} + 1 < ${this.outputShape[o-1]}`,i=`${n[o-2]} + 1 < ${this.outputShape[o-2]}`,a=Rt(o);o===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(n.slice())};
          if(${s}){
            result.g = ${u(n.slice())};
          }
          if(${i}) {
            result.b = ${c(n.slice())};
            if(${s}) {
              result.a = ${p(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(h){return m(h)}function u(h){return h[o-1]="("+h[o-1]+" + 1)",m(h)}function c(h){return h[o-2]="("+h[o-2]+" + 1)",m(h)}function p(h){return h[o-1]="("+h[o-1]+" + 1)",h[o-2]="("+h[o-2]+" + 1)",m(h)}function m(h){let d=t.map((b,w)=>f(w,h)),g=d.join(","),x=d.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function f(h,d){return e.indexOf(h)!==-1&&t[h]!==1?`${t[h]} - ${d[h]} - 1`:`${d[h]}`}}};function $8(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{dims:s}=o,i=n.shape.length,a=y.parseAxisParam(s,n.shape);if(i===0)return De({inputs:{x:n},backend:e});let l=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $b(n.shape,a):new Eb(n.shape,a);return e.runWebGLProgram(l,[n],n.dtype)}var MO={kernelName:Zi,backendName:"webgl",kernelFunc:$8};var Ab=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let o=t[1],n=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var BO={kernelName:cc,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:o}=r,{radians:n,fillValue:s,center:i}=t,a=e,l=new Ab(o.shape,s),[u,c]=N.getImageCenter(i,o.shape[1],o.shape[2]),p=[[u,c,Math.sin(n),Math.cos(n)]];return a.runWebGLProgram(l,[o],o.dtype,p)}};var A8=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,D8=ht({opSnippet:A8}),VO={kernelName:ks,backendName:"webgl",kernelFunc:D8};var R8="return inversesqrt(x);",F8=ht({opSnippet:R8,cpuKernelImpl:CR}),GO={kernelName:Es,backendName:"webgl",kernelFunc:F8};var Jp=class{constructor(t,e,o,n,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let l=Rt(s.length),u=Rt(i.length),c="";o===1?c="i":o===2&&(c="i, j");let p=`getIndices(${c})`,m="";n===1?m="i":n===2&&(m="i, coords[1]");let f=`getUpdates(${m})`,h=e>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${s});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function _8(r){let{inputs:t,backend:e,attrs:o}=r,{indices:n,updates:s}=t,{shape:i}=o,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,n,i),m=[p/u,u];if(p===0)return e.makeTensorInfo(i,n.dtype);let f=Q({inputs:{x:n},backend:e,attrs:{shape:[l,a]}}),h=Q({inputs:{x:s},backend:e,attrs:{shape:[l,u]}}),d=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new Jp(l,a,f.shape.length,h.shape.length,c,m),x=e.runWebGLProgram(g,[h,f,d],h.dtype),b=Q({inputs:{x},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(d),b}var WO={kernelName:Xu,backendName:"webgl",kernelFunc:_8};var Db=class{constructor(t,e,o,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,o];let s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=z().getNumber("WEBGL_VERSION")===2?s:i,l=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function O8(r){let{inputs:t,backend:e,attrs:o}=r,{sortedSequence:n,values:s}=t,{side:i}=o,a=new Db(n.shape[0],n.shape[1],s.shape[1],i),l=[[n.shape[1]]];return e.runWebGLProgram(a,[n,s],"int32",l)}var UO={kernelName:Yu,backendName:"webgl",kernelFunc:O8};var Rb=class{constructor(t,e,o){this.variableNames=["c","a","b"],this.outputShape=e;let n,s;if(o>4)throw Error(`Where for rank ${o} is not yet supported`);if(o===1)s="resRC",n="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${a[c]}`),c<t&&l.push(`${a[c]}`);n=l.join(),s=u.join()}let i=Rt(o);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function L8(r){let{inputs:t,backend:e}=r,{condition:o,t:n,e:s}=t,i=new Rb(o.shape.length,n.shape,n.shape.length);return e.runWebGLProgram(i,[o,n,s],Le(n.dtype,s.dtype))}var HO={kernelName:Ji,backendName:"webgl",kernelFunc:L8};var P8=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,z8=ht({opSnippet:P8}),KO={kernelName:$s,backendName:"webgl",kernelFunc:z8};var M8=Ho+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,B8=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,V8=ht({opSnippet:M8,packedOpSnippet:B8,cpuKernelImpl:IR}),qO={kernelName:Fs,backendName:"webgl",kernelFunc:V8};var G8=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,W8=ht({opSnippet:G8}),jO={kernelName:Rs,backendName:"webgl",kernelFunc:W8};var U8=Ho+`
  return sin(x);
`,H8=ht({opSnippet:U8}),XO={kernelName:As,backendName:"webgl",kernelFunc:H8};var K8=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,q8=ht({opSnippet:K8}),YO={kernelName:Ds,backendName:"webgl",kernelFunc:q8};var j8=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,X8=ht({opSnippet:j8}),ZO={kernelName:_s,backendName:"webgl",kernelFunc:X8};var Y8=r=>{let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{blockShape:s,paddings:i}=o;y.assert(n.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,b)=>x*b),l=[[0,0]];l.push(...i);for(let x=1+s.length;x<n.shape.length;++x)l.push([0,0]);let u=[],c=LT({inputs:{x:n},backend:e,attrs:{paddings:l,constantValue:0}}),p=N.getReshaped(c.shape,s,a,!1),m=N.getPermuted(p.length,s.length,!1),f=N.getReshapedPermuted(c.shape,s,a,!1),h=Q({inputs:{x:c},backend:e,attrs:{shape:p}}),d=pe({inputs:{x:h},backend:e,attrs:{perm:m}}),g=Q({inputs:{x:d},backend:e,attrs:{shape:f}});return u.push(c),u.push(h),u.push(d),u.forEach(x=>e.disposeIntermediateTensorInfo(x)),g},JO={kernelName:ea,backendName:"webgl",kernelFunc:Y8};function Z8(r){let{inputs:t,backend:e}=r,{indices:o,values:n,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${o.shape}`);if(n.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${n.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.readSync(o.dataId),l=e.readSync(n.dataId),u=e.readSync(s.dataId),c=e.readSync(i.dataId)[0],[p,m,f,h,d]=vR(a,o.shape,o.dtype,l,n.dtype,u,c);return[e.makeTensorInfo(m,o.dtype,p),e.makeTensorInfo([m[0]],n.dtype,f),e.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(g=>Number(g)))),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}var QO={kernelName:Zu,backendName:"webgl",kernelFunc:Z8};function J8(r){let{inputs:t,backend:e}=r,{inputIndices:o,inputShape:n,newShape:s}=t;if(o.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${o.shape}`);if(n.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${n.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.readSync(n.dataId)),a=e.readSync(o.dataId),l=Array.from(e.readSync(s.dataId)),[u,c,p]=NR(a,o.shape,o.dtype,i,l);return[e.makeTensorInfo(c,o.dtype,u),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var tL={kernelName:Ju,backendName:"webgl",kernelFunc:J8};function Q8(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[u,c]=dy(i,o.shape,o.dtype,a,l,!0);return e.makeTensorInfo(c,o.dtype,u)}var eL={kernelName:Qu,backendName:"webgl",kernelFunc:Q8};function tY(r){let{inputs:t,backend:e}=r,{data:o,indices:n,segmentIds:s}=t;if(o.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(n.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${n.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=e.readSync(o.dataId),a=e.readSync(n.dataId),l=e.readSync(s.dataId),[u,c]=dy(i,o.shape,o.dtype,a,l);return e.makeTensorInfo(c,o.dtype,u)}var rL={kernelName:tc,backendName:"webgl",kernelFunc:tY};function eY(r){let{inputs:t,backend:e,attrs:o}=r,{sparseIndices:n,sparseValues:s,defaultValue:i}=t,{outputShape:a}=o,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=N.calculateShapes(s,n,a),f=!1;if(s.dtype==="string"){let x=e.bufferSync(n),b=e.bufferSync(s),w=y.decodeString(e.readSync(i.dataId)[0]),C=TR(x,b,a,m,c,u,l,p,w,f);return e.makeTensorInfo(a,C.dtype,C.values)}let h=new Jp(u,l,n.shape.length,s.shape.length,p,[m,1],f),d=e.runWebGLProgram(h,[s,n,i],s.dtype),g=Q({inputs:{x:d},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(d),g}var oL={kernelName:ec,backendName:"webgl",kernelFunc:eY};function rY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{numOrSizeSplits:s,axis:i}=o,a=y.parseAxisParam(i,n.shape)[0],l=N.prepareSplitSize(n,s,a),u=n.shape.length,c=new Array(u).fill(0),p=n.shape.slice();return l.map(m=>{let f=[...p];f[a]=m;let h=pn({inputs:{x:n},backend:e,attrs:{begin:c,size:f}});return c[a]+=m,h})}var nL={kernelName:ra,backendName:"webgl",kernelFunc:rY};var sL="return sqrt(x);",oY=ht({opSnippet:sL,packedOpSnippet:sL,cpuKernelImpl:kR}),iL={kernelName:Os,backendName:"webgl",kernelFunc:oY};var nY="return x * x;",sY=ht({opSnippet:nY}),aL={kernelName:rc,backendName:"webgl",kernelFunc:sY};var lL="return (a - b) * (a - b);",iY=Wt({opSnippet:lL,packedOpSnippet:lL}),uL={kernelName:Ls,backendName:"webgl",kernelFunc:iY};function aY({inputs:r,attrs:t,backend:e}){let{x:o}=r,n=We+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new lr(o.shape,n);return e.runWebGLProgram(s,[o],o.dtype)}var cL={kernelName:Bs,backendName:"webgl",kernelFunc:aY};var Fb=class{constructor(t,e,o){this.variableNames=["x"],this.outputShape=o;let n=o.length,s=Rt(o.length),i=Rt(o.length),a="";if(n===1)a="coords * strides + begin";else{let l=0;a=o.map((u,c)=>(l++,o.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function lY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=o,{finalShapeSparse:f,finalShape:h,isIdentity:d,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:C}=Ze.sliceInfo(n.shape,s,i,a,l,u,c,p,m),v;if(d)v=Q({inputs:{x:n},backend:e,attrs:{shape:h}});else if(g||x){y.assert(n.shape.length>=1,()=>`Input must have rank at least 1, got: ${n.shape.length}`);let R=Ze.computeOutShape(b,w,C),F=pn({inputs:{x:n},backend:e,attrs:{begin:b,size:R}});v=Q({inputs:{x:F},backend:e,attrs:{shape:h}}),e.disposeIntermediateTensorInfo(F)}else if(e.shouldExecuteOnCPU([n])){let F=e.readSync(n.dataId),O=mt(n.shape,n.dtype,F),P=ER(f,O,C,b);v=e.makeTensorInfo(h,n.dtype,P.values)}else{let F=new Fb(b,C,f);v=e.runWebGLProgram(F,[n],n.dtype)}let $=Q({inputs:{x:v},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(v),$}var pL={kernelName:oc,backendName:"webgl",kernelFunc:lY};function uY(r){let{inputs:t,backend:e,attrs:o}=r,{separator:n,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=o,{data:c,dataSplits:p}=t,m=e.readSync(c.dataId),f=e.readSync(p.dataId),[h,d]=$R(m,f,n,s,i,a,l,u);return[e.makeTensorInfo([h.length],"string",h),e.makeTensorInfo(p.shape,"int32",d)]}var mL={kernelName:nc,backendName:"webgl",kernelFunc:uY};function cY(r){let{inputs:t,backend:e,attrs:o}=r,{skipEmpty:n}=o,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.readSync(s.dataId),l=e.readSync(i.dataId)[0],[u,c,p]=AR(a,l,n),m=c.length;return[e.makeTensorInfo([m,2],"int32",u),e.makeTensorInfo([m],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var fL={kernelName:sc,backendName:"webgl",kernelFunc:cY};function pY(r){let{inputs:t,backend:e,attrs:o}=r,{numBuckets:n}=o,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(n<=0)throw new Error("Number of buckets must be at least 1");let i=e.readSync(s.dataId),a=DR(i,n);return e.makeTensorInfo(s.shape,"int32",a)}var hL={kernelName:ic,backendName:"webgl",kernelFunc:pY};var mY="return tan(x);",fY=ht({opSnippet:mY}),dL={kernelName:zs,backendName:"webgl",kernelFunc:fY};var hY=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,dY=ht({opSnippet:hY}),gL={kernelName:Ms,backendName:"webgl",kernelFunc:dY};var _b=class{constructor(t,e){this.variableNames=["A"];let o=new Array(t.length);for(let i=0;i<o.length;i++)o[i]=t[i]*e[i];this.outputShape=o,this.rank=o.length;let n=Rt(this.rank),s=gY(t);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function gY(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],o=[];for(let n=0;n<r.length;n++)o.push(`imod(${e[n]}, ${r[n]})`);return o.join()}function zT(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{reps:s}=o;if(n.dtype==="string"||n.shape.length>5){let l=e.readSync(n.dataId),u=n.dtype==="string"?l.map(m=>y.decodeString(m)):l,c=mt(n.shape,n.dtype,u),p=FR(c,s);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new _b(n.shape,s);return e.runWebGLProgram(i,[n],n.dtype)}var xL={kernelName:dn,backendName:"webgl",kernelFunc:zT};var Ob=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Lb=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function tu(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function yL(r){let t=1;for(;t<r;)t*=2;return t}function xY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n}=t,{k:s,sorted:i}=o,a=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=n.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([n])||c<a||s>l){let P=e.readSync(n.dataId),[B,V]=_R(P,u,n.dtype,s,i);return[e.makeTensorInfo(B.shape,B.dtype,B.values),e.makeTensorInfo(V.shape,V.dtype,V.values)]}if(s===0)return u[u.length-1]=0,[e.makeTensorInfo(u,n.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(c===1)return[n,ui({attrs:{shape:u,dtype:"int32",value:0},backend:e})];let p=e.texData.get(n.dataId),m=p!==null&&p.isPacked,f=m?e.unpackTensor(n):n,d=y.sizeFromShape(u)/c,g=Q({inputs:{x:f},attrs:{shape:[d,c]},backend:e});m&&tu(e,f);let x=yL(s),b=yL(c),w=null,C=()=>w===null?[g,g]:[g,w],v=(P,B,V)=>{let G=C(),H=new Ob(V),j=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[P],[B]],Z=w;w=e.runWebGLProgram(H,G,"int32",j),tu(e,Z)};for(let P=1;P<x;P*=2){let B=P*2;for(let V=P;V>=1;V/=2)v(B,V,[d,b])}for(let P=b;P>x;P/=2){let B=C(),V=new Lb([d,P/2]),H=[[c],[w===null?1:0],[x]],W=w;w=e.runWebGLProgram(V,B,"int32",H),tu(e,W);let j=x/2,Z=j*2;for(let q=j;q>=1;q/=2)v(Z,q,w.shape)}let $=w;w=pn({inputs:{x:w},backend:e,attrs:{begin:0,size:[d,s]}}),tu(e,$);let R=DT({inputs:{x:g,indices:w},backend:e,attrs:{axis:1,batchDims:1}});tu(e,g);let F=u.slice(0,-1);F.push(s),$=w,w=Q({inputs:{x:w},attrs:{shape:F},backend:e}),tu(e,$);let O=R;return R=Q({inputs:{x:R},attrs:{shape:F},backend:e}),tu(e,O),[R,w]}var bL={kernelName:ac,backendName:"webgl",kernelFunc:xY};var Pb=class{constructor(t,e,o,n,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let a=o==="nearest"?1:2,l;switch(n){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function yY(r){let{inputs:t,backend:e,attrs:o}=r,{image:n,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=o,[c,p,m,f]=n.shape,[h,d]=u??[p,m],g=[c,h,d,f],x=new Pb(p,m,i,a,l,g);return e.runWebGLProgram(x,[n,s],"float32")}var wL={kernelName:lc,backendName:"webgl",kernelFunc:yY};function bY(r){let{inputs:t,attrs:e,backend:o}=r,{axis:n}=e,{x:s}=t;Vn(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=o.readSync(s.dataId),{outputValues:a,outputShape:l,indices:u}=OR(i,n,s.shape,s.dtype);return[o.makeTensorInfo(l,s.dtype,a),o.makeTensorInfo([u.length],"int32",u)]}var CL={kernelName:uc,backendName:"webgl",kernelFunc:bY};function wY(r){let{inputs:t,backend:e,attrs:o}=r,{value:n}=t,{axis:s}=o;s<0&&(s+=n.shape.length);let i=n,a=i.shape.length,l=n.shape[s],u=new Array(a-1),c=0;for(let d=0;d<a;d++)d!==s&&(u[c++]=i.shape[d]);let p=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let h=new Array(l);for(let d=0;d<h.length;d++){m[s]=d;let g=pn({inputs:{x:i},backend:e,attrs:{begin:m,size:f}}),x=Q({inputs:{x:g},backend:e,attrs:{shape:u}});h[d]=x,p.push(g)}return p.forEach(d=>e.disposeIntermediateTensorInfo(d)),h}var TL={kernelName:na,backendName:"webgl",kernelFunc:wY};var zb=class{constructor(t,e){this.variableNames=["x","segmentIds"];let o=t.windowSize,n=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/o);this.outputShape=[n,a];let l="0.0",u="sumValue",c=Math.floor(o/4)*4,p=o%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%o>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let h="";s%o>0&&(h=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${o}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function CY(r){let{inputs:t,backend:e,attrs:o}=r,{x:n,segmentIds:s}=t,{numSegments:i}=o,a=n.shape.length,l=[],u=0,c=N.getAxesPermutation([u],a),p=n;c!=null&&(p=pe({inputs:{x:n},backend:e,attrs:{perm:c}}),l.push(p),u=N.getInnerMostAxes(1,a)[0]);let m=N.segment_util.computeOutShape(p.shape,u,i),f=y.sizeFromShape([p.shape[u]]),h=Q({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}});l.push(h);let d=ul(n.dtype),g=(C,v,$,R,F)=>{let O=C.shape[0],P=C.shape[1],B=N.segment_util.segOpComputeOptimalWindowSize(P,F),V={windowSize:B,inSize:P,batchSize:O,numSegments:F},G=new zb(V,v),H=e.compileAndRun(G,[C,$],R);if(l.push(H),H.shape[1]===F)return H;let W=PT({backend:e,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),j=zT({inputs:{x:W},backend:e,attrs:{reps:[P/B]}});return l.push(W),l.push(j),g(H,v,j,R,F)},x=g(h,"unsortedSegmentSum",s,d,i),b=Q({inputs:{x},backend:e,attrs:{shape:m}}),w=b;if(c!=null){l.push(b);let C=N.getUndoAxesPermutation(c);w=pe({inputs:{x:w},backend:e,attrs:{perm:C}})}return l.forEach(C=>e.disposeIntermediateTensorInfo(C)),w}var IL={kernelName:sa,backendName:"webgl",kernelFunc:CY};var TY=[lF,cF,pF,mF,hF,dF,gF,xF,wF,CF,TF,IF,SF,vF,NF,kF,EF,$F,AF,DF,RF,_F,OF,LF,BF,GF,WF,JR,HF,qF,jF,XF,YF,ZF,JF,QF,t_,e_,r_,s_,i_,a_,l_,u_,c_,p_,m_,f_,h_,d_,g_,x_,y_,b_,w_,T_,I_,S_,v_,k_,E_,$_,A_,D_,R_,F_,__,O_,ZR,L_,KF,P_,z_,M_,QR,B_,V_,G_,W_,U_,H_,K_,q_,j_,X_,Z_,J_,Q_,tO,eO,rO,nO,iO,aO,lO,uO,cO,dO,rF,gO,xO,yO,bO,PF,wO,IO,SO,vO,NO,tF,kO,EO,$O,AO,DO,zF,pO,RO,FO,_O,nF,OO,LO,PO,zO,MO,BO,VO,GO,WO,UO,HO,KO,qO,jO,XO,YO,FF,hO,ZO,JO,QO,tL,eL,rL,oL,nL,iL,aL,uL,cL,pL,mL,fL,hL,fO,iF,dL,gL,xL,bL,wL,aF,CL,TL,IL,CO];for(let r of TY)Ah(r);var Zr=document.getElementById("video"),Un=document.getElementById("canvas"),Mb=document.createElement("canvas"),SL=Mb.getContext("2d"),SY=document.getElementById("markregions"),vY=document.getElementById("blurnude"),NY=document.getElementById("blursexy"),ur=Un.getContext("2d"),tr={},Vb,Bb=r=>console.log(r),Pr={modelPath:"../model/model.json",videoPath:"../samples/video.webm",minScore:.3,maxResults:50,iouThreshold:.5,outputNodes:["output1","output2","output3"],blurRadius:25,resolution:[1280,720]},kY=["exposed anus","exposed armpits","belly","exposed belly","buttocks","exposed buttocks","female face","male face","feet","exposed feet","breast","exposed breast","vagina","exposed vagina","male breast","exposed male breast"],Nh={person:[6,7],sexy:[1,2,3,4,8,9,10,15],nude:[0,5,11,12,13]};async function EY(r,t,e,o){let n=await r.array(),s=await t.data(),i=await e.data(),a=await Hr.nonMaxSuppressionAsync(n[0],s,Pr.maxResults,Pr.iouThreshold,Pr.minScore),l=await a.data();yt(a);let u=[];for(let p in l){let m=parseInt(p);u.push({score:s[p],id:i[m],class:kY[i[m]],box:[Math.trunc(n[0][m][0]),Math.trunc(n[0][m][1]),Math.trunc(n[0][m][3]-n[0][m][1]),Math.trunc(n[0][m][2]-n[0][m][0])]})}return{input:{width:o.shape[2],height:o.shape[1]},person:u.filter(p=>Nh.person.includes(p.id)).length>0,sexy:u.filter(p=>Nh.sexy.includes(p.id)).length>0,nude:u.filter(p=>Nh.nude.includes(p.id)).length>0,parts:u}}function vL({left:r=0,top:t=0,width:e=0,height:o=0}){e===0||o===0||Un.width===0||Un.height===0||(Mb.width=e/Pr.blurRadius+1,Mb.height=o/Pr.blurRadius+1,SL.imageSmoothingEnabled=!0,SL.drawImage(Un,r,t,e,o,0,0,e/Pr.blurRadius,o/Pr.blurRadius),ur.drawImage(Mb,r,t,e,o))}function $Y({x:r=0,y:t=0,width:e=0,height:o=0,radius:n=8,lineWidth:s=2,color:i="white",title:a="",font:l='16px "Segoe UI"'}){ur.lineWidth=s,ur.beginPath(),ur.moveTo(r+n,t),ur.lineTo(r+e-n,t),ur.quadraticCurveTo(r+e,t,r+e,t+n),ur.lineTo(r+e,t+o-n),ur.quadraticCurveTo(r+e,t+o,r+e-n,t+o),ur.lineTo(r+n,t+o),ur.quadraticCurveTo(r,t+o,r,t+o-n),ur.lineTo(r,t+n),ur.quadraticCurveTo(r,t,r+n,t),ur.closePath(),ur.strokeStyle=i,ur.stroke(),ur.lineWidth=2,ur.fillStyle=i,ur.font=l,ur.fillText(a,r+4,t-4)}function AY(r){for(let t of r.parts)Nh.nude.includes(t.id)&&vY.checked&&vL({left:t.box[0],top:t.box[1],width:t.box[2],height:t.box[3]}),Nh.sexy.includes(t.id)&&NY.checked&&vL({left:t.box[0],top:t.box[1],width:t.box[2],height:t.box[3]}),SY.checked&&$Y({x:t.box[0],y:t.box[1],width:t.box[2],height:t.box[3],title:`${Math.round(100*t.score)}% ${t.class}`})}var MT=0;async function NL(){if(Un.width!==Zr.videoWidth&&(Un.width=Zr.videoWidth),Un.height!==Zr.videoHeight&&(Un.height=Zr.videoHeight),Zr.currentTime!==MT&&Un.width>0&&Vb&&Zr.readyState>=2){MT=Zr.currentTime,tr.buffer=await Qc.fromPixelsAsync(Zr),tr.resize=Pr.resolution[0]>0&&Pr.resolution[1]>0&&(Pr.resolution[0]!==Zr.videoWidth||Pr.resolution[1]!==Zr.videoHeight)?Hr.resizeNearestNeighbor(tr.buffer,[Pr.resolution[1],Pr.resolution[0]]):tr.buffer,tr.cast=X(tr.resize,"float32"),tr.batch=Ne(tr.cast,0);let r=Date.now();[tr.boxes,tr.scores,tr.classes]=await Vb.executeAsync(tr.batch,Pr.outputNodes);let t=Date.now(),e=await EY(tr.boxes,tr.scores,tr.classes,tr.cast);await Qc.toPixels(tr.resize,Un),AY(e),Bb({ts:MT,time:t-r,res:e,t:tr}),Object.keys(tr).forEach(o=>yt(tr[o]))}requestAnimationFrame(NL)}async function DY(){Vr().registryFactory.webgpu&&navigator?.gpu?await Uh("webgpu"):await Uh("webgl"),z().set("WEBGL_USE_SHAPES_UNIFORMS",!0),await WI(),Bb({tf:ng,backend:UI(),available:Vr().registryFactory,flags:z().getFlags()}),Vb=await oC(Pr.modelPath),Bb({model:Vb}),Zr.oncanplay=()=>Bb({video:Zr.src,width:Zr.videoWidth,height:Zr.videoHeight}),Zr.src=Pr.videoPath,await NL()}window.onload=DY;
//# sourceMappingURL=index.js.map
